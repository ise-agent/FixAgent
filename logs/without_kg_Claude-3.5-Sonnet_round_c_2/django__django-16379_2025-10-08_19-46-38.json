{
  "zero_patches": {
    "Location 1 (/root/hy/projects_2/django/django/core/cache/backends/filebased.py lines 91-96)": "\n    def has_key(self, key, version=None):\n        fname = self._key_to_file(key, version)\n        if os.path.exists(fname):\n            try:\n                with open(fname, \"rb\") as f:\n                    return not self._is_expired(f)\n            except FileNotFoundError:\n                # File was deleted between exists check and open (race condition)\n                return False\n        return False\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects_2/django/django/core/cache/backends/filebased.py lines 91-96)": [
      "\ndef has_key(self, key, version=None):\n    fname = self._key_to_file(key, version)\n    if os.path.exists(fname):\n        try:\n            with open(fname, \"rb\") as f:\n                return not self._is_expired(f)\n        except FileNotFoundError:\n            # File was deleted between exists check and open (race condition)\n            return False\n    return False\n",
      "\ndef has_key(self, key, version=None):\n    fname = self._key_to_file(key, version)\n    if os.path.exists(fname):\n        try:\n            with open(fname, \"rb\") as f:\n                return not self._is_expired(f)\n        except FileNotFoundError:\n            # File was deleted between exists check and open (race condition)\n            return False\n    return False\n",
      "\ndef has_key(self, key, version=None):\n    fname = self._key_to_file(key, version)\n    if os.path.exists(fname):\n        try:\n            with open(fname, \"rb\") as f:\n                return not self._is_expired(f)\n        except FileNotFoundError:\n            # File was deleted between exists check and open (race condition)\n            return False\n    return False\n",
      "\ndef has_key(self, key, version=None):\n    fname = self._key_to_file(key, version)\n    if os.path.exists(fname):\n        try:\n            with open(fname, \"rb\") as f:\n                return not self._is_expired(f)\n        except FileNotFoundError:\n            # File was deleted between exists check and open (race condition)\n            return False\n    return False\n",
      "\n    def has_key(self, key, version=None):\n        fname = self._key_to_file(key, version)\n        if os.path.exists(fname):\n            try:\n                with open(fname, \"rb\") as f:\n                    return not self._is_expired(f)\n            except FileNotFoundError:\n                # File was deleted between exists check and open (race condition)\n                return False\n        return False\n",
      "\n    def has_key(self, key, version=None):\n        fname = self._key_to_file(key, version)\n        if os.path.exists(fname):\n            try:\n                with open(fname, \"rb\") as f:\n                    return not self._is_expired(f)\n            except FileNotFoundError:\n                # File was deleted between exists check and open (race condition)\n                return False\n        return False\n",
      "\n    def has_key(self, key, version=None):\n        fname = self._key_to_file(key, version)\n        if os.path.exists(fname):\n            try:\n                with open(fname, \"rb\") as f:\n                    return not self._is_expired(f)\n            except FileNotFoundError:\n                # File was deleted between exists check and open (race condition)\n                return False\n        return False\n",
      "\ndef has_key(self, key, version=None):\n    fname = self._key_to_file(key, version)\n    if os.path.exists(fname):\n        try:\n            with open(fname, \"rb\") as f:\n                return not self._is_expired(f)\n        except FileNotFoundError:\n            # File was deleted between exists check and open (race condition)\n            return False\n    return False\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/django/core/cache/backends/filebased.py b/django/core/cache/backends/filebased.py\nindex 631da49444..0bfddb46d0 100644\n--- a/django/core/cache/backends/filebased.py\n+++ b/django/core/cache/backends/filebased.py\n@@ -88,11 +88,16 @@ class FileBasedCache(BaseCache):\n             return False\n         return True\n \n+\n     def has_key(self, key, version=None):\n         fname = self._key_to_file(key, version)\n         if os.path.exists(fname):\n-            with open(fname, \"rb\") as f:\n-                return not self._is_expired(f)\n+            try:\n+                with open(fname, \"rb\") as f:\n+                    return not self._is_expired(f)\n+            except FileNotFoundError:\n+                # File was deleted between exists check and open (race condition)\n+                return False\n         return False\n \n     def _cull(self):\n",
    "variant_0": "diff --git a/django/core/cache/backends/filebased.py b/django/core/cache/backends/filebased.py\nindex 631da49444..0bfddb46d0 100644\n--- a/django/core/cache/backends/filebased.py\n+++ b/django/core/cache/backends/filebased.py\n@@ -88,11 +88,16 @@ class FileBasedCache(BaseCache):\n             return False\n         return True\n \n+\n     def has_key(self, key, version=None):\n         fname = self._key_to_file(key, version)\n         if os.path.exists(fname):\n-            with open(fname, \"rb\") as f:\n-                return not self._is_expired(f)\n+            try:\n+                with open(fname, \"rb\") as f:\n+                    return not self._is_expired(f)\n+            except FileNotFoundError:\n+                # File was deleted between exists check and open (race condition)\n+                return False\n         return False\n \n     def _cull(self):\n",
    "variant_1": "diff --git a/django/core/cache/backends/filebased.py b/django/core/cache/backends/filebased.py\nindex 631da49444..73f0e65604 100644\n--- a/django/core/cache/backends/filebased.py\n+++ b/django/core/cache/backends/filebased.py\n@@ -88,12 +88,17 @@ class FileBasedCache(BaseCache):\n             return False\n         return True\n \n-    def has_key(self, key, version=None):\n-        fname = self._key_to_file(key, version)\n-        if os.path.exists(fname):\n+\n+def has_key(self, key, version=None):\n+    fname = self._key_to_file(key, version)\n+    if os.path.exists(fname):\n+        try:\n             with open(fname, \"rb\") as f:\n                 return not self._is_expired(f)\n-        return False\n+        except FileNotFoundError:\n+            # File was deleted between exists check and open (race condition)\n+            return False\n+    return False\n \n     def _cull(self):\n         \"\"\"\n",
    "variant_2": "diff --git a/django/core/cache/backends/filebased.py b/django/core/cache/backends/filebased.py\nindex 631da49444..73f0e65604 100644\n--- a/django/core/cache/backends/filebased.py\n+++ b/django/core/cache/backends/filebased.py\n@@ -88,12 +88,17 @@ class FileBasedCache(BaseCache):\n             return False\n         return True\n \n-    def has_key(self, key, version=None):\n-        fname = self._key_to_file(key, version)\n-        if os.path.exists(fname):\n+\n+def has_key(self, key, version=None):\n+    fname = self._key_to_file(key, version)\n+    if os.path.exists(fname):\n+        try:\n             with open(fname, \"rb\") as f:\n                 return not self._is_expired(f)\n-        return False\n+        except FileNotFoundError:\n+            # File was deleted between exists check and open (race condition)\n+            return False\n+    return False\n \n     def _cull(self):\n         \"\"\"\n",
    "variant_3": "diff --git a/django/core/cache/backends/filebased.py b/django/core/cache/backends/filebased.py\nindex 631da49444..73f0e65604 100644\n--- a/django/core/cache/backends/filebased.py\n+++ b/django/core/cache/backends/filebased.py\n@@ -88,12 +88,17 @@ class FileBasedCache(BaseCache):\n             return False\n         return True\n \n-    def has_key(self, key, version=None):\n-        fname = self._key_to_file(key, version)\n-        if os.path.exists(fname):\n+\n+def has_key(self, key, version=None):\n+    fname = self._key_to_file(key, version)\n+    if os.path.exists(fname):\n+        try:\n             with open(fname, \"rb\") as f:\n                 return not self._is_expired(f)\n-        return False\n+        except FileNotFoundError:\n+            # File was deleted between exists check and open (race condition)\n+            return False\n+    return False\n \n     def _cull(self):\n         \"\"\"\n",
    "variant_4": "diff --git a/django/core/cache/backends/filebased.py b/django/core/cache/backends/filebased.py\nindex 631da49444..73f0e65604 100644\n--- a/django/core/cache/backends/filebased.py\n+++ b/django/core/cache/backends/filebased.py\n@@ -88,12 +88,17 @@ class FileBasedCache(BaseCache):\n             return False\n         return True\n \n-    def has_key(self, key, version=None):\n-        fname = self._key_to_file(key, version)\n-        if os.path.exists(fname):\n+\n+def has_key(self, key, version=None):\n+    fname = self._key_to_file(key, version)\n+    if os.path.exists(fname):\n+        try:\n             with open(fname, \"rb\") as f:\n                 return not self._is_expired(f)\n-        return False\n+        except FileNotFoundError:\n+            # File was deleted between exists check and open (race condition)\n+            return False\n+    return False\n \n     def _cull(self):\n         \"\"\"\n",
    "variant_5": "diff --git a/django/core/cache/backends/filebased.py b/django/core/cache/backends/filebased.py\nindex 631da49444..0bfddb46d0 100644\n--- a/django/core/cache/backends/filebased.py\n+++ b/django/core/cache/backends/filebased.py\n@@ -88,11 +88,16 @@ class FileBasedCache(BaseCache):\n             return False\n         return True\n \n+\n     def has_key(self, key, version=None):\n         fname = self._key_to_file(key, version)\n         if os.path.exists(fname):\n-            with open(fname, \"rb\") as f:\n-                return not self._is_expired(f)\n+            try:\n+                with open(fname, \"rb\") as f:\n+                    return not self._is_expired(f)\n+            except FileNotFoundError:\n+                # File was deleted between exists check and open (race condition)\n+                return False\n         return False\n \n     def _cull(self):\n",
    "variant_6": "diff --git a/django/core/cache/backends/filebased.py b/django/core/cache/backends/filebased.py\nindex 631da49444..0bfddb46d0 100644\n--- a/django/core/cache/backends/filebased.py\n+++ b/django/core/cache/backends/filebased.py\n@@ -88,11 +88,16 @@ class FileBasedCache(BaseCache):\n             return False\n         return True\n \n+\n     def has_key(self, key, version=None):\n         fname = self._key_to_file(key, version)\n         if os.path.exists(fname):\n-            with open(fname, \"rb\") as f:\n-                return not self._is_expired(f)\n+            try:\n+                with open(fname, \"rb\") as f:\n+                    return not self._is_expired(f)\n+            except FileNotFoundError:\n+                # File was deleted between exists check and open (race condition)\n+                return False\n         return False\n \n     def _cull(self):\n",
    "variant_7": "diff --git a/django/core/cache/backends/filebased.py b/django/core/cache/backends/filebased.py\nindex 631da49444..0bfddb46d0 100644\n--- a/django/core/cache/backends/filebased.py\n+++ b/django/core/cache/backends/filebased.py\n@@ -88,11 +88,16 @@ class FileBasedCache(BaseCache):\n             return False\n         return True\n \n+\n     def has_key(self, key, version=None):\n         fname = self._key_to_file(key, version)\n         if os.path.exists(fname):\n-            with open(fname, \"rb\") as f:\n-                return not self._is_expired(f)\n+            try:\n+                with open(fname, \"rb\") as f:\n+                    return not self._is_expired(f)\n+            except FileNotFoundError:\n+                # File was deleted between exists check and open (race condition)\n+                return False\n         return False\n \n     def _cull(self):\n",
    "variant_8": "diff --git a/django/core/cache/backends/filebased.py b/django/core/cache/backends/filebased.py\nindex 631da49444..73f0e65604 100644\n--- a/django/core/cache/backends/filebased.py\n+++ b/django/core/cache/backends/filebased.py\n@@ -88,12 +88,17 @@ class FileBasedCache(BaseCache):\n             return False\n         return True\n \n-    def has_key(self, key, version=None):\n-        fname = self._key_to_file(key, version)\n-        if os.path.exists(fname):\n+\n+def has_key(self, key, version=None):\n+    fname = self._key_to_file(key, version)\n+    if os.path.exists(fname):\n+        try:\n             with open(fname, \"rb\") as f:\n                 return not self._is_expired(f)\n-        return False\n+        except FileNotFoundError:\n+            # File was deleted between exists check and open (race condition)\n+            return False\n+    return False\n \n     def _cull(self):\n         \"\"\"\n"
  }
}