{
  "zero_patches": {
    "Location 1 (/root/hy/projects_2/pytest/src/_pytest/nodes.py lines 364-368)": "\n        try:\n            # Use invocation_dir to determine if we should use absolute paths\n            # This ensures consistent path display regardless of current working directory\n            abspath = False\n        except:\n            abspath = True\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects_2/pytest/src/_pytest/nodes.py lines 364-368)": [
      "\n        try:\n            # Use invocation_dir to determine if we should use relative paths\n            # This ensures paths are relative to where pytest was invoked, not current working dir\n            abspath = False\n        except Exception:\n            abspath = True\n",
      "\n        try:\n            # Use invocation_dir to determine if we should use absolute paths\n            # This ensures paths are relative to where pytest was invoked, not current working dir\n            if hasattr(self.config, 'invocation_dir') and self.config.invocation_dir:\n                abspath = False\n            else:\n                abspath = True\n        except (OSError, AttributeError):\n            abspath = True\n",
      "\n        try:\n            # Use invocation_dir to determine if we should use absolute paths\n            # This ensures paths are relative to where pytest was invoked, not current working directory\n            abspath = False\n        except Exception:\n            # Fallback to absolute paths if there are any issues\n            abspath = True\n",
      "\n        try:\n            # Use invocation_dir to determine if we should use relative paths\n            # This ensures paths are relative to where pytest was invoked, not current working dir\n            abspath = False\n        except AttributeError:\n            # Fallback for cases where invocation_dir might not be available\n            abspath = True\n",
      "\n        try:\n            # Use invocation_dir to determine if we can show relative paths\n            # This ensures paths are relative to where pytest was invoked,\n            # not the current working directory which may have changed\n            abspath = self.config.invocation_dir is None\n        except AttributeError:\n            # Fallback for cases where invocation_dir might not be available\n            abspath = True\n",
      "\n        try:\n            # Use invocation_dir to determine if we should use absolute paths\n            # This ensures consistent path representation regardless of current working directory\n            abspath = False\n        except Exception:\n            abspath = True\n",
      "\n        try:\n            # Use invocation_dir to determine if we should use absolute paths\n            # This ensures paths are relative to where pytest was invoked, not current working dir\n            abspath = False\n        except Exception:\n            abspath = True\n",
      "\n        try:\n            # Use invocation_dir to determine if we should use absolute paths\n            # This ensures consistent path display regardless of current working directory\n            abspath = False\n        except AttributeError:\n            # Fallback for cases where invocation_dir might not be available\n            abspath = True\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex 4a79bc861..ca1a64409 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -361,10 +361,15 @@ class Node(metaclass=NodeMeta):\n         else:\n             truncate_locals = True\n \n+\n+        # Use invocation_dir for path resolution instead of current working directory\n+        # This ensures paths are relative to the original directory where pytest was invoked,\n+        # not the current working directory which may have been changed by fixtures\n         try:\n-            os.getcwd()\n+            # Test if we can access the invocation directory\n+            self.config.invocation_dir.check()\n             abspath = False\n-        except OSError:\n+        except (OSError, py.error.Error):\n             abspath = True\n \n         return excinfo.getrepr(\n",
    "variant_0": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex 4a79bc861..836d6b232 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -361,10 +361,12 @@ class Node(metaclass=NodeMeta):\n         else:\n             truncate_locals = True\n \n+\n         try:\n-            os.getcwd()\n+            # Use invocation_dir to determine if we should use absolute paths\n+            # This ensures consistent path display regardless of current working directory\n             abspath = False\n-        except OSError:\n+        except:\n             abspath = True\n \n         return excinfo.getrepr(\n",
    "variant_1": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex 4a79bc861..807ec8b80 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -361,10 +361,12 @@ class Node(metaclass=NodeMeta):\n         else:\n             truncate_locals = True\n \n+\n         try:\n-            os.getcwd()\n+            # Use invocation_dir to determine if we should use relative paths\n+            # This ensures paths are relative to where pytest was invoked, not current working dir\n             abspath = False\n-        except OSError:\n+        except Exception:\n             abspath = True\n \n         return excinfo.getrepr(\n",
    "variant_2": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex 4a79bc861..9f88460a9 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -361,10 +361,15 @@ class Node(metaclass=NodeMeta):\n         else:\n             truncate_locals = True\n \n+\n         try:\n-            os.getcwd()\n-            abspath = False\n-        except OSError:\n+            # Use invocation_dir to determine if we should use absolute paths\n+            # This ensures paths are relative to where pytest was invoked, not current working dir\n+            if hasattr(self.config, 'invocation_dir') and self.config.invocation_dir:\n+                abspath = False\n+            else:\n+                abspath = True\n+        except (OSError, AttributeError):\n             abspath = True\n \n         return excinfo.getrepr(\n",
    "variant_3": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex 4a79bc861..72baccfa9 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -361,10 +361,13 @@ class Node(metaclass=NodeMeta):\n         else:\n             truncate_locals = True\n \n+\n         try:\n-            os.getcwd()\n+            # Use invocation_dir to determine if we should use absolute paths\n+            # This ensures paths are relative to where pytest was invoked, not current working directory\n             abspath = False\n-        except OSError:\n+        except Exception:\n+            # Fallback to absolute paths if there are any issues\n             abspath = True\n \n         return excinfo.getrepr(\n",
    "variant_4": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex 4a79bc861..cdae04770 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -361,10 +361,13 @@ class Node(metaclass=NodeMeta):\n         else:\n             truncate_locals = True\n \n+\n         try:\n-            os.getcwd()\n+            # Use invocation_dir to determine if we should use relative paths\n+            # This ensures paths are relative to where pytest was invoked, not current working dir\n             abspath = False\n-        except OSError:\n+        except AttributeError:\n+            # Fallback for cases where invocation_dir might not be available\n             abspath = True\n \n         return excinfo.getrepr(\n",
    "variant_5": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex 4a79bc861..b484156b2 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -361,10 +361,14 @@ class Node(metaclass=NodeMeta):\n         else:\n             truncate_locals = True\n \n+\n         try:\n-            os.getcwd()\n-            abspath = False\n-        except OSError:\n+            # Use invocation_dir to determine if we can show relative paths\n+            # This ensures paths are relative to where pytest was invoked,\n+            # not the current working directory which may have changed\n+            abspath = self.config.invocation_dir is None\n+        except AttributeError:\n+            # Fallback for cases where invocation_dir might not be available\n             abspath = True\n \n         return excinfo.getrepr(\n",
    "variant_6": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex 4a79bc861..bd90b9f88 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -361,10 +361,12 @@ class Node(metaclass=NodeMeta):\n         else:\n             truncate_locals = True\n \n+\n         try:\n-            os.getcwd()\n+            # Use invocation_dir to determine if we should use absolute paths\n+            # This ensures consistent path representation regardless of current working directory\n             abspath = False\n-        except OSError:\n+        except Exception:\n             abspath = True\n \n         return excinfo.getrepr(\n",
    "variant_7": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex 4a79bc861..364840c41 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -361,10 +361,12 @@ class Node(metaclass=NodeMeta):\n         else:\n             truncate_locals = True\n \n+\n         try:\n-            os.getcwd()\n+            # Use invocation_dir to determine if we should use absolute paths\n+            # This ensures paths are relative to where pytest was invoked, not current working dir\n             abspath = False\n-        except OSError:\n+        except Exception:\n             abspath = True\n \n         return excinfo.getrepr(\n",
    "variant_8": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex 4a79bc861..8c384dc39 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -361,10 +361,13 @@ class Node(metaclass=NodeMeta):\n         else:\n             truncate_locals = True\n \n+\n         try:\n-            os.getcwd()\n+            # Use invocation_dir to determine if we should use absolute paths\n+            # This ensures consistent path display regardless of current working directory\n             abspath = False\n-        except OSError:\n+        except AttributeError:\n+            # Fallback for cases where invocation_dir might not be available\n             abspath = True\n \n         return excinfo.getrepr(\n"
  }
}