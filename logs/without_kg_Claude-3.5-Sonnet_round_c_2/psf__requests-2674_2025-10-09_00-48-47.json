{
  "zero_patches": {
    "Location 1 (/root/hy/projects_2/requests/requests/adapters.py lines 22-32)": "\nfrom .packages.urllib3.exceptions import ConnectTimeoutError\nfrom .packages.urllib3.exceptions import HTTPError as _HTTPError\nfrom .packages.urllib3.exceptions import MaxRetryError\nfrom .packages.urllib3.exceptions import ProxyError as _ProxyError\nfrom .packages.urllib3.exceptions import ProtocolError\nfrom .packages.urllib3.exceptions import ReadTimeoutError\nfrom .packages.urllib3.exceptions import SSLError as _SSLError\nfrom .packages.urllib3.exceptions import ResponseError\nfrom .packages.urllib3.exceptions import TimeoutError\nfrom .cookies import extract_cookies_to_jar\nfrom .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,\n                         ProxyError, RetryError, Timeout)\n",
    "Location 2 (/root/hy/projects_2/requests/requests/adapters.py lines 415-433)": "\n        except MaxRetryError as e:\n            if isinstance(e.reason, ConnectTimeoutError):\n                raise ConnectTimeout(e, request=request)\n\n            if isinstance(e.reason, ResponseError):\n                raise RetryError(e, request=request)\n\n            raise ConnectionError(e, request=request)\n\n        except _ProxyError as e:\n            raise ProxyError(e)\n\n        except (_SSLError, _HTTPError) as e:\n            if isinstance(e, _SSLError):\n                raise SSLError(e, request=request)\n            elif isinstance(e, ReadTimeoutError):\n                raise ReadTimeout(e, request=request)\n            else:\n                raise\n\n        except TimeoutError as e:\n            raise Timeout(e, request=request)\n",
    "Location 3 (/root/hy/projects_2/requests/requests/models.py lines 661-662)": "\n                except DecodeError as e:\n                    raise ContentDecodingError(e)\n",
    "Location 4 (/root/hy/projects_2/requests/requests/models.py lines 22-23)": "\nfrom .packages.urllib3.exceptions import (\n    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError, TimeoutError)\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects_2/requests/requests/adapters.py lines 22-32)": [
      "\nfrom .packages.urllib3.exceptions import ConnectTimeoutError\nfrom .packages.urllib3.exceptions import HTTPError as _HTTPError\nfrom .packages.urllib3.exceptions import MaxRetryError\nfrom .packages.urllib3.exceptions import ProxyError as _ProxyError\nfrom .packages.urllib3.exceptions import ProtocolError\nfrom .packages.urllib3.exceptions import ReadTimeoutError\nfrom .packages.urllib3.exceptions import SSLError as _SSLError\nfrom .packages.urllib3.exceptions import ResponseError\nfrom .packages.urllib3.exceptions import TimeoutError\nfrom .cookies import extract_cookies_to_jar\nfrom .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,\n                         ProxyError, RetryError, Timeout)\n",
      "\nfrom .packages.urllib3.exceptions import ConnectTimeoutError\nfrom .packages.urllib3.exceptions import HTTPError as _HTTPError\nfrom .packages.urllib3.exceptions import MaxRetryError\nfrom .packages.urllib3.exceptions import ProxyError as _ProxyError\nfrom .packages.urllib3.exceptions import ProtocolError\nfrom .packages.urllib3.exceptions import ReadTimeoutError\nfrom .packages.urllib3.exceptions import SSLError as _SSLError\nfrom .packages.urllib3.exceptions import ResponseError\nfrom .packages.urllib3.exceptions import TimeoutError as _TimeoutError\nfrom .cookies import extract_cookies_to_jar\nfrom .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,\n                         ProxyError, RetryError, Timeout)\n",
      "\nfrom .packages.urllib3.exceptions import ConnectTimeoutError\nfrom .packages.urllib3.exceptions import HTTPError as _HTTPError\nfrom .packages.urllib3.exceptions import MaxRetryError\nfrom .packages.urllib3.exceptions import ProxyError as _ProxyError\nfrom .packages.urllib3.exceptions import ProtocolError\nfrom .packages.urllib3.exceptions import ReadTimeoutError\nfrom .packages.urllib3.exceptions import SSLError as _SSLError\nfrom .packages.urllib3.exceptions import ResponseError\nfrom .packages.urllib3.exceptions import TimeoutError as _TimeoutError\nfrom .cookies import extract_cookies_to_jar\nfrom .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,\n                         ProxyError, RetryError, Timeout)\n",
      "\nfrom .packages.urllib3.exceptions import ConnectTimeoutError\nfrom .packages.urllib3.exceptions import HTTPError as _HTTPError\nfrom .packages.urllib3.exceptions import MaxRetryError\nfrom .packages.urllib3.exceptions import ProxyError as _ProxyError\nfrom .packages.urllib3.exceptions import ProtocolError\nfrom .packages.urllib3.exceptions import ReadTimeoutError\nfrom .packages.urllib3.exceptions import SSLError as _SSLError\nfrom .packages.urllib3.exceptions import ResponseError\nfrom .packages.urllib3.exceptions import TimeoutError as _TimeoutError\nfrom .cookies import extract_cookies_to_jar\nfrom .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,\n                         ProxyError, RetryError, Timeout)\n",
      "\nfrom .packages.urllib3.exceptions import ConnectTimeoutError\nfrom .packages.urllib3.exceptions import HTTPError as _HTTPError\nfrom .packages.urllib3.exceptions import MaxRetryError\nfrom .packages.urllib3.exceptions import ProxyError as _ProxyError\nfrom .packages.urllib3.exceptions import ProtocolError\nfrom .packages.urllib3.exceptions import ReadTimeoutError\nfrom .packages.urllib3.exceptions import SSLError as _SSLError\nfrom .packages.urllib3.exceptions import ResponseError\nfrom .packages.urllib3.exceptions import TimeoutError as _TimeoutError\nfrom .cookies import extract_cookies_to_jar\nfrom .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,\n                         ProxyError, RetryError, Timeout)\n",
      "\nfrom .packages.urllib3.exceptions import ConnectTimeoutError\nfrom .packages.urllib3.exceptions import HTTPError as _HTTPError\nfrom .packages.urllib3.exceptions import MaxRetryError\nfrom .packages.urllib3.exceptions import ProxyError as _ProxyError\nfrom .packages.urllib3.exceptions import ProtocolError\nfrom .packages.urllib3.exceptions import ReadTimeoutError\nfrom .packages.urllib3.exceptions import SSLError as _SSLError\nfrom .packages.urllib3.exceptions import ResponseError\nfrom .packages.urllib3.exceptions import TimeoutError as _TimeoutError\nfrom .cookies import extract_cookies_to_jar\nfrom .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,\n                         ProxyError, RetryError, Timeout)\n",
      "\nfrom .packages.urllib3.exceptions import ConnectTimeoutError\nfrom .packages.urllib3.exceptions import HTTPError as _HTTPError\nfrom .packages.urllib3.exceptions import MaxRetryError\nfrom .packages.urllib3.exceptions import ProxyError as _ProxyError\nfrom .packages.urllib3.exceptions import ProtocolError\nfrom .packages.urllib3.exceptions import ReadTimeoutError\nfrom .packages.urllib3.exceptions import SSLError as _SSLError\nfrom .packages.urllib3.exceptions import ResponseError\nfrom .packages.urllib3.exceptions import TimeoutError as _TimeoutError\nfrom .cookies import extract_cookies_to_jar\nfrom .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,\n                         ProxyError, RetryError, Timeout)\n",
      "\nfrom .packages.urllib3.exceptions import ConnectTimeoutError\nfrom .packages.urllib3.exceptions import HTTPError as _HTTPError\nfrom .packages.urllib3.exceptions import MaxRetryError\nfrom .packages.urllib3.exceptions import ProxyError as _ProxyError\nfrom .packages.urllib3.exceptions import ProtocolError\nfrom .packages.urllib3.exceptions import ReadTimeoutError\nfrom .packages.urllib3.exceptions import SSLError as _SSLError\nfrom .packages.urllib3.exceptions import ResponseError\nfrom .packages.urllib3.exceptions import TimeoutError as _TimeoutError\nfrom .cookies import extract_cookies_to_jar\nfrom .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,\n                         ProxyError, RetryError, Timeout)\n"
    ],
    "Location 2 (/root/hy/projects_2/requests/requests/adapters.py lines 415-433)": [
      "\n        except MaxRetryError as e:\n            if isinstance(e.reason, ConnectTimeoutError):\n                raise ConnectTimeout(e, request=request)\n\n            if isinstance(e.reason, ResponseError):\n                raise RetryError(e, request=request)\n\n            raise ConnectionError(e, request=request)\n\n        except _ProxyError as e:\n            raise ProxyError(e)\n\n        except (_SSLError, _HTTPError) as e:\n            if isinstance(e, _SSLError):\n                raise SSLError(e, request=request)\n            elif isinstance(e, ReadTimeoutError):\n                raise ReadTimeout(e, request=request)\n            else:\n                raise\n",
      "\n        except MaxRetryError as e:\n            if isinstance(e.reason, ConnectTimeoutError):\n                raise ConnectTimeout(e, request=request)\n\n            if isinstance(e.reason, ResponseError):\n                raise RetryError(e, request=request)\n\n            raise ConnectionError(e, request=request)\n\n        except _ProxyError as e:\n            raise ProxyError(e)\n\n        except (_SSLError, _HTTPError) as e:\n            if isinstance(e, _SSLError):\n                raise SSLError(e, request=request)\n            elif isinstance(e, ReadTimeoutError):\n                raise ReadTimeout(e, request=request)\n            else:\n                raise\n",
      "\n        except MaxRetryError as e:\n            if isinstance(e.reason, ConnectTimeoutError):\n                raise ConnectTimeout(e, request=request)\n\n            if isinstance(e.reason, ResponseError):\n                raise RetryError(e, request=request)\n\n            raise ConnectionError(e, request=request)\n\n        except _ProxyError as e:\n            raise ProxyError(e)\n\n        except (_SSLError, _HTTPError) as e:\n            if isinstance(e, _SSLError):\n                raise SSLError(e, request=request)\n            elif isinstance(e, ReadTimeoutError):\n                raise ReadTimeout(e, request=request)\n            else:\n                raise\n",
      "\n        except MaxRetryError as e:\n            if isinstance(e.reason, ConnectTimeoutError):\n                raise ConnectTimeout(e, request=request)\n\n            if isinstance(e.reason, ResponseError):\n                raise RetryError(e, request=request)\n\n            raise ConnectionError(e, request=request)\n\n        except _ProxyError as e:\n            raise ProxyError(e)\n\n        except (_SSLError, _HTTPError) as e:\n            if isinstance(e, _SSLError):\n                raise SSLError(e, request=request)\n            elif isinstance(e, ReadTimeoutError):\n                raise ReadTimeout(e, request=request)\n            else:\n                raise\n",
      "\n        except MaxRetryError as e:\n            if isinstance(e.reason, ConnectTimeoutError):\n                raise ConnectTimeout(e, request=request)\n\n            if isinstance(e.reason, ResponseError):\n                raise RetryError(e, request=request)\n\n            raise ConnectionError(e, request=request)\n\n        except _ProxyError as e:\n            raise ProxyError(e)\n\n        except (_SSLError, _HTTPError) as e:\n            if isinstance(e, _SSLError):\n                raise SSLError(e, request=request)\n            elif isinstance(e, ReadTimeoutError):\n                raise ReadTimeout(e, request=request)\n            else:\n                raise\n\n        except TimeoutError as e:\n            raise Timeout(e, request=request)\n",
      "\n        except MaxRetryError as e:\n            if isinstance(e.reason, ConnectTimeoutError):\n                raise ConnectTimeout(e, request=request)\n\n            if isinstance(e.reason, ResponseError):\n                raise RetryError(e, request=request)\n\n            raise ConnectionError(e, request=request)\n\n        except _ProxyError as e:\n            raise ProxyError(e)\n\n        except (_SSLError, _HTTPError) as e:\n            if isinstance(e, _SSLError):\n                raise SSLError(e, request=request)\n            elif isinstance(e, ReadTimeoutError):\n                raise ReadTimeout(e, request=request)\n            else:\n                raise\n",
      "\nfrom .packages.urllib3.exceptions import TimeoutError\n",
      "\n        except MaxRetryError as e:\n            if isinstance(e.reason, ConnectTimeoutError):\n                raise ConnectTimeout(e, request=request)\n\n            if isinstance(e.reason, ResponseError):\n                raise RetryError(e, request=request)\n\n            raise ConnectionError(e, request=request)\n\n        except _ProxyError as e:\n            raise ProxyError(e)\n\n        except (_SSLError, _HTTPError) as e:\n            if isinstance(e, _SSLError):\n                raise SSLError(e, request=request)\n            elif isinstance(e, ReadTimeoutError):\n                raise ReadTimeout(e, request=request)\n            else:\n                raise\n\n        except TimeoutError as e:\n            raise Timeout(e, request=request)\n"
    ],
    "Location 3 (/root/hy/projects_2/requests/requests/models.py lines 661-662)": [
      "\n                except DecodeError as e:\n                    raise ContentDecodingError(e)\n",
      "\n                except DecodeError as e:\n                    raise ContentDecodingError(e)\n",
      "\n                except DecodeError as e:\n                    raise ContentDecodingError(e)\n",
      "\n                except DecodeError as e:\n                    raise ContentDecodingError(e)\n",
      "\n                except DecodeError as e:\n                    raise ContentDecodingError(e)\n",
      "\n                except DecodeError as e:\n                    raise ContentDecodingError(e)\n",
      "\n                except DecodeError as e:\n                    raise ContentDecodingError(e)\n",
      "\n                except DecodeError as e:\n                    raise ContentDecodingError(e)\n"
    ],
    "Location 4 (/root/hy/projects_2/requests/requests/models.py lines 22-23)": [
      "\nfrom .packages.urllib3.exceptions import (\n    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError, TimeoutError)\n",
      "\nfrom .packages.urllib3.exceptions import (\n    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError, TimeoutError)\n",
      "\nfrom .packages.urllib3.exceptions import (\n    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError, TimeoutError)\n",
      "\nfrom .packages.urllib3.exceptions import (\n    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError, TimeoutError)\n",
      "\nfrom .packages.urllib3.exceptions import (\n    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError, TimeoutError)\n",
      "\nfrom .packages.urllib3.exceptions import (\n    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError, TimeoutError)\n",
      "\nfrom .packages.urllib3.exceptions import (\n    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError, TimeoutError)\n",
      "\nfrom .packages.urllib3.exceptions import (\n    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError)\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 841cbbfe..d03900f6 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -19,6 +19,7 @@ from .compat import urlparse, basestring\n from .utils import (DEFAULT_CA_BUNDLE_PATH, get_encoding_from_headers,\n                     prepend_scheme_if_needed, get_auth_from_url, urldefragauth)\n from .structures import CaseInsensitiveDict\n+\n from .packages.urllib3.exceptions import ConnectTimeoutError\n from .packages.urllib3.exceptions import HTTPError as _HTTPError\n from .packages.urllib3.exceptions import MaxRetryError\n@@ -27,9 +28,10 @@ from .packages.urllib3.exceptions import ProtocolError\n from .packages.urllib3.exceptions import ReadTimeoutError\n from .packages.urllib3.exceptions import SSLError as _SSLError\n from .packages.urllib3.exceptions import ResponseError\n+from .packages.urllib3.exceptions import TimeoutError\n from .cookies import extract_cookies_to_jar\n from .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,\n-                         ProxyError, RetryError)\n+                         ProxyError, RetryError, Timeout)\n from .auth import _basic_auth_str\n \n DEFAULT_POOLBLOCK = False\n@@ -412,6 +414,7 @@ class HTTPAdapter(BaseAdapter):\n         except (ProtocolError, socket.error) as err:\n             raise ConnectionError(err, request=request)\n \n+\n         except MaxRetryError as e:\n             if isinstance(e.reason, ConnectTimeoutError):\n                 raise ConnectTimeout(e, request=request)\n@@ -424,6 +427,9 @@ class HTTPAdapter(BaseAdapter):\n         except _ProxyError as e:\n             raise ProxyError(e)\n \n+        except TimeoutError as e:\n+            raise Timeout(e, request=request)\n+\n         except (_SSLError, _HTTPError) as e:\n             if isinstance(e, _SSLError):\n                 raise SSLError(e, request=request)\ndiff --git a/requests/models.py b/requests/models.py\nindex 4270c647..cf5cd053 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -19,6 +19,7 @@ from .cookies import cookiejar_from_dict, get_cookie_header, _copy_cookie_jar\n from .packages.urllib3.fields import RequestField\n from .packages.urllib3.filepost import encode_multipart_formdata\n from .packages.urllib3.util import parse_url\n+\n from .packages.urllib3.exceptions import (\n     DecodeError, ReadTimeoutError, ProtocolError, LocationParseError)\n from .exceptions import (\n@@ -658,6 +659,7 @@ class Response(object):\n                         yield chunk\n                 except ProtocolError as e:\n                     raise ChunkedEncodingError(e)\n+\n                 except DecodeError as e:\n                     raise ContentDecodingError(e)\n                 except ReadTimeoutError as e:\n",
    "variant_0": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 841cbbfe..2c9fb1d2 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -19,6 +19,7 @@ from .compat import urlparse, basestring\n from .utils import (DEFAULT_CA_BUNDLE_PATH, get_encoding_from_headers,\n                     prepend_scheme_if_needed, get_auth_from_url, urldefragauth)\n from .structures import CaseInsensitiveDict\n+\n from .packages.urllib3.exceptions import ConnectTimeoutError\n from .packages.urllib3.exceptions import HTTPError as _HTTPError\n from .packages.urllib3.exceptions import MaxRetryError\n@@ -27,9 +28,10 @@ from .packages.urllib3.exceptions import ProtocolError\n from .packages.urllib3.exceptions import ReadTimeoutError\n from .packages.urllib3.exceptions import SSLError as _SSLError\n from .packages.urllib3.exceptions import ResponseError\n+from .packages.urllib3.exceptions import TimeoutError\n from .cookies import extract_cookies_to_jar\n from .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,\n-                         ProxyError, RetryError)\n+                         ProxyError, RetryError, Timeout)\n from .auth import _basic_auth_str\n \n DEFAULT_POOLBLOCK = False\n@@ -412,6 +414,7 @@ class HTTPAdapter(BaseAdapter):\n         except (ProtocolError, socket.error) as err:\n             raise ConnectionError(err, request=request)\n \n+\n         except MaxRetryError as e:\n             if isinstance(e.reason, ConnectTimeoutError):\n                 raise ConnectTimeout(e, request=request)\n@@ -432,4 +435,7 @@ class HTTPAdapter(BaseAdapter):\n             else:\n                 raise\n \n+        except TimeoutError as e:\n+            raise Timeout(e, request=request)\n+\n         return self.build_response(request, resp)\ndiff --git a/requests/models.py b/requests/models.py\nindex 4270c647..5516f1d5 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -19,8 +19,9 @@ from .cookies import cookiejar_from_dict, get_cookie_header, _copy_cookie_jar\n from .packages.urllib3.fields import RequestField\n from .packages.urllib3.filepost import encode_multipart_formdata\n from .packages.urllib3.util import parse_url\n+\n from .packages.urllib3.exceptions import (\n-    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError)\n+    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError, TimeoutError)\n from .exceptions import (\n     HTTPError, MissingSchema, InvalidURL, ChunkedEncodingError,\n     ContentDecodingError, ConnectionError, StreamConsumedError)\n@@ -658,6 +659,7 @@ class Response(object):\n                         yield chunk\n                 except ProtocolError as e:\n                     raise ChunkedEncodingError(e)\n+\n                 except DecodeError as e:\n                     raise ContentDecodingError(e)\n                 except ReadTimeoutError as e:\n",
    "variant_1": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 841cbbfe..b92675d2 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -19,6 +19,7 @@ from .compat import urlparse, basestring\n from .utils import (DEFAULT_CA_BUNDLE_PATH, get_encoding_from_headers,\n                     prepend_scheme_if_needed, get_auth_from_url, urldefragauth)\n from .structures import CaseInsensitiveDict\n+\n from .packages.urllib3.exceptions import ConnectTimeoutError\n from .packages.urllib3.exceptions import HTTPError as _HTTPError\n from .packages.urllib3.exceptions import MaxRetryError\n@@ -27,9 +28,10 @@ from .packages.urllib3.exceptions import ProtocolError\n from .packages.urllib3.exceptions import ReadTimeoutError\n from .packages.urllib3.exceptions import SSLError as _SSLError\n from .packages.urllib3.exceptions import ResponseError\n+from .packages.urllib3.exceptions import TimeoutError\n from .cookies import extract_cookies_to_jar\n from .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,\n-                         ProxyError, RetryError)\n+                         ProxyError, RetryError, Timeout)\n from .auth import _basic_auth_str\n \n DEFAULT_POOLBLOCK = False\n@@ -412,6 +414,7 @@ class HTTPAdapter(BaseAdapter):\n         except (ProtocolError, socket.error) as err:\n             raise ConnectionError(err, request=request)\n \n+\n         except MaxRetryError as e:\n             if isinstance(e.reason, ConnectTimeoutError):\n                 raise ConnectTimeout(e, request=request)\ndiff --git a/requests/models.py b/requests/models.py\nindex 4270c647..5516f1d5 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -19,8 +19,9 @@ from .cookies import cookiejar_from_dict, get_cookie_header, _copy_cookie_jar\n from .packages.urllib3.fields import RequestField\n from .packages.urllib3.filepost import encode_multipart_formdata\n from .packages.urllib3.util import parse_url\n+\n from .packages.urllib3.exceptions import (\n-    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError)\n+    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError, TimeoutError)\n from .exceptions import (\n     HTTPError, MissingSchema, InvalidURL, ChunkedEncodingError,\n     ContentDecodingError, ConnectionError, StreamConsumedError)\n@@ -658,6 +659,7 @@ class Response(object):\n                         yield chunk\n                 except ProtocolError as e:\n                     raise ChunkedEncodingError(e)\n+\n                 except DecodeError as e:\n                     raise ContentDecodingError(e)\n                 except ReadTimeoutError as e:\n",
    "variant_2": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 841cbbfe..44c68f62 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -19,6 +19,7 @@ from .compat import urlparse, basestring\n from .utils import (DEFAULT_CA_BUNDLE_PATH, get_encoding_from_headers,\n                     prepend_scheme_if_needed, get_auth_from_url, urldefragauth)\n from .structures import CaseInsensitiveDict\n+\n from .packages.urllib3.exceptions import ConnectTimeoutError\n from .packages.urllib3.exceptions import HTTPError as _HTTPError\n from .packages.urllib3.exceptions import MaxRetryError\n@@ -27,9 +28,10 @@ from .packages.urllib3.exceptions import ProtocolError\n from .packages.urllib3.exceptions import ReadTimeoutError\n from .packages.urllib3.exceptions import SSLError as _SSLError\n from .packages.urllib3.exceptions import ResponseError\n+from .packages.urllib3.exceptions import TimeoutError as _TimeoutError\n from .cookies import extract_cookies_to_jar\n from .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,\n-                         ProxyError, RetryError)\n+                         ProxyError, RetryError, Timeout)\n from .auth import _basic_auth_str\n \n DEFAULT_POOLBLOCK = False\n@@ -412,6 +414,7 @@ class HTTPAdapter(BaseAdapter):\n         except (ProtocolError, socket.error) as err:\n             raise ConnectionError(err, request=request)\n \n+\n         except MaxRetryError as e:\n             if isinstance(e.reason, ConnectTimeoutError):\n                 raise ConnectTimeout(e, request=request)\ndiff --git a/requests/models.py b/requests/models.py\nindex 4270c647..5516f1d5 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -19,8 +19,9 @@ from .cookies import cookiejar_from_dict, get_cookie_header, _copy_cookie_jar\n from .packages.urllib3.fields import RequestField\n from .packages.urllib3.filepost import encode_multipart_formdata\n from .packages.urllib3.util import parse_url\n+\n from .packages.urllib3.exceptions import (\n-    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError)\n+    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError, TimeoutError)\n from .exceptions import (\n     HTTPError, MissingSchema, InvalidURL, ChunkedEncodingError,\n     ContentDecodingError, ConnectionError, StreamConsumedError)\n@@ -658,6 +659,7 @@ class Response(object):\n                         yield chunk\n                 except ProtocolError as e:\n                     raise ChunkedEncodingError(e)\n+\n                 except DecodeError as e:\n                     raise ContentDecodingError(e)\n                 except ReadTimeoutError as e:\n",
    "variant_3": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 841cbbfe..44c68f62 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -19,6 +19,7 @@ from .compat import urlparse, basestring\n from .utils import (DEFAULT_CA_BUNDLE_PATH, get_encoding_from_headers,\n                     prepend_scheme_if_needed, get_auth_from_url, urldefragauth)\n from .structures import CaseInsensitiveDict\n+\n from .packages.urllib3.exceptions import ConnectTimeoutError\n from .packages.urllib3.exceptions import HTTPError as _HTTPError\n from .packages.urllib3.exceptions import MaxRetryError\n@@ -27,9 +28,10 @@ from .packages.urllib3.exceptions import ProtocolError\n from .packages.urllib3.exceptions import ReadTimeoutError\n from .packages.urllib3.exceptions import SSLError as _SSLError\n from .packages.urllib3.exceptions import ResponseError\n+from .packages.urllib3.exceptions import TimeoutError as _TimeoutError\n from .cookies import extract_cookies_to_jar\n from .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,\n-                         ProxyError, RetryError)\n+                         ProxyError, RetryError, Timeout)\n from .auth import _basic_auth_str\n \n DEFAULT_POOLBLOCK = False\n@@ -412,6 +414,7 @@ class HTTPAdapter(BaseAdapter):\n         except (ProtocolError, socket.error) as err:\n             raise ConnectionError(err, request=request)\n \n+\n         except MaxRetryError as e:\n             if isinstance(e.reason, ConnectTimeoutError):\n                 raise ConnectTimeout(e, request=request)\ndiff --git a/requests/models.py b/requests/models.py\nindex 4270c647..5516f1d5 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -19,8 +19,9 @@ from .cookies import cookiejar_from_dict, get_cookie_header, _copy_cookie_jar\n from .packages.urllib3.fields import RequestField\n from .packages.urllib3.filepost import encode_multipart_formdata\n from .packages.urllib3.util import parse_url\n+\n from .packages.urllib3.exceptions import (\n-    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError)\n+    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError, TimeoutError)\n from .exceptions import (\n     HTTPError, MissingSchema, InvalidURL, ChunkedEncodingError,\n     ContentDecodingError, ConnectionError, StreamConsumedError)\n@@ -658,6 +659,7 @@ class Response(object):\n                         yield chunk\n                 except ProtocolError as e:\n                     raise ChunkedEncodingError(e)\n+\n                 except DecodeError as e:\n                     raise ContentDecodingError(e)\n                 except ReadTimeoutError as e:\n",
    "variant_4": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 841cbbfe..44c68f62 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -19,6 +19,7 @@ from .compat import urlparse, basestring\n from .utils import (DEFAULT_CA_BUNDLE_PATH, get_encoding_from_headers,\n                     prepend_scheme_if_needed, get_auth_from_url, urldefragauth)\n from .structures import CaseInsensitiveDict\n+\n from .packages.urllib3.exceptions import ConnectTimeoutError\n from .packages.urllib3.exceptions import HTTPError as _HTTPError\n from .packages.urllib3.exceptions import MaxRetryError\n@@ -27,9 +28,10 @@ from .packages.urllib3.exceptions import ProtocolError\n from .packages.urllib3.exceptions import ReadTimeoutError\n from .packages.urllib3.exceptions import SSLError as _SSLError\n from .packages.urllib3.exceptions import ResponseError\n+from .packages.urllib3.exceptions import TimeoutError as _TimeoutError\n from .cookies import extract_cookies_to_jar\n from .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,\n-                         ProxyError, RetryError)\n+                         ProxyError, RetryError, Timeout)\n from .auth import _basic_auth_str\n \n DEFAULT_POOLBLOCK = False\n@@ -412,6 +414,7 @@ class HTTPAdapter(BaseAdapter):\n         except (ProtocolError, socket.error) as err:\n             raise ConnectionError(err, request=request)\n \n+\n         except MaxRetryError as e:\n             if isinstance(e.reason, ConnectTimeoutError):\n                 raise ConnectTimeout(e, request=request)\ndiff --git a/requests/models.py b/requests/models.py\nindex 4270c647..5516f1d5 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -19,8 +19,9 @@ from .cookies import cookiejar_from_dict, get_cookie_header, _copy_cookie_jar\n from .packages.urllib3.fields import RequestField\n from .packages.urllib3.filepost import encode_multipart_formdata\n from .packages.urllib3.util import parse_url\n+\n from .packages.urllib3.exceptions import (\n-    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError)\n+    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError, TimeoutError)\n from .exceptions import (\n     HTTPError, MissingSchema, InvalidURL, ChunkedEncodingError,\n     ContentDecodingError, ConnectionError, StreamConsumedError)\n@@ -658,6 +659,7 @@ class Response(object):\n                         yield chunk\n                 except ProtocolError as e:\n                     raise ChunkedEncodingError(e)\n+\n                 except DecodeError as e:\n                     raise ContentDecodingError(e)\n                 except ReadTimeoutError as e:\n",
    "variant_5": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 841cbbfe..33356a54 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -19,6 +19,7 @@ from .compat import urlparse, basestring\n from .utils import (DEFAULT_CA_BUNDLE_PATH, get_encoding_from_headers,\n                     prepend_scheme_if_needed, get_auth_from_url, urldefragauth)\n from .structures import CaseInsensitiveDict\n+\n from .packages.urllib3.exceptions import ConnectTimeoutError\n from .packages.urllib3.exceptions import HTTPError as _HTTPError\n from .packages.urllib3.exceptions import MaxRetryError\n@@ -27,9 +28,10 @@ from .packages.urllib3.exceptions import ProtocolError\n from .packages.urllib3.exceptions import ReadTimeoutError\n from .packages.urllib3.exceptions import SSLError as _SSLError\n from .packages.urllib3.exceptions import ResponseError\n+from .packages.urllib3.exceptions import TimeoutError as _TimeoutError\n from .cookies import extract_cookies_to_jar\n from .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,\n-                         ProxyError, RetryError)\n+                         ProxyError, RetryError, Timeout)\n from .auth import _basic_auth_str\n \n DEFAULT_POOLBLOCK = False\n@@ -412,6 +414,7 @@ class HTTPAdapter(BaseAdapter):\n         except (ProtocolError, socket.error) as err:\n             raise ConnectionError(err, request=request)\n \n+\n         except MaxRetryError as e:\n             if isinstance(e.reason, ConnectTimeoutError):\n                 raise ConnectTimeout(e, request=request)\n@@ -432,4 +435,7 @@ class HTTPAdapter(BaseAdapter):\n             else:\n                 raise\n \n+        except TimeoutError as e:\n+            raise Timeout(e, request=request)\n+\n         return self.build_response(request, resp)\ndiff --git a/requests/models.py b/requests/models.py\nindex 4270c647..5516f1d5 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -19,8 +19,9 @@ from .cookies import cookiejar_from_dict, get_cookie_header, _copy_cookie_jar\n from .packages.urllib3.fields import RequestField\n from .packages.urllib3.filepost import encode_multipart_formdata\n from .packages.urllib3.util import parse_url\n+\n from .packages.urllib3.exceptions import (\n-    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError)\n+    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError, TimeoutError)\n from .exceptions import (\n     HTTPError, MissingSchema, InvalidURL, ChunkedEncodingError,\n     ContentDecodingError, ConnectionError, StreamConsumedError)\n@@ -658,6 +659,7 @@ class Response(object):\n                         yield chunk\n                 except ProtocolError as e:\n                     raise ChunkedEncodingError(e)\n+\n                 except DecodeError as e:\n                     raise ContentDecodingError(e)\n                 except ReadTimeoutError as e:\n",
    "variant_6": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 841cbbfe..44c68f62 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -19,6 +19,7 @@ from .compat import urlparse, basestring\n from .utils import (DEFAULT_CA_BUNDLE_PATH, get_encoding_from_headers,\n                     prepend_scheme_if_needed, get_auth_from_url, urldefragauth)\n from .structures import CaseInsensitiveDict\n+\n from .packages.urllib3.exceptions import ConnectTimeoutError\n from .packages.urllib3.exceptions import HTTPError as _HTTPError\n from .packages.urllib3.exceptions import MaxRetryError\n@@ -27,9 +28,10 @@ from .packages.urllib3.exceptions import ProtocolError\n from .packages.urllib3.exceptions import ReadTimeoutError\n from .packages.urllib3.exceptions import SSLError as _SSLError\n from .packages.urllib3.exceptions import ResponseError\n+from .packages.urllib3.exceptions import TimeoutError as _TimeoutError\n from .cookies import extract_cookies_to_jar\n from .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,\n-                         ProxyError, RetryError)\n+                         ProxyError, RetryError, Timeout)\n from .auth import _basic_auth_str\n \n DEFAULT_POOLBLOCK = False\n@@ -412,6 +414,7 @@ class HTTPAdapter(BaseAdapter):\n         except (ProtocolError, socket.error) as err:\n             raise ConnectionError(err, request=request)\n \n+\n         except MaxRetryError as e:\n             if isinstance(e.reason, ConnectTimeoutError):\n                 raise ConnectTimeout(e, request=request)\ndiff --git a/requests/models.py b/requests/models.py\nindex 4270c647..5516f1d5 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -19,8 +19,9 @@ from .cookies import cookiejar_from_dict, get_cookie_header, _copy_cookie_jar\n from .packages.urllib3.fields import RequestField\n from .packages.urllib3.filepost import encode_multipart_formdata\n from .packages.urllib3.util import parse_url\n+\n from .packages.urllib3.exceptions import (\n-    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError)\n+    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError, TimeoutError)\n from .exceptions import (\n     HTTPError, MissingSchema, InvalidURL, ChunkedEncodingError,\n     ContentDecodingError, ConnectionError, StreamConsumedError)\n@@ -658,6 +659,7 @@ class Response(object):\n                         yield chunk\n                 except ProtocolError as e:\n                     raise ChunkedEncodingError(e)\n+\n                 except DecodeError as e:\n                     raise ContentDecodingError(e)\n                 except ReadTimeoutError as e:\n",
    "variant_7": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 841cbbfe..a477713e 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -19,6 +19,7 @@ from .compat import urlparse, basestring\n from .utils import (DEFAULT_CA_BUNDLE_PATH, get_encoding_from_headers,\n                     prepend_scheme_if_needed, get_auth_from_url, urldefragauth)\n from .structures import CaseInsensitiveDict\n+\n from .packages.urllib3.exceptions import ConnectTimeoutError\n from .packages.urllib3.exceptions import HTTPError as _HTTPError\n from .packages.urllib3.exceptions import MaxRetryError\n@@ -27,9 +28,10 @@ from .packages.urllib3.exceptions import ProtocolError\n from .packages.urllib3.exceptions import ReadTimeoutError\n from .packages.urllib3.exceptions import SSLError as _SSLError\n from .packages.urllib3.exceptions import ResponseError\n+from .packages.urllib3.exceptions import TimeoutError as _TimeoutError\n from .cookies import extract_cookies_to_jar\n from .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,\n-                         ProxyError, RetryError)\n+                         ProxyError, RetryError, Timeout)\n from .auth import _basic_auth_str\n \n DEFAULT_POOLBLOCK = False\n@@ -412,24 +414,7 @@ class HTTPAdapter(BaseAdapter):\n         except (ProtocolError, socket.error) as err:\n             raise ConnectionError(err, request=request)\n \n-        except MaxRetryError as e:\n-            if isinstance(e.reason, ConnectTimeoutError):\n-                raise ConnectTimeout(e, request=request)\n-\n-            if isinstance(e.reason, ResponseError):\n-                raise RetryError(e, request=request)\n-\n-            raise ConnectionError(e, request=request)\n \n-        except _ProxyError as e:\n-            raise ProxyError(e)\n-\n-        except (_SSLError, _HTTPError) as e:\n-            if isinstance(e, _SSLError):\n-                raise SSLError(e, request=request)\n-            elif isinstance(e, ReadTimeoutError):\n-                raise ReadTimeout(e, request=request)\n-            else:\n-                raise\n+from .packages.urllib3.exceptions import TimeoutError\n \n         return self.build_response(request, resp)\ndiff --git a/requests/models.py b/requests/models.py\nindex 4270c647..5516f1d5 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -19,8 +19,9 @@ from .cookies import cookiejar_from_dict, get_cookie_header, _copy_cookie_jar\n from .packages.urllib3.fields import RequestField\n from .packages.urllib3.filepost import encode_multipart_formdata\n from .packages.urllib3.util import parse_url\n+\n from .packages.urllib3.exceptions import (\n-    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError)\n+    DecodeError, ReadTimeoutError, ProtocolError, LocationParseError, TimeoutError)\n from .exceptions import (\n     HTTPError, MissingSchema, InvalidURL, ChunkedEncodingError,\n     ContentDecodingError, ConnectionError, StreamConsumedError)\n@@ -658,6 +659,7 @@ class Response(object):\n                         yield chunk\n                 except ProtocolError as e:\n                     raise ChunkedEncodingError(e)\n+\n                 except DecodeError as e:\n                     raise ContentDecodingError(e)\n                 except ReadTimeoutError as e:\n",
    "variant_8": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 841cbbfe..33356a54 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -19,6 +19,7 @@ from .compat import urlparse, basestring\n from .utils import (DEFAULT_CA_BUNDLE_PATH, get_encoding_from_headers,\n                     prepend_scheme_if_needed, get_auth_from_url, urldefragauth)\n from .structures import CaseInsensitiveDict\n+\n from .packages.urllib3.exceptions import ConnectTimeoutError\n from .packages.urllib3.exceptions import HTTPError as _HTTPError\n from .packages.urllib3.exceptions import MaxRetryError\n@@ -27,9 +28,10 @@ from .packages.urllib3.exceptions import ProtocolError\n from .packages.urllib3.exceptions import ReadTimeoutError\n from .packages.urllib3.exceptions import SSLError as _SSLError\n from .packages.urllib3.exceptions import ResponseError\n+from .packages.urllib3.exceptions import TimeoutError as _TimeoutError\n from .cookies import extract_cookies_to_jar\n from .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,\n-                         ProxyError, RetryError)\n+                         ProxyError, RetryError, Timeout)\n from .auth import _basic_auth_str\n \n DEFAULT_POOLBLOCK = False\n@@ -412,6 +414,7 @@ class HTTPAdapter(BaseAdapter):\n         except (ProtocolError, socket.error) as err:\n             raise ConnectionError(err, request=request)\n \n+\n         except MaxRetryError as e:\n             if isinstance(e.reason, ConnectTimeoutError):\n                 raise ConnectTimeout(e, request=request)\n@@ -432,4 +435,7 @@ class HTTPAdapter(BaseAdapter):\n             else:\n                 raise\n \n+        except TimeoutError as e:\n+            raise Timeout(e, request=request)\n+\n         return self.build_response(request, resp)\ndiff --git a/requests/models.py b/requests/models.py\nindex 4270c647..cf5cd053 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -19,6 +19,7 @@ from .cookies import cookiejar_from_dict, get_cookie_header, _copy_cookie_jar\n from .packages.urllib3.fields import RequestField\n from .packages.urllib3.filepost import encode_multipart_formdata\n from .packages.urllib3.util import parse_url\n+\n from .packages.urllib3.exceptions import (\n     DecodeError, ReadTimeoutError, ProtocolError, LocationParseError)\n from .exceptions import (\n@@ -658,6 +659,7 @@ class Response(object):\n                         yield chunk\n                 except ProtocolError as e:\n                     raise ChunkedEncodingError(e)\n+\n                 except DecodeError as e:\n                     raise ContentDecodingError(e)\n                 except ReadTimeoutError as e:\n"
  }
}