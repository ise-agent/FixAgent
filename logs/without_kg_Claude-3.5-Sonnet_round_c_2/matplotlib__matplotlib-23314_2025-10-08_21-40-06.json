{
  "zero_patches": {
    "Location 1 (/root/hy/projects_2/matplotlib/lib/mpl_toolkits/mplot3d/axes3d.py lines 388-394)": "\n    @martist.allow_rasterization\n    def draw(self, renderer):\n        self._unstale_viewLim()\n\n        if not self.get_visible():\n            return\n\n        # draw the background patch\n        self.patch.draw(renderer)\n        self._frameon = False\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects_2/matplotlib/lib/mpl_toolkits/mplot3d/axes3d.py lines 388-394)": [
      "\n    @martist.allow_rasterization\n    def draw(self, renderer):\n        self._unstale_viewLim()\n\n        if not self.get_visible():\n            return\n\n        # draw the background patch\n        self.patch.draw(renderer)\n        self._frameon = False\n",
      "\n    @martist.allow_rasterization\n    def draw(self, renderer):\n        self._unstale_viewLim()\n\n        if not self.get_visible():\n            return\n\n        # draw the background patch\n        self.patch.draw(renderer)\n        self._frameon = False\n",
      "\n    @martist.allow_rasterization\n    def draw(self, renderer):\n        self._unstale_viewLim()\n\n        if not self.get_visible():\n            return\n\n        # draw the background patch\n        self.patch.draw(renderer)\n        self._frameon = False\n",
      "\n    @martist.allow_rasterization\n    def draw(self, renderer):\n        self._unstale_viewLim()\n\n        if not self.get_visible():\n            return\n\n        # draw the background patch\n        self.patch.draw(renderer)\n        self._frameon = False\n",
      "\n    @martist.allow_rasterization\n    def draw(self, renderer):\n        self._unstale_viewLim()\n\n        if not self.get_visible():\n            return\n\n        # draw the background patch\n        self.patch.draw(renderer)\n        self._frameon = False\n",
      "\n    @martist.allow_rasterization\n    def draw(self, renderer):\n        self._unstale_viewLim()\n\n        if not self.get_visible():\n            return\n\n        # draw the background patch\n        self.patch.draw(renderer)\n        self._frameon = False\n",
      "\n    @martist.allow_rasterization\n    def draw(self, renderer):\n        self._unstale_viewLim()\n\n        if not self.get_visible():\n            return\n\n        # draw the background patch\n        self.patch.draw(renderer)\n        self._frameon = False\n",
      "\n    @martist.allow_rasterization\n    def draw(self, renderer):\n        self._unstale_viewLim()\n\n        if not self.get_visible():\n            return\n\n        # draw the background patch\n        self.patch.draw(renderer)\n        self._frameon = False\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/lib/mpl_toolkits/mplot3d/axes3d.py b/lib/mpl_toolkits/mplot3d/axes3d.py\nindex 9db44b7994..5cb346eacd 100644\n--- a/lib/mpl_toolkits/mplot3d/axes3d.py\n+++ b/lib/mpl_toolkits/mplot3d/axes3d.py\n@@ -385,10 +385,14 @@ class Axes3D(Axes):\n         pb1 = pb.shrunk_to_aspect(box_aspect, pb, fig_aspect)\n         self._set_position(pb1.anchored(self.get_anchor(), pb), 'active')\n \n+\n     @martist.allow_rasterization\n     def draw(self, renderer):\n         self._unstale_viewLim()\n \n+        if not self.get_visible():\n+            return\n+\n         # draw the background patch\n         self.patch.draw(renderer)\n         self._frameon = False\n",
    "variant_0": "diff --git a/lib/mpl_toolkits/mplot3d/axes3d.py b/lib/mpl_toolkits/mplot3d/axes3d.py\nindex 9db44b7994..5cb346eacd 100644\n--- a/lib/mpl_toolkits/mplot3d/axes3d.py\n+++ b/lib/mpl_toolkits/mplot3d/axes3d.py\n@@ -385,10 +385,14 @@ class Axes3D(Axes):\n         pb1 = pb.shrunk_to_aspect(box_aspect, pb, fig_aspect)\n         self._set_position(pb1.anchored(self.get_anchor(), pb), 'active')\n \n+\n     @martist.allow_rasterization\n     def draw(self, renderer):\n         self._unstale_viewLim()\n \n+        if not self.get_visible():\n+            return\n+\n         # draw the background patch\n         self.patch.draw(renderer)\n         self._frameon = False\n",
    "variant_1": "diff --git a/lib/mpl_toolkits/mplot3d/axes3d.py b/lib/mpl_toolkits/mplot3d/axes3d.py\nindex 9db44b7994..5cb346eacd 100644\n--- a/lib/mpl_toolkits/mplot3d/axes3d.py\n+++ b/lib/mpl_toolkits/mplot3d/axes3d.py\n@@ -385,10 +385,14 @@ class Axes3D(Axes):\n         pb1 = pb.shrunk_to_aspect(box_aspect, pb, fig_aspect)\n         self._set_position(pb1.anchored(self.get_anchor(), pb), 'active')\n \n+\n     @martist.allow_rasterization\n     def draw(self, renderer):\n         self._unstale_viewLim()\n \n+        if not self.get_visible():\n+            return\n+\n         # draw the background patch\n         self.patch.draw(renderer)\n         self._frameon = False\n",
    "variant_2": "diff --git a/lib/mpl_toolkits/mplot3d/axes3d.py b/lib/mpl_toolkits/mplot3d/axes3d.py\nindex 9db44b7994..5cb346eacd 100644\n--- a/lib/mpl_toolkits/mplot3d/axes3d.py\n+++ b/lib/mpl_toolkits/mplot3d/axes3d.py\n@@ -385,10 +385,14 @@ class Axes3D(Axes):\n         pb1 = pb.shrunk_to_aspect(box_aspect, pb, fig_aspect)\n         self._set_position(pb1.anchored(self.get_anchor(), pb), 'active')\n \n+\n     @martist.allow_rasterization\n     def draw(self, renderer):\n         self._unstale_viewLim()\n \n+        if not self.get_visible():\n+            return\n+\n         # draw the background patch\n         self.patch.draw(renderer)\n         self._frameon = False\n",
    "variant_3": "diff --git a/lib/mpl_toolkits/mplot3d/axes3d.py b/lib/mpl_toolkits/mplot3d/axes3d.py\nindex 9db44b7994..5cb346eacd 100644\n--- a/lib/mpl_toolkits/mplot3d/axes3d.py\n+++ b/lib/mpl_toolkits/mplot3d/axes3d.py\n@@ -385,10 +385,14 @@ class Axes3D(Axes):\n         pb1 = pb.shrunk_to_aspect(box_aspect, pb, fig_aspect)\n         self._set_position(pb1.anchored(self.get_anchor(), pb), 'active')\n \n+\n     @martist.allow_rasterization\n     def draw(self, renderer):\n         self._unstale_viewLim()\n \n+        if not self.get_visible():\n+            return\n+\n         # draw the background patch\n         self.patch.draw(renderer)\n         self._frameon = False\n",
    "variant_4": "diff --git a/lib/mpl_toolkits/mplot3d/axes3d.py b/lib/mpl_toolkits/mplot3d/axes3d.py\nindex 9db44b7994..5cb346eacd 100644\n--- a/lib/mpl_toolkits/mplot3d/axes3d.py\n+++ b/lib/mpl_toolkits/mplot3d/axes3d.py\n@@ -385,10 +385,14 @@ class Axes3D(Axes):\n         pb1 = pb.shrunk_to_aspect(box_aspect, pb, fig_aspect)\n         self._set_position(pb1.anchored(self.get_anchor(), pb), 'active')\n \n+\n     @martist.allow_rasterization\n     def draw(self, renderer):\n         self._unstale_viewLim()\n \n+        if not self.get_visible():\n+            return\n+\n         # draw the background patch\n         self.patch.draw(renderer)\n         self._frameon = False\n",
    "variant_5": "diff --git a/lib/mpl_toolkits/mplot3d/axes3d.py b/lib/mpl_toolkits/mplot3d/axes3d.py\nindex 9db44b7994..5cb346eacd 100644\n--- a/lib/mpl_toolkits/mplot3d/axes3d.py\n+++ b/lib/mpl_toolkits/mplot3d/axes3d.py\n@@ -385,10 +385,14 @@ class Axes3D(Axes):\n         pb1 = pb.shrunk_to_aspect(box_aspect, pb, fig_aspect)\n         self._set_position(pb1.anchored(self.get_anchor(), pb), 'active')\n \n+\n     @martist.allow_rasterization\n     def draw(self, renderer):\n         self._unstale_viewLim()\n \n+        if not self.get_visible():\n+            return\n+\n         # draw the background patch\n         self.patch.draw(renderer)\n         self._frameon = False\n",
    "variant_6": "diff --git a/lib/mpl_toolkits/mplot3d/axes3d.py b/lib/mpl_toolkits/mplot3d/axes3d.py\nindex 9db44b7994..5cb346eacd 100644\n--- a/lib/mpl_toolkits/mplot3d/axes3d.py\n+++ b/lib/mpl_toolkits/mplot3d/axes3d.py\n@@ -385,10 +385,14 @@ class Axes3D(Axes):\n         pb1 = pb.shrunk_to_aspect(box_aspect, pb, fig_aspect)\n         self._set_position(pb1.anchored(self.get_anchor(), pb), 'active')\n \n+\n     @martist.allow_rasterization\n     def draw(self, renderer):\n         self._unstale_viewLim()\n \n+        if not self.get_visible():\n+            return\n+\n         # draw the background patch\n         self.patch.draw(renderer)\n         self._frameon = False\n",
    "variant_7": "diff --git a/lib/mpl_toolkits/mplot3d/axes3d.py b/lib/mpl_toolkits/mplot3d/axes3d.py\nindex 9db44b7994..5cb346eacd 100644\n--- a/lib/mpl_toolkits/mplot3d/axes3d.py\n+++ b/lib/mpl_toolkits/mplot3d/axes3d.py\n@@ -385,10 +385,14 @@ class Axes3D(Axes):\n         pb1 = pb.shrunk_to_aspect(box_aspect, pb, fig_aspect)\n         self._set_position(pb1.anchored(self.get_anchor(), pb), 'active')\n \n+\n     @martist.allow_rasterization\n     def draw(self, renderer):\n         self._unstale_viewLim()\n \n+        if not self.get_visible():\n+            return\n+\n         # draw the background patch\n         self.patch.draw(renderer)\n         self._frameon = False\n",
    "variant_8": "diff --git a/lib/mpl_toolkits/mplot3d/axes3d.py b/lib/mpl_toolkits/mplot3d/axes3d.py\nindex 9db44b7994..5cb346eacd 100644\n--- a/lib/mpl_toolkits/mplot3d/axes3d.py\n+++ b/lib/mpl_toolkits/mplot3d/axes3d.py\n@@ -385,10 +385,14 @@ class Axes3D(Axes):\n         pb1 = pb.shrunk_to_aspect(box_aspect, pb, fig_aspect)\n         self._set_position(pb1.anchored(self.get_anchor(), pb), 'active')\n \n+\n     @martist.allow_rasterization\n     def draw(self, renderer):\n         self._unstale_viewLim()\n \n+        if not self.get_visible():\n+            return\n+\n         # draw the background patch\n         self.patch.draw(renderer)\n         self._frameon = False\n"
  }
}