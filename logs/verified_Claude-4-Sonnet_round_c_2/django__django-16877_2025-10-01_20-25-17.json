{
  "zero_patches": {
    "Location 1 (/root/hy/projects/django/django/template/defaultfilters.py lines 499-500)": "\n@register.filter(is_safe=True)\ndef escapeseq(value):\n    \"\"\"\n    An \"escape\" filter for sequences. Escape each element in the sequence,\n    individually, after converting them to strings. Return a list\n    with the results.\n    \"\"\"\n    return [escape(obj) for obj in value]\n\n\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects/django/django/template/defaultfilters.py lines 499-500)": [
      "\n@register.filter(is_safe=True)\ndef escapeseq(value):\n    \"\"\"\n    An \"escape\" filter for sequences. Escape each element in the sequence,\n    individually, after converting them to strings. Return a list\n    with the results.\n    \"\"\"\n    return [escape(obj) for obj in value]\n\n\n",
      "\n@register.filter(is_safe=True)\ndef escapeseq(value):\n    \"\"\"\n    An \"escape\" filter for sequences. Escape each element in the sequence,\n    individually, after converting them to strings. Return a list\n    with the results.\n    \"\"\"\n    return [escape(obj) for obj in value]\n\n\n",
      "\n@register.filter(is_safe=True)\ndef escapeseq(value):\n    \"\"\"\n    An \"escape\" filter for sequences. Escape each element in the sequence,\n    individually, after converting them to strings. Return a list\n    with the results.\n    \"\"\"\n    return [escape(obj) for obj in value]\n\n\n",
      "\n@register.filter(is_safe=True)\ndef escapeseq(value):\n    \"\"\"\n    An \"escape\" filter for sequences. Escape each element in the sequence,\n    individually, after converting them to strings. Return a list\n    with the results.\n    \"\"\"\n    return [escape(obj) for obj in value]\n\n\n",
      "\n@register.filter(is_safe=True)\ndef escapeseq(value):\n    \"\"\"\n    An \"escape\" filter for sequences. Escape each element in the sequence,\n    individually, after converting them to strings. Return a list\n    with the results.\n    \"\"\"\n    return [escape(obj) for obj in value]\n\n\n",
      "\n@register.filter(is_safe=True)\ndef escapeseq(value):\n    \"\"\"\n    An \"escape\" filter for sequences. Escape each element in the sequence,\n    individually, after converting them to strings. Return a list\n    with the results.\n    \"\"\"\n    return [escape(obj) for obj in value]\n",
      "\n@register.filter(is_safe=True)\ndef escapeseq(value):\n    \"\"\"\n    An \"escape\" filter for sequences. Escape each element in the sequence,\n    individually, after converting them to strings. Return a list\n    with the results.\n    \"\"\"\n    return [escape(obj) for obj in value]\n\n\n",
      "\n@register.filter(is_safe=True)\ndef escapeseq(value):\n    \"\"\"\n    An \"escape\" filter for sequences. Escape each element in the sequence,\n    individually, after converting them to strings. Return a list\n    with the results.\n    \"\"\"\n    return [escape(obj) for obj in value]\n\n\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 5289ef34a0..e269fc94b7 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -497,6 +497,15 @@ def safeseq(value):\n     \"\"\"\n     return [mark_safe(obj) for obj in value]\n \n+@register.filter(is_safe=True)\n+def escapeseq(value):\n+    \"\"\"\n+    An \"escape\" filter for sequences. Escape each element in the sequence,\n+    individually, after converting them to strings. Return a list\n+    with the results.\n+    \"\"\"\n+    return [escape(obj) for obj in value]\n+\n \n @register.filter(is_safe=True)\n @stringfilter\n",
    "variant_0": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 5289ef34a0..e269fc94b7 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -497,6 +497,15 @@ def safeseq(value):\n     \"\"\"\n     return [mark_safe(obj) for obj in value]\n \n+@register.filter(is_safe=True)\n+def escapeseq(value):\n+    \"\"\"\n+    An \"escape\" filter for sequences. Escape each element in the sequence,\n+    individually, after converting them to strings. Return a list\n+    with the results.\n+    \"\"\"\n+    return [escape(obj) for obj in value]\n+\n \n @register.filter(is_safe=True)\n @stringfilter\n",
    "variant_1": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 5289ef34a0..e269fc94b7 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -497,6 +497,15 @@ def safeseq(value):\n     \"\"\"\n     return [mark_safe(obj) for obj in value]\n \n+@register.filter(is_safe=True)\n+def escapeseq(value):\n+    \"\"\"\n+    An \"escape\" filter for sequences. Escape each element in the sequence,\n+    individually, after converting them to strings. Return a list\n+    with the results.\n+    \"\"\"\n+    return [escape(obj) for obj in value]\n+\n \n @register.filter(is_safe=True)\n @stringfilter\n",
    "variant_2": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 5289ef34a0..e269fc94b7 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -497,6 +497,15 @@ def safeseq(value):\n     \"\"\"\n     return [mark_safe(obj) for obj in value]\n \n+@register.filter(is_safe=True)\n+def escapeseq(value):\n+    \"\"\"\n+    An \"escape\" filter for sequences. Escape each element in the sequence,\n+    individually, after converting them to strings. Return a list\n+    with the results.\n+    \"\"\"\n+    return [escape(obj) for obj in value]\n+\n \n @register.filter(is_safe=True)\n @stringfilter\n",
    "variant_3": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 5289ef34a0..e269fc94b7 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -497,6 +497,15 @@ def safeseq(value):\n     \"\"\"\n     return [mark_safe(obj) for obj in value]\n \n+@register.filter(is_safe=True)\n+def escapeseq(value):\n+    \"\"\"\n+    An \"escape\" filter for sequences. Escape each element in the sequence,\n+    individually, after converting them to strings. Return a list\n+    with the results.\n+    \"\"\"\n+    return [escape(obj) for obj in value]\n+\n \n @register.filter(is_safe=True)\n @stringfilter\n",
    "variant_4": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 5289ef34a0..e269fc94b7 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -497,6 +497,15 @@ def safeseq(value):\n     \"\"\"\n     return [mark_safe(obj) for obj in value]\n \n+@register.filter(is_safe=True)\n+def escapeseq(value):\n+    \"\"\"\n+    An \"escape\" filter for sequences. Escape each element in the sequence,\n+    individually, after converting them to strings. Return a list\n+    with the results.\n+    \"\"\"\n+    return [escape(obj) for obj in value]\n+\n \n @register.filter(is_safe=True)\n @stringfilter\n",
    "variant_5": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 5289ef34a0..e269fc94b7 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -497,6 +497,15 @@ def safeseq(value):\n     \"\"\"\n     return [mark_safe(obj) for obj in value]\n \n+@register.filter(is_safe=True)\n+def escapeseq(value):\n+    \"\"\"\n+    An \"escape\" filter for sequences. Escape each element in the sequence,\n+    individually, after converting them to strings. Return a list\n+    with the results.\n+    \"\"\"\n+    return [escape(obj) for obj in value]\n+\n \n @register.filter(is_safe=True)\n @stringfilter\n",
    "variant_6": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 5289ef34a0..f855a1f43b 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -497,7 +497,14 @@ def safeseq(value):\n     \"\"\"\n     return [mark_safe(obj) for obj in value]\n \n-\n+@register.filter(is_safe=True)\n+def escapeseq(value):\n+    \"\"\"\n+    An \"escape\" filter for sequences. Escape each element in the sequence,\n+    individually, after converting them to strings. Return a list\n+    with the results.\n+    \"\"\"\n+    return [escape(obj) for obj in value]\n @register.filter(is_safe=True)\n @stringfilter\n def striptags(value):\n",
    "variant_7": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 5289ef34a0..e269fc94b7 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -497,6 +497,15 @@ def safeseq(value):\n     \"\"\"\n     return [mark_safe(obj) for obj in value]\n \n+@register.filter(is_safe=True)\n+def escapeseq(value):\n+    \"\"\"\n+    An \"escape\" filter for sequences. Escape each element in the sequence,\n+    individually, after converting them to strings. Return a list\n+    with the results.\n+    \"\"\"\n+    return [escape(obj) for obj in value]\n+\n \n @register.filter(is_safe=True)\n @stringfilter\n",
    "variant_8": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 5289ef34a0..e269fc94b7 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -497,6 +497,15 @@ def safeseq(value):\n     \"\"\"\n     return [mark_safe(obj) for obj in value]\n \n+@register.filter(is_safe=True)\n+def escapeseq(value):\n+    \"\"\"\n+    An \"escape\" filter for sequences. Escape each element in the sequence,\n+    individually, after converting them to strings. Return a list\n+    with the results.\n+    \"\"\"\n+    return [escape(obj) for obj in value]\n+\n \n @register.filter(is_safe=True)\n @stringfilter\n"
  }
}