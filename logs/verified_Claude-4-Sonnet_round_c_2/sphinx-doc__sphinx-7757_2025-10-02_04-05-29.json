{
  "zero_patches": {
    "Location 1 (/root/hy/projects/sphinx/sphinx/util/inspect.py lines 523-527)": "\n    if hasattr(args, \"posonlyargs\"):\n        for i, arg in enumerate(args.posonlyargs):  # type: ignore\n            if i < len(args.defaults):\n                default = ast_unparse(args.defaults[i])\n            else:\n                default = Parameter.empty\n            annotation = ast_unparse(arg.annotation) or Parameter.empty\n            params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,\n                                    default=default, annotation=annotation))\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects/sphinx/sphinx/util/inspect.py lines 523-527)": [
      "\n    if hasattr(args, \"posonlyargs\"):\n        for i, arg in enumerate(args.posonlyargs):  # type: ignore\n            if i < len(args.defaults):\n                default = ast_unparse(args.defaults[i])\n            else:\n                default = Parameter.empty\n            annotation = ast_unparse(arg.annotation) or Parameter.empty\n            params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,\n                                    default=default, annotation=annotation))\n",
      "\n    if hasattr(args, \"posonlyargs\"):\n        for i, arg in enumerate(args.posonlyargs):  # type: ignore\n            if i < len(args.defaults):\n                default = ast_unparse(args.defaults[i])\n            else:\n                default = Parameter.empty\n            annotation = ast_unparse(arg.annotation) or Parameter.empty\n            params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,\n                                    default=default, annotation=annotation))\n",
      "\n    if hasattr(args, \"posonlyargs\"):\n        for i, arg in enumerate(args.posonlyargs):  # type: ignore\n            if len(args.posonlyargs) - i <= len(args.defaults):\n                default = ast_unparse(args.defaults[len(args.defaults) - len(args.posonlyargs) + i])\n            else:\n                default = Parameter.empty\n            annotation = ast_unparse(arg.annotation) or Parameter.empty\n            params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,\n                                    default=default, annotation=annotation))\n",
      "\n    if hasattr(args, \"posonlyargs\"):\n        # Calculate how many positional-only arguments have defaults\n        posonly_defaults_count = min(len(args.defaults), len(args.posonlyargs))\n        \n        for i, arg in enumerate(args.posonlyargs):  # type: ignore\n            # Check if this positional-only argument has a default value\n            if i >= len(args.posonlyargs) - posonly_defaults_count:\n                # Extract default from the beginning of args.defaults\n                default_index = i - (len(args.posonlyargs) - posonly_defaults_count)\n                default = ast_unparse(args.defaults[default_index])\n            else:\n                default = Parameter.empty\n                \n            annotation = ast_unparse(arg.annotation) or Parameter.empty\n            params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,\n                                    default=default, annotation=annotation))\n",
      "\n    if hasattr(args, \"posonlyargs\"):\n        # Calculate how many positional-only arguments have defaults\n        posonly_defaults_count = min(len(args.defaults), len(args.posonlyargs))\n        \n        for i, arg in enumerate(args.posonlyargs):  # type: ignore\n            # Check if this positional-only argument has a default value\n            if i >= len(args.posonlyargs) - posonly_defaults_count:\n                # Calculate the index in the defaults list\n                default_index = i - (len(args.posonlyargs) - posonly_defaults_count)\n                default = ast_unparse(args.defaults[default_index])\n            else:\n                default = Parameter.empty\n                \n            annotation = ast_unparse(arg.annotation) or Parameter.empty\n            params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,\n                                    default=default, annotation=annotation))\n",
      "\n    if hasattr(args, \"posonlyargs\"):\n        posonly_defaults_count = min(len(args.defaults), len(args.posonlyargs))\n        for i, arg in enumerate(args.posonlyargs):  # type: ignore\n            if i >= len(args.posonlyargs) - posonly_defaults_count:\n                default_idx = i - (len(args.posonlyargs) - posonly_defaults_count)\n                default = ast_unparse(args.defaults[default_idx])\n            else:\n                default = Parameter.empty\n            \n            annotation = ast_unparse(arg.annotation) or Parameter.empty\n            params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,\n                                    default=default, annotation=annotation))\n",
      "\n    if hasattr(args, \"posonlyargs\"):\n        for i, arg in enumerate(args.posonlyargs):  # type: ignore\n            if i < len(args.defaults):\n                default = ast_unparse(args.defaults[i])\n            else:\n                default = Parameter.empty\n            annotation = ast_unparse(arg.annotation) or Parameter.empty\n            params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,\n                                    default=default, annotation=annotation))\n",
      "\n    if hasattr(args, \"posonlyargs\"):\n        for i, arg in enumerate(args.posonlyargs):  # type: ignore\n            if i < len(args.defaults):\n                default = ast_unparse(args.defaults[i])\n            else:\n                default = Parameter.empty\n            annotation = ast_unparse(arg.annotation) or Parameter.empty\n            params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,\n                                    default=default, annotation=annotation))\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex 15f0d66e2..d294ebe9d 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -520,11 +520,17 @@ def signature_from_str(signature: str) -> inspect.Signature:\n     args = definition.args\n     params = []\n \n+\n     if hasattr(args, \"posonlyargs\"):\n-        for arg in args.posonlyargs:  # type: ignore\n+        for i, arg in enumerate(args.posonlyargs):  # type: ignore\n+            if i < len(args.defaults):\n+                default = ast_unparse(args.defaults[i])\n+            else:\n+                default = Parameter.empty\n+            \n             annotation = ast_unparse(arg.annotation) or Parameter.empty\n             params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,\n-                                    annotation=annotation))\n+                                    default=default, annotation=annotation))\n \n     for i, arg in enumerate(args.args):\n         if len(args.args) - i <= len(args.defaults):\n",
    "variant_0": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex 15f0d66e2..9117c0551 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -520,11 +520,16 @@ def signature_from_str(signature: str) -> inspect.Signature:\n     args = definition.args\n     params = []\n \n+\n     if hasattr(args, \"posonlyargs\"):\n-        for arg in args.posonlyargs:  # type: ignore\n+        for i, arg in enumerate(args.posonlyargs):  # type: ignore\n+            if i < len(args.defaults):\n+                default = ast_unparse(args.defaults[i])\n+            else:\n+                default = Parameter.empty\n             annotation = ast_unparse(arg.annotation) or Parameter.empty\n             params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,\n-                                    annotation=annotation))\n+                                    default=default, annotation=annotation))\n \n     for i, arg in enumerate(args.args):\n         if len(args.args) - i <= len(args.defaults):\n",
    "variant_1": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex 15f0d66e2..9117c0551 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -520,11 +520,16 @@ def signature_from_str(signature: str) -> inspect.Signature:\n     args = definition.args\n     params = []\n \n+\n     if hasattr(args, \"posonlyargs\"):\n-        for arg in args.posonlyargs:  # type: ignore\n+        for i, arg in enumerate(args.posonlyargs):  # type: ignore\n+            if i < len(args.defaults):\n+                default = ast_unparse(args.defaults[i])\n+            else:\n+                default = Parameter.empty\n             annotation = ast_unparse(arg.annotation) or Parameter.empty\n             params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,\n-                                    annotation=annotation))\n+                                    default=default, annotation=annotation))\n \n     for i, arg in enumerate(args.args):\n         if len(args.args) - i <= len(args.defaults):\n",
    "variant_2": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex 15f0d66e2..9117c0551 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -520,11 +520,16 @@ def signature_from_str(signature: str) -> inspect.Signature:\n     args = definition.args\n     params = []\n \n+\n     if hasattr(args, \"posonlyargs\"):\n-        for arg in args.posonlyargs:  # type: ignore\n+        for i, arg in enumerate(args.posonlyargs):  # type: ignore\n+            if i < len(args.defaults):\n+                default = ast_unparse(args.defaults[i])\n+            else:\n+                default = Parameter.empty\n             annotation = ast_unparse(arg.annotation) or Parameter.empty\n             params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,\n-                                    annotation=annotation))\n+                                    default=default, annotation=annotation))\n \n     for i, arg in enumerate(args.args):\n         if len(args.args) - i <= len(args.defaults):\n",
    "variant_3": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex 15f0d66e2..586044312 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -520,11 +520,16 @@ def signature_from_str(signature: str) -> inspect.Signature:\n     args = definition.args\n     params = []\n \n+\n     if hasattr(args, \"posonlyargs\"):\n-        for arg in args.posonlyargs:  # type: ignore\n+        for i, arg in enumerate(args.posonlyargs):  # type: ignore\n+            if len(args.posonlyargs) - i <= len(args.defaults):\n+                default = ast_unparse(args.defaults[len(args.defaults) - len(args.posonlyargs) + i])\n+            else:\n+                default = Parameter.empty\n             annotation = ast_unparse(arg.annotation) or Parameter.empty\n             params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,\n-                                    annotation=annotation))\n+                                    default=default, annotation=annotation))\n \n     for i, arg in enumerate(args.args):\n         if len(args.args) - i <= len(args.defaults):\n",
    "variant_4": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex 15f0d66e2..29541dd56 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -520,11 +520,23 @@ def signature_from_str(signature: str) -> inspect.Signature:\n     args = definition.args\n     params = []\n \n+\n     if hasattr(args, \"posonlyargs\"):\n-        for arg in args.posonlyargs:  # type: ignore\n+        # Calculate how many positional-only arguments have defaults\n+        posonly_defaults_count = min(len(args.defaults), len(args.posonlyargs))\n+        \n+        for i, arg in enumerate(args.posonlyargs):  # type: ignore\n+            # Check if this positional-only argument has a default value\n+            if i >= len(args.posonlyargs) - posonly_defaults_count:\n+                # Extract default from the beginning of args.defaults\n+                default_index = i - (len(args.posonlyargs) - posonly_defaults_count)\n+                default = ast_unparse(args.defaults[default_index])\n+            else:\n+                default = Parameter.empty\n+                \n             annotation = ast_unparse(arg.annotation) or Parameter.empty\n             params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,\n-                                    annotation=annotation))\n+                                    default=default, annotation=annotation))\n \n     for i, arg in enumerate(args.args):\n         if len(args.args) - i <= len(args.defaults):\n",
    "variant_5": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex 15f0d66e2..7f869148d 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -520,11 +520,23 @@ def signature_from_str(signature: str) -> inspect.Signature:\n     args = definition.args\n     params = []\n \n+\n     if hasattr(args, \"posonlyargs\"):\n-        for arg in args.posonlyargs:  # type: ignore\n+        # Calculate how many positional-only arguments have defaults\n+        posonly_defaults_count = min(len(args.defaults), len(args.posonlyargs))\n+        \n+        for i, arg in enumerate(args.posonlyargs):  # type: ignore\n+            # Check if this positional-only argument has a default value\n+            if i >= len(args.posonlyargs) - posonly_defaults_count:\n+                # Calculate the index in the defaults list\n+                default_index = i - (len(args.posonlyargs) - posonly_defaults_count)\n+                default = ast_unparse(args.defaults[default_index])\n+            else:\n+                default = Parameter.empty\n+                \n             annotation = ast_unparse(arg.annotation) or Parameter.empty\n             params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,\n-                                    annotation=annotation))\n+                                    default=default, annotation=annotation))\n \n     for i, arg in enumerate(args.args):\n         if len(args.args) - i <= len(args.defaults):\n",
    "variant_6": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex 15f0d66e2..7e3e4e57b 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -520,11 +520,19 @@ def signature_from_str(signature: str) -> inspect.Signature:\n     args = definition.args\n     params = []\n \n+\n     if hasattr(args, \"posonlyargs\"):\n-        for arg in args.posonlyargs:  # type: ignore\n+        posonly_defaults_count = min(len(args.defaults), len(args.posonlyargs))\n+        for i, arg in enumerate(args.posonlyargs):  # type: ignore\n+            if i >= len(args.posonlyargs) - posonly_defaults_count:\n+                default_idx = i - (len(args.posonlyargs) - posonly_defaults_count)\n+                default = ast_unparse(args.defaults[default_idx])\n+            else:\n+                default = Parameter.empty\n+            \n             annotation = ast_unparse(arg.annotation) or Parameter.empty\n             params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,\n-                                    annotation=annotation))\n+                                    default=default, annotation=annotation))\n \n     for i, arg in enumerate(args.args):\n         if len(args.args) - i <= len(args.defaults):\n",
    "variant_7": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex 15f0d66e2..9117c0551 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -520,11 +520,16 @@ def signature_from_str(signature: str) -> inspect.Signature:\n     args = definition.args\n     params = []\n \n+\n     if hasattr(args, \"posonlyargs\"):\n-        for arg in args.posonlyargs:  # type: ignore\n+        for i, arg in enumerate(args.posonlyargs):  # type: ignore\n+            if i < len(args.defaults):\n+                default = ast_unparse(args.defaults[i])\n+            else:\n+                default = Parameter.empty\n             annotation = ast_unparse(arg.annotation) or Parameter.empty\n             params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,\n-                                    annotation=annotation))\n+                                    default=default, annotation=annotation))\n \n     for i, arg in enumerate(args.args):\n         if len(args.args) - i <= len(args.defaults):\n",
    "variant_8": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex 15f0d66e2..9117c0551 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -520,11 +520,16 @@ def signature_from_str(signature: str) -> inspect.Signature:\n     args = definition.args\n     params = []\n \n+\n     if hasattr(args, \"posonlyargs\"):\n-        for arg in args.posonlyargs:  # type: ignore\n+        for i, arg in enumerate(args.posonlyargs):  # type: ignore\n+            if i < len(args.defaults):\n+                default = ast_unparse(args.defaults[i])\n+            else:\n+                default = Parameter.empty\n             annotation = ast_unparse(arg.annotation) or Parameter.empty\n             params.append(Parameter(arg.arg, Parameter.POSITIONAL_ONLY,\n-                                    annotation=annotation))\n+                                    default=default, annotation=annotation))\n \n     for i, arg in enumerate(args.args):\n         if len(args.args) - i <= len(args.defaults):\n"
  }
}