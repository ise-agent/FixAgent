{
  "zero_patches": {
    "Location 1 (/root/hy/projects/django/django/contrib/admin/options.py lines 467-471)": "\n            if not prev_field or (\n                prev_field.is_relation\n                and field not in prev_field.path_infos[-1].target_fields\n                and not (hasattr(prev_field, 'one_to_one') and prev_field.one_to_one and prev_field.primary_key)\n            ):\n                relation_parts.append(part)\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects/django/django/contrib/admin/options.py lines 467-471)": [
      "\n            if not prev_field or (\n                prev_field.is_relation\n                and field not in prev_field.path_infos[-1].target_fields\n                and not (hasattr(prev_field, 'one_to_one') and prev_field.one_to_one and prev_field.primary_key)\n            ):\n                relation_parts.append(part)\n",
      "\n            if not prev_field or (\n                prev_field.is_relation\n                and field not in prev_field.path_infos[-1].target_fields\n                and not (hasattr(prev_field, 'one_to_one') and prev_field.one_to_one and prev_field.primary_key)\n            ):\n                relation_parts.append(part)\n",
      "\n            if not prev_field or (\n                prev_field.is_relation\n                and field not in prev_field.path_infos[-1].target_fields\n                and not (hasattr(prev_field, 'one_to_one') and prev_field.one_to_one and prev_field.primary_key)\n            ):\n                relation_parts.append(part)\n",
      "\n            if not prev_field or (\n                prev_field.is_relation\n                and field not in prev_field.path_infos[-1].target_fields\n                and not (hasattr(prev_field, 'one_to_one') and prev_field.one_to_one and prev_field.primary_key)\n            ):\n                relation_parts.append(part)\n",
      "\n            if not prev_field or (\n                prev_field.is_relation\n                and field not in prev_field.path_infos[-1].target_fields\n                and not (hasattr(prev_field, 'one_to_one') and prev_field.one_to_one and prev_field.primary_key)\n            ):\n                relation_parts.append(part)\n",
      "\n            if not prev_field or (\n                prev_field.is_relation\n                and field not in prev_field.path_infos[-1].target_fields\n                and not (hasattr(prev_field, 'one_to_one') and prev_field.one_to_one and prev_field.primary_key)\n            ):\n                relation_parts.append(part)\n",
      "\n            if not prev_field or (\n                prev_field.is_relation\n                and field not in prev_field.path_infos[-1].target_fields\n                and not (hasattr(prev_field, 'one_to_one') and prev_field.one_to_one and prev_field.primary_key)\n            ):\n                relation_parts.append(part)\n",
      "\n            if not prev_field or (\n                prev_field.is_relation\n                and field not in prev_field.path_infos[-1].target_fields\n                and not (hasattr(prev_field, 'one_to_one') and prev_field.one_to_one and prev_field.primary_key)\n            ):\n                relation_parts.append(part)\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 5240b07cd6..5522578b04 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -464,9 +464,11 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n             # It is allowed to filter on values that would be found from local\n             # model anyways. For example, if you filter on employee__department__id,\n             # then the id value would be found already from employee__department_id.\n+\n             if not prev_field or (\n                 prev_field.is_relation\n                 and field not in prev_field.path_infos[-1].target_fields\n+                and not (hasattr(prev_field, 'one_to_one') and prev_field.one_to_one and prev_field.primary_key)\n             ):\n                 relation_parts.append(part)\n             if not getattr(field, \"path_infos\", None):\n",
    "variant_0": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 5240b07cd6..5522578b04 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -464,9 +464,11 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n             # It is allowed to filter on values that would be found from local\n             # model anyways. For example, if you filter on employee__department__id,\n             # then the id value would be found already from employee__department_id.\n+\n             if not prev_field or (\n                 prev_field.is_relation\n                 and field not in prev_field.path_infos[-1].target_fields\n+                and not (hasattr(prev_field, 'one_to_one') and prev_field.one_to_one and prev_field.primary_key)\n             ):\n                 relation_parts.append(part)\n             if not getattr(field, \"path_infos\", None):\n",
    "variant_1": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 5240b07cd6..5522578b04 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -464,9 +464,11 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n             # It is allowed to filter on values that would be found from local\n             # model anyways. For example, if you filter on employee__department__id,\n             # then the id value would be found already from employee__department_id.\n+\n             if not prev_field or (\n                 prev_field.is_relation\n                 and field not in prev_field.path_infos[-1].target_fields\n+                and not (hasattr(prev_field, 'one_to_one') and prev_field.one_to_one and prev_field.primary_key)\n             ):\n                 relation_parts.append(part)\n             if not getattr(field, \"path_infos\", None):\n",
    "variant_2": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 5240b07cd6..5522578b04 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -464,9 +464,11 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n             # It is allowed to filter on values that would be found from local\n             # model anyways. For example, if you filter on employee__department__id,\n             # then the id value would be found already from employee__department_id.\n+\n             if not prev_field or (\n                 prev_field.is_relation\n                 and field not in prev_field.path_infos[-1].target_fields\n+                and not (hasattr(prev_field, 'one_to_one') and prev_field.one_to_one and prev_field.primary_key)\n             ):\n                 relation_parts.append(part)\n             if not getattr(field, \"path_infos\", None):\n",
    "variant_3": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 5240b07cd6..5522578b04 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -464,9 +464,11 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n             # It is allowed to filter on values that would be found from local\n             # model anyways. For example, if you filter on employee__department__id,\n             # then the id value would be found already from employee__department_id.\n+\n             if not prev_field or (\n                 prev_field.is_relation\n                 and field not in prev_field.path_infos[-1].target_fields\n+                and not (hasattr(prev_field, 'one_to_one') and prev_field.one_to_one and prev_field.primary_key)\n             ):\n                 relation_parts.append(part)\n             if not getattr(field, \"path_infos\", None):\n",
    "variant_4": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 5240b07cd6..5522578b04 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -464,9 +464,11 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n             # It is allowed to filter on values that would be found from local\n             # model anyways. For example, if you filter on employee__department__id,\n             # then the id value would be found already from employee__department_id.\n+\n             if not prev_field or (\n                 prev_field.is_relation\n                 and field not in prev_field.path_infos[-1].target_fields\n+                and not (hasattr(prev_field, 'one_to_one') and prev_field.one_to_one and prev_field.primary_key)\n             ):\n                 relation_parts.append(part)\n             if not getattr(field, \"path_infos\", None):\n",
    "variant_5": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 5240b07cd6..5522578b04 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -464,9 +464,11 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n             # It is allowed to filter on values that would be found from local\n             # model anyways. For example, if you filter on employee__department__id,\n             # then the id value would be found already from employee__department_id.\n+\n             if not prev_field or (\n                 prev_field.is_relation\n                 and field not in prev_field.path_infos[-1].target_fields\n+                and not (hasattr(prev_field, 'one_to_one') and prev_field.one_to_one and prev_field.primary_key)\n             ):\n                 relation_parts.append(part)\n             if not getattr(field, \"path_infos\", None):\n",
    "variant_6": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 5240b07cd6..5522578b04 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -464,9 +464,11 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n             # It is allowed to filter on values that would be found from local\n             # model anyways. For example, if you filter on employee__department__id,\n             # then the id value would be found already from employee__department_id.\n+\n             if not prev_field or (\n                 prev_field.is_relation\n                 and field not in prev_field.path_infos[-1].target_fields\n+                and not (hasattr(prev_field, 'one_to_one') and prev_field.one_to_one and prev_field.primary_key)\n             ):\n                 relation_parts.append(part)\n             if not getattr(field, \"path_infos\", None):\n",
    "variant_7": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 5240b07cd6..5522578b04 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -464,9 +464,11 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n             # It is allowed to filter on values that would be found from local\n             # model anyways. For example, if you filter on employee__department__id,\n             # then the id value would be found already from employee__department_id.\n+\n             if not prev_field or (\n                 prev_field.is_relation\n                 and field not in prev_field.path_infos[-1].target_fields\n+                and not (hasattr(prev_field, 'one_to_one') and prev_field.one_to_one and prev_field.primary_key)\n             ):\n                 relation_parts.append(part)\n             if not getattr(field, \"path_infos\", None):\n",
    "variant_8": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 5240b07cd6..5522578b04 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -464,9 +464,11 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n             # It is allowed to filter on values that would be found from local\n             # model anyways. For example, if you filter on employee__department__id,\n             # then the id value would be found already from employee__department_id.\n+\n             if not prev_field or (\n                 prev_field.is_relation\n                 and field not in prev_field.path_infos[-1].target_fields\n+                and not (hasattr(prev_field, 'one_to_one') and prev_field.one_to_one and prev_field.primary_key)\n             ):\n                 relation_parts.append(part)\n             if not getattr(field, \"path_infos\", None):\n"
  }
}