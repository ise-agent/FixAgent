{
  "zero_patches": {
    "Location 1 (/root/hy/projects/requests/requests/models.py lines 351-358)": "\n@staticmethod\ndef _get_idna_encoded_host(host):\n    import idna\n\n    try:\n        host = idna.encode(host, uts46=True).decode('utf-8')\n    except idna.IDNAError:\n        raise InvalidURL('URL has an invalid label.')\n    return host\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects/requests/requests/models.py lines 351-358)": [
      "\n    @staticmethod\n    def _get_idna_encoded_host(host):\n        import idna\n\n        try:\n            host = idna.encode(host, uts46=True).decode('utf-8')\n        except idna.IDNAError:\n            raise InvalidURL('URL has an invalid label.')\n        return host\n",
      "\n    @staticmethod\n    def _get_idna_encoded_host(host):\n        import idna\n\n        try:\n            host = idna.encode(host, uts46=True).decode('utf-8')\n        except idna.IDNAError:\n            raise InvalidURL('URL has an invalid label.')\n        return host\n",
      "\n    @staticmethod\n    def _get_idna_encoded_host(host):\n        import idna\n\n        try:\n            host = idna.encode(host, uts46=True).decode('utf-8')\n        except idna.IDNAError:\n            raise InvalidURL('URL has an invalid label.')\n        return host\n",
      "\n    @staticmethod\n    def _get_idna_encoded_host(host):\n        import idna\n\n        try:\n            host = idna.encode(host, uts46=True).decode('utf-8')\n        except idna.IDNAError:\n            raise InvalidURL('URL has an invalid label.')\n        return host\n",
      "\n    @staticmethod\n    def _get_idna_encoded_host(host):\n        import idna\n\n        try:\n            host = idna.encode(host, uts46=True).decode('utf-8')\n        except idna.IDNAError:\n            raise InvalidURL('URL has an invalid label.')\n        return host\n",
      "\n    @staticmethod\n    def _get_idna_encoded_host(host):\n        import idna\n\n        try:\n            host = idna.encode(host, uts46=True).decode('utf-8')\n        except idna.IDNAError:\n            raise InvalidURL('URL has an invalid label.')\n        return host\n",
      "\n    @staticmethod\n    def _get_idna_encoded_host(host):\n        import idna\n\n        try:\n            host = idna.encode(host, uts46=True).decode('utf-8')\n        except idna.IDNAError:\n            raise InvalidURL('URL has an invalid label.')\n        return host\n",
      "\n    @staticmethod\n    def _get_idna_encoded_host(host):\n        import idna\n\n        try:\n            host = idna.encode(host, uts46=True).decode('utf-8')\n        except idna.IDNAError:\n            raise InvalidURL('URL has an invalid label.')\n        return host\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/requests/models.py b/requests/models.py\nindex e7d292d5..70dd904a 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -347,6 +347,8 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         if self.method is not None:\n             self.method = to_native_string(self.method.upper())\n \n+    @staticmethod\n+\n     @staticmethod\n     def _get_idna_encoded_host(host):\n         import idna\n@@ -354,7 +356,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         try:\n             host = idna.encode(host, uts46=True).decode('utf-8')\n         except idna.IDNAError:\n-            raise UnicodeError\n+            raise InvalidURL('URL has an invalid label.')\n         return host\n \n     def prepare_url(self, url, params):\n",
    "variant_0": "diff --git a/requests/models.py b/requests/models.py\nindex e7d292d5..37f6a396 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -348,14 +348,16 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n             self.method = to_native_string(self.method.upper())\n \n     @staticmethod\n-    def _get_idna_encoded_host(host):\n-        import idna\n \n-        try:\n-            host = idna.encode(host, uts46=True).decode('utf-8')\n-        except idna.IDNAError:\n-            raise UnicodeError\n-        return host\n+@staticmethod\n+def _get_idna_encoded_host(host):\n+    import idna\n+\n+    try:\n+        host = idna.encode(host, uts46=True).decode('utf-8')\n+    except idna.IDNAError:\n+        raise InvalidURL('URL has an invalid label.')\n+    return host\n \n     def prepare_url(self, url, params):\n         \"\"\"Prepares the given HTTP URL.\"\"\"\n",
    "variant_1": "diff --git a/requests/models.py b/requests/models.py\nindex e7d292d5..70dd904a 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -347,6 +347,8 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         if self.method is not None:\n             self.method = to_native_string(self.method.upper())\n \n+    @staticmethod\n+\n     @staticmethod\n     def _get_idna_encoded_host(host):\n         import idna\n@@ -354,7 +356,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         try:\n             host = idna.encode(host, uts46=True).decode('utf-8')\n         except idna.IDNAError:\n-            raise UnicodeError\n+            raise InvalidURL('URL has an invalid label.')\n         return host\n \n     def prepare_url(self, url, params):\n",
    "variant_2": "diff --git a/requests/models.py b/requests/models.py\nindex e7d292d5..70dd904a 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -347,6 +347,8 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         if self.method is not None:\n             self.method = to_native_string(self.method.upper())\n \n+    @staticmethod\n+\n     @staticmethod\n     def _get_idna_encoded_host(host):\n         import idna\n@@ -354,7 +356,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         try:\n             host = idna.encode(host, uts46=True).decode('utf-8')\n         except idna.IDNAError:\n-            raise UnicodeError\n+            raise InvalidURL('URL has an invalid label.')\n         return host\n \n     def prepare_url(self, url, params):\n",
    "variant_3": "diff --git a/requests/models.py b/requests/models.py\nindex e7d292d5..70dd904a 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -347,6 +347,8 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         if self.method is not None:\n             self.method = to_native_string(self.method.upper())\n \n+    @staticmethod\n+\n     @staticmethod\n     def _get_idna_encoded_host(host):\n         import idna\n@@ -354,7 +356,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         try:\n             host = idna.encode(host, uts46=True).decode('utf-8')\n         except idna.IDNAError:\n-            raise UnicodeError\n+            raise InvalidURL('URL has an invalid label.')\n         return host\n \n     def prepare_url(self, url, params):\n",
    "variant_4": "diff --git a/requests/models.py b/requests/models.py\nindex e7d292d5..70dd904a 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -347,6 +347,8 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         if self.method is not None:\n             self.method = to_native_string(self.method.upper())\n \n+    @staticmethod\n+\n     @staticmethod\n     def _get_idna_encoded_host(host):\n         import idna\n@@ -354,7 +356,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         try:\n             host = idna.encode(host, uts46=True).decode('utf-8')\n         except idna.IDNAError:\n-            raise UnicodeError\n+            raise InvalidURL('URL has an invalid label.')\n         return host\n \n     def prepare_url(self, url, params):\n",
    "variant_5": "diff --git a/requests/models.py b/requests/models.py\nindex e7d292d5..70dd904a 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -347,6 +347,8 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         if self.method is not None:\n             self.method = to_native_string(self.method.upper())\n \n+    @staticmethod\n+\n     @staticmethod\n     def _get_idna_encoded_host(host):\n         import idna\n@@ -354,7 +356,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         try:\n             host = idna.encode(host, uts46=True).decode('utf-8')\n         except idna.IDNAError:\n-            raise UnicodeError\n+            raise InvalidURL('URL has an invalid label.')\n         return host\n \n     def prepare_url(self, url, params):\n",
    "variant_6": "diff --git a/requests/models.py b/requests/models.py\nindex e7d292d5..70dd904a 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -347,6 +347,8 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         if self.method is not None:\n             self.method = to_native_string(self.method.upper())\n \n+    @staticmethod\n+\n     @staticmethod\n     def _get_idna_encoded_host(host):\n         import idna\n@@ -354,7 +356,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         try:\n             host = idna.encode(host, uts46=True).decode('utf-8')\n         except idna.IDNAError:\n-            raise UnicodeError\n+            raise InvalidURL('URL has an invalid label.')\n         return host\n \n     def prepare_url(self, url, params):\n",
    "variant_7": "diff --git a/requests/models.py b/requests/models.py\nindex e7d292d5..70dd904a 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -347,6 +347,8 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         if self.method is not None:\n             self.method = to_native_string(self.method.upper())\n \n+    @staticmethod\n+\n     @staticmethod\n     def _get_idna_encoded_host(host):\n         import idna\n@@ -354,7 +356,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         try:\n             host = idna.encode(host, uts46=True).decode('utf-8')\n         except idna.IDNAError:\n-            raise UnicodeError\n+            raise InvalidURL('URL has an invalid label.')\n         return host\n \n     def prepare_url(self, url, params):\n",
    "variant_8": "diff --git a/requests/models.py b/requests/models.py\nindex e7d292d5..70dd904a 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -347,6 +347,8 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         if self.method is not None:\n             self.method = to_native_string(self.method.upper())\n \n+    @staticmethod\n+\n     @staticmethod\n     def _get_idna_encoded_host(host):\n         import idna\n@@ -354,7 +356,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         try:\n             host = idna.encode(host, uts46=True).decode('utf-8')\n         except idna.IDNAError:\n-            raise UnicodeError\n+            raise InvalidURL('URL has an invalid label.')\n         return host\n \n     def prepare_url(self, url, params):\n"
  }
}