{
  "zero_patches": {
    "Location 1 (/root/hy/projects/sphinx/sphinx/ext/inheritance_diagram.py lines 415-423)": "\n    # Create a mapping from fully-qualified class names to URLs.\n    graphviz_output_format = self.builder.env.config.graphviz_output_format.upper()\n    current_filename = self.builder.current_docname + self.builder.out_suffix\n    urls = {}\n    pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n    for child in pending_xrefs:\n        if child.get('refuri') is not None:\n            urls[child['reftitle']] = child.get('refuri')\n        elif child.get('refid') is not None:\n            if graphviz_output_format == 'SVG':\n                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n            else:\n                urls[child['reftitle']] = '#' + child.get('refid')\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects/sphinx/sphinx/ext/inheritance_diagram.py lines 415-423)": [
      "\n    # Create a mapping from fully-qualified class names to URLs.\n    graphviz_output_format = self.builder.env.config.graphviz_output_format.upper()\n    current_filename = self.builder.current_docname + self.builder.out_suffix\n    urls = {}\n    pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n    for child in pending_xrefs:\n        if child.get('refuri') is not None:\n            urls[child['reftitle']] = child.get('refuri')\n        elif child.get('refid') is not None:\n            if graphviz_output_format == 'SVG':\n                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n            else:\n                urls[child['reftitle']] = '#' + child.get('refid')\n",
      "\n    # Create a mapping from fully-qualified class names to URLs.\n    graphviz_output_format = self.builder.env.config.graphviz_output_format.upper()\n    current_filename = self.builder.current_docname + self.builder.out_suffix\n    urls = {}\n    pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n    for child in pending_xrefs:\n        if child.get('refuri') is not None:\n            urls[child['reftitle']] = child.get('refuri')\n        elif child.get('refid') is not None:\n            if graphviz_output_format == 'SVG':\n                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n            else:\n                urls[child['reftitle']] = '#' + child.get('refid')\n",
      "\n    # Create a mapping from fully-qualified class names to URLs.\n    graphviz_output_format = self.builder.env.config.graphviz_output_format.upper()\n    current_filename = self.builder.current_docname + self.builder.out_suffix\n    urls = {}\n    pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n    for child in pending_xrefs:\n        if child.get('refuri') is not None:\n            urls[child['reftitle']] = child.get('refuri')\n        elif child.get('refid') is not None:\n            if graphviz_output_format == 'SVG':\n                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n            else:\n                urls[child['reftitle']] = '#' + child.get('refid')\n",
      "\n    # Create a mapping from fully-qualified class names to URLs.\n    graphviz_output_format = self.builder.env.config.graphviz_output_format.upper()\n    current_filename = self.builder.current_docname + self.builder.out_suffix\n    urls = {}\n    pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n    for child in pending_xrefs:\n        if child.get('refuri') is not None:\n            urls[child['reftitle']] = child.get('refuri')\n        elif child.get('refid') is not None:\n            if graphviz_output_format == 'SVG':\n                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n            else:\n                urls[child['reftitle']] = '#' + child.get('refid')\n",
      "\n    # Create a mapping from fully-qualified class names to URLs.\n    graphviz_output_format = self.builder.env.config.graphviz_output_format.upper()\n    current_filename = self.builder.current_docname + self.builder.out_suffix\n    urls = {}\n    pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n    for child in pending_xrefs:\n        if child.get('refuri') is not None:\n            urls[child['reftitle']] = child.get('refuri')\n        elif child.get('refid') is not None:\n            if graphviz_output_format == 'SVG':\n                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n            else:\n                urls[child['reftitle']] = '#' + child.get('refid')\n",
      "\n    # Create a mapping from fully-qualified class names to URLs.\n    graphviz_output_format = self.builder.env.config.graphviz_output_format.upper()\n    current_filename = self.builder.current_docname + self.builder.out_suffix\n    urls = {}\n    pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n    for child in pending_xrefs:\n        if child.get('refuri') is not None:\n            urls[child['reftitle']] = child.get('refuri')\n        elif child.get('refid') is not None:\n            if graphviz_output_format == 'SVG':\n                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n            else:\n                urls[child['reftitle']] = '#' + child.get('refid')\n",
      "\n    # Create a mapping from fully-qualified class names to URLs.\n    graphviz_output_format = self.builder.env.config.graphviz_output_format.upper()\n    current_filename = self.builder.current_docname + self.builder.out_suffix\n    urls = {}\n    pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n    for child in pending_xrefs:\n        if child.get('refuri') is not None:\n            urls[child['reftitle']] = child.get('refuri')\n        elif child.get('refid') is not None:\n            if graphviz_output_format == 'SVG':\n                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n            else:\n                urls[child['reftitle']] = '#' + child.get('refid')\n",
      "\n    for child in pending_xrefs:\n        if child.get('refuri') is not None:\n            urls[child['reftitle']] = child.get('refuri')\n        elif child.get('refid') is not None:\n            if graphviz_output_format == 'SVG':\n                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n            else:\n                urls[child['reftitle']] = '#' + child.get('refid')\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/sphinx/ext/inheritance_diagram.py b/sphinx/ext/inheritance_diagram.py\nindex 6e3985512..ad31aa2f9 100644\n--- a/sphinx/ext/inheritance_diagram.py\n+++ b/sphinx/ext/inheritance_diagram.py\n@@ -412,13 +412,14 @@ def html_visit_inheritance_diagram(self: HTML5Translator, node: inheritance_diag\n     pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n     for child in pending_xrefs:\n         if child.get('refuri') is not None:\n+\n             if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = \"../\" + child.get('refuri')\n+                urls[child['reftitle']] = child.get('refuri')\n             else:\n                 urls[child['reftitle']] = child.get('refuri')\n         elif child.get('refid') is not None:\n             if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = '../' + current_filename + '#' + child.get('refid')\n+                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n             else:\n                 urls[child['reftitle']] = '#' + child.get('refid')\n \n",
    "variant_0": "diff --git a/sphinx/ext/inheritance_diagram.py b/sphinx/ext/inheritance_diagram.py\nindex 6e3985512..5ee0a0bf7 100644\n--- a/sphinx/ext/inheritance_diagram.py\n+++ b/sphinx/ext/inheritance_diagram.py\n@@ -412,13 +412,18 @@ def html_visit_inheritance_diagram(self: HTML5Translator, node: inheritance_diag\n     pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n     for child in pending_xrefs:\n         if child.get('refuri') is not None:\n-            if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = \"../\" + child.get('refuri')\n-            else:\n-                urls[child['reftitle']] = child.get('refuri')\n+\n+    # Create a mapping from fully-qualified class names to URLs.\n+    graphviz_output_format = self.builder.env.config.graphviz_output_format.upper()\n+    current_filename = self.builder.current_docname + self.builder.out_suffix\n+    urls = {}\n+    pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n+    for child in pending_xrefs:\n+        if child.get('refuri') is not None:\n+            urls[child['reftitle']] = child.get('refuri')\n         elif child.get('refid') is not None:\n             if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = '../' + current_filename + '#' + child.get('refid')\n+                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n             else:\n                 urls[child['reftitle']] = '#' + child.get('refid')\n \n",
    "variant_1": "diff --git a/sphinx/ext/inheritance_diagram.py b/sphinx/ext/inheritance_diagram.py\nindex 6e3985512..5ee0a0bf7 100644\n--- a/sphinx/ext/inheritance_diagram.py\n+++ b/sphinx/ext/inheritance_diagram.py\n@@ -412,13 +412,18 @@ def html_visit_inheritance_diagram(self: HTML5Translator, node: inheritance_diag\n     pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n     for child in pending_xrefs:\n         if child.get('refuri') is not None:\n-            if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = \"../\" + child.get('refuri')\n-            else:\n-                urls[child['reftitle']] = child.get('refuri')\n+\n+    # Create a mapping from fully-qualified class names to URLs.\n+    graphviz_output_format = self.builder.env.config.graphviz_output_format.upper()\n+    current_filename = self.builder.current_docname + self.builder.out_suffix\n+    urls = {}\n+    pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n+    for child in pending_xrefs:\n+        if child.get('refuri') is not None:\n+            urls[child['reftitle']] = child.get('refuri')\n         elif child.get('refid') is not None:\n             if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = '../' + current_filename + '#' + child.get('refid')\n+                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n             else:\n                 urls[child['reftitle']] = '#' + child.get('refid')\n \n",
    "variant_2": "diff --git a/sphinx/ext/inheritance_diagram.py b/sphinx/ext/inheritance_diagram.py\nindex 6e3985512..5ee0a0bf7 100644\n--- a/sphinx/ext/inheritance_diagram.py\n+++ b/sphinx/ext/inheritance_diagram.py\n@@ -412,13 +412,18 @@ def html_visit_inheritance_diagram(self: HTML5Translator, node: inheritance_diag\n     pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n     for child in pending_xrefs:\n         if child.get('refuri') is not None:\n-            if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = \"../\" + child.get('refuri')\n-            else:\n-                urls[child['reftitle']] = child.get('refuri')\n+\n+    # Create a mapping from fully-qualified class names to URLs.\n+    graphviz_output_format = self.builder.env.config.graphviz_output_format.upper()\n+    current_filename = self.builder.current_docname + self.builder.out_suffix\n+    urls = {}\n+    pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n+    for child in pending_xrefs:\n+        if child.get('refuri') is not None:\n+            urls[child['reftitle']] = child.get('refuri')\n         elif child.get('refid') is not None:\n             if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = '../' + current_filename + '#' + child.get('refid')\n+                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n             else:\n                 urls[child['reftitle']] = '#' + child.get('refid')\n \n",
    "variant_3": "diff --git a/sphinx/ext/inheritance_diagram.py b/sphinx/ext/inheritance_diagram.py\nindex 6e3985512..5ee0a0bf7 100644\n--- a/sphinx/ext/inheritance_diagram.py\n+++ b/sphinx/ext/inheritance_diagram.py\n@@ -412,13 +412,18 @@ def html_visit_inheritance_diagram(self: HTML5Translator, node: inheritance_diag\n     pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n     for child in pending_xrefs:\n         if child.get('refuri') is not None:\n-            if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = \"../\" + child.get('refuri')\n-            else:\n-                urls[child['reftitle']] = child.get('refuri')\n+\n+    # Create a mapping from fully-qualified class names to URLs.\n+    graphviz_output_format = self.builder.env.config.graphviz_output_format.upper()\n+    current_filename = self.builder.current_docname + self.builder.out_suffix\n+    urls = {}\n+    pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n+    for child in pending_xrefs:\n+        if child.get('refuri') is not None:\n+            urls[child['reftitle']] = child.get('refuri')\n         elif child.get('refid') is not None:\n             if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = '../' + current_filename + '#' + child.get('refid')\n+                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n             else:\n                 urls[child['reftitle']] = '#' + child.get('refid')\n \n",
    "variant_4": "diff --git a/sphinx/ext/inheritance_diagram.py b/sphinx/ext/inheritance_diagram.py\nindex 6e3985512..5ee0a0bf7 100644\n--- a/sphinx/ext/inheritance_diagram.py\n+++ b/sphinx/ext/inheritance_diagram.py\n@@ -412,13 +412,18 @@ def html_visit_inheritance_diagram(self: HTML5Translator, node: inheritance_diag\n     pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n     for child in pending_xrefs:\n         if child.get('refuri') is not None:\n-            if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = \"../\" + child.get('refuri')\n-            else:\n-                urls[child['reftitle']] = child.get('refuri')\n+\n+    # Create a mapping from fully-qualified class names to URLs.\n+    graphviz_output_format = self.builder.env.config.graphviz_output_format.upper()\n+    current_filename = self.builder.current_docname + self.builder.out_suffix\n+    urls = {}\n+    pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n+    for child in pending_xrefs:\n+        if child.get('refuri') is not None:\n+            urls[child['reftitle']] = child.get('refuri')\n         elif child.get('refid') is not None:\n             if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = '../' + current_filename + '#' + child.get('refid')\n+                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n             else:\n                 urls[child['reftitle']] = '#' + child.get('refid')\n \n",
    "variant_5": "diff --git a/sphinx/ext/inheritance_diagram.py b/sphinx/ext/inheritance_diagram.py\nindex 6e3985512..5ee0a0bf7 100644\n--- a/sphinx/ext/inheritance_diagram.py\n+++ b/sphinx/ext/inheritance_diagram.py\n@@ -412,13 +412,18 @@ def html_visit_inheritance_diagram(self: HTML5Translator, node: inheritance_diag\n     pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n     for child in pending_xrefs:\n         if child.get('refuri') is not None:\n-            if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = \"../\" + child.get('refuri')\n-            else:\n-                urls[child['reftitle']] = child.get('refuri')\n+\n+    # Create a mapping from fully-qualified class names to URLs.\n+    graphviz_output_format = self.builder.env.config.graphviz_output_format.upper()\n+    current_filename = self.builder.current_docname + self.builder.out_suffix\n+    urls = {}\n+    pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n+    for child in pending_xrefs:\n+        if child.get('refuri') is not None:\n+            urls[child['reftitle']] = child.get('refuri')\n         elif child.get('refid') is not None:\n             if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = '../' + current_filename + '#' + child.get('refid')\n+                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n             else:\n                 urls[child['reftitle']] = '#' + child.get('refid')\n \n",
    "variant_6": "diff --git a/sphinx/ext/inheritance_diagram.py b/sphinx/ext/inheritance_diagram.py\nindex 6e3985512..5ee0a0bf7 100644\n--- a/sphinx/ext/inheritance_diagram.py\n+++ b/sphinx/ext/inheritance_diagram.py\n@@ -412,13 +412,18 @@ def html_visit_inheritance_diagram(self: HTML5Translator, node: inheritance_diag\n     pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n     for child in pending_xrefs:\n         if child.get('refuri') is not None:\n-            if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = \"../\" + child.get('refuri')\n-            else:\n-                urls[child['reftitle']] = child.get('refuri')\n+\n+    # Create a mapping from fully-qualified class names to URLs.\n+    graphviz_output_format = self.builder.env.config.graphviz_output_format.upper()\n+    current_filename = self.builder.current_docname + self.builder.out_suffix\n+    urls = {}\n+    pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n+    for child in pending_xrefs:\n+        if child.get('refuri') is not None:\n+            urls[child['reftitle']] = child.get('refuri')\n         elif child.get('refid') is not None:\n             if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = '../' + current_filename + '#' + child.get('refid')\n+                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n             else:\n                 urls[child['reftitle']] = '#' + child.get('refid')\n \n",
    "variant_7": "diff --git a/sphinx/ext/inheritance_diagram.py b/sphinx/ext/inheritance_diagram.py\nindex 6e3985512..5ee0a0bf7 100644\n--- a/sphinx/ext/inheritance_diagram.py\n+++ b/sphinx/ext/inheritance_diagram.py\n@@ -412,13 +412,18 @@ def html_visit_inheritance_diagram(self: HTML5Translator, node: inheritance_diag\n     pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n     for child in pending_xrefs:\n         if child.get('refuri') is not None:\n-            if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = \"../\" + child.get('refuri')\n-            else:\n-                urls[child['reftitle']] = child.get('refuri')\n+\n+    # Create a mapping from fully-qualified class names to URLs.\n+    graphviz_output_format = self.builder.env.config.graphviz_output_format.upper()\n+    current_filename = self.builder.current_docname + self.builder.out_suffix\n+    urls = {}\n+    pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n+    for child in pending_xrefs:\n+        if child.get('refuri') is not None:\n+            urls[child['reftitle']] = child.get('refuri')\n         elif child.get('refid') is not None:\n             if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = '../' + current_filename + '#' + child.get('refid')\n+                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n             else:\n                 urls[child['reftitle']] = '#' + child.get('refid')\n \n",
    "variant_8": "diff --git a/sphinx/ext/inheritance_diagram.py b/sphinx/ext/inheritance_diagram.py\nindex 6e3985512..acc68a74b 100644\n--- a/sphinx/ext/inheritance_diagram.py\n+++ b/sphinx/ext/inheritance_diagram.py\n@@ -412,13 +412,13 @@ def html_visit_inheritance_diagram(self: HTML5Translator, node: inheritance_diag\n     pending_xrefs = cast(Iterable[addnodes.pending_xref], node)\n     for child in pending_xrefs:\n         if child.get('refuri') is not None:\n-            if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = \"../\" + child.get('refuri')\n-            else:\n-                urls[child['reftitle']] = child.get('refuri')\n+\n+    for child in pending_xrefs:\n+        if child.get('refuri') is not None:\n+            urls[child['reftitle']] = child.get('refuri')\n         elif child.get('refid') is not None:\n             if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = '../' + current_filename + '#' + child.get('refid')\n+                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n             else:\n                 urls[child['reftitle']] = '#' + child.get('refid')\n \n"
  }
}