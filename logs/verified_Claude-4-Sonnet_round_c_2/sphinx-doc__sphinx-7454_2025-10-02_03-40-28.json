{
  "zero_patches": {
    "Location 1 (/root/hy/projects/sphinx/sphinx/ext/autodoc/typehints.py lines 126-130)": "\n    if 'return' in annotations and 'return' not in arguments:\n        field = nodes.field()\n        field += nodes.field_name('', 'rtype')\n        field += nodes.field_body('', nodes.paragraph('', annotations['return']))\n        node += field\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects/sphinx/sphinx/ext/autodoc/typehints.py lines 126-130)": [
      "\n    if 'return' in annotations and 'return' not in arguments:\n        field = nodes.field()\n        field += nodes.field_name('', 'rtype')\n        field += nodes.field_body('', nodes.paragraph('', annotations['return']))\n        node += field\n",
      "\n    if 'return' in annotations and 'return' not in arguments:\n        field = nodes.field()\n        field += nodes.field_name('', 'rtype')\n        field += nodes.field_body('', nodes.paragraph('', annotations['return']))\n        node += field\n",
      "\n    if 'return' in annotations and 'return' not in arguments:\n        field = nodes.field()\n        field += nodes.field_name('', 'rtype')\n        field += nodes.field_body('', nodes.paragraph('', annotations['return']))\n        node += field\n",
      "\n    if 'return' in annotations and 'return' not in arguments:\n        field = nodes.field()\n        field += nodes.field_name('', 'rtype')\n        field += nodes.field_body('', nodes.paragraph('', annotations['return']))\n        node += field\n",
      "\n    if 'return' in annotations and 'return' not in arguments:\n        field = nodes.field()\n        field += nodes.field_name('', 'rtype')\n        field += nodes.field_body('', nodes.paragraph('', annotations['return']))\n        node += field\n",
      "\n    if 'return' in annotations and 'return' not in arguments:\n        field = nodes.field()\n        field += nodes.field_name('', 'rtype')\n        field += nodes.field_body('', nodes.paragraph('', annotations['return']))\n        node += field\n",
      "\n    if 'return' in annotations and 'return' not in arguments:\n        field = nodes.field()\n        field += nodes.field_name('', 'rtype')\n        field += nodes.field_body('', nodes.paragraph('', annotations['return']))\n        node += field\n",
      "\n    if 'return' in annotations and 'return' not in arguments:\n        field = nodes.field()\n        field += nodes.field_name('', 'rtype')\n        field += nodes.field_body('', nodes.paragraph('', annotations['return']))\n        node += field\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex f917dbdf3..1427dc7de 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -123,10 +123,11 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n \n         node += field\n \n+\n     if 'return' in annotations and 'return' not in arguments:\n         field = nodes.field()\n         field += nodes.field_name('', 'rtype')\n-        field += nodes.field_body('', nodes.paragraph('', annotation))\n+        field += nodes.field_body('', nodes.paragraph('', annotations['return']))\n         node += field\n \n \n",
    "variant_0": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex f917dbdf3..1427dc7de 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -123,10 +123,11 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n \n         node += field\n \n+\n     if 'return' in annotations and 'return' not in arguments:\n         field = nodes.field()\n         field += nodes.field_name('', 'rtype')\n-        field += nodes.field_body('', nodes.paragraph('', annotation))\n+        field += nodes.field_body('', nodes.paragraph('', annotations['return']))\n         node += field\n \n \n",
    "variant_1": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex f917dbdf3..1427dc7de 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -123,10 +123,11 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n \n         node += field\n \n+\n     if 'return' in annotations and 'return' not in arguments:\n         field = nodes.field()\n         field += nodes.field_name('', 'rtype')\n-        field += nodes.field_body('', nodes.paragraph('', annotation))\n+        field += nodes.field_body('', nodes.paragraph('', annotations['return']))\n         node += field\n \n \n",
    "variant_2": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex f917dbdf3..1427dc7de 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -123,10 +123,11 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n \n         node += field\n \n+\n     if 'return' in annotations and 'return' not in arguments:\n         field = nodes.field()\n         field += nodes.field_name('', 'rtype')\n-        field += nodes.field_body('', nodes.paragraph('', annotation))\n+        field += nodes.field_body('', nodes.paragraph('', annotations['return']))\n         node += field\n \n \n",
    "variant_3": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex f917dbdf3..1427dc7de 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -123,10 +123,11 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n \n         node += field\n \n+\n     if 'return' in annotations and 'return' not in arguments:\n         field = nodes.field()\n         field += nodes.field_name('', 'rtype')\n-        field += nodes.field_body('', nodes.paragraph('', annotation))\n+        field += nodes.field_body('', nodes.paragraph('', annotations['return']))\n         node += field\n \n \n",
    "variant_4": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex f917dbdf3..1427dc7de 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -123,10 +123,11 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n \n         node += field\n \n+\n     if 'return' in annotations and 'return' not in arguments:\n         field = nodes.field()\n         field += nodes.field_name('', 'rtype')\n-        field += nodes.field_body('', nodes.paragraph('', annotation))\n+        field += nodes.field_body('', nodes.paragraph('', annotations['return']))\n         node += field\n \n \n",
    "variant_5": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex f917dbdf3..1427dc7de 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -123,10 +123,11 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n \n         node += field\n \n+\n     if 'return' in annotations and 'return' not in arguments:\n         field = nodes.field()\n         field += nodes.field_name('', 'rtype')\n-        field += nodes.field_body('', nodes.paragraph('', annotation))\n+        field += nodes.field_body('', nodes.paragraph('', annotations['return']))\n         node += field\n \n \n",
    "variant_6": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex f917dbdf3..1427dc7de 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -123,10 +123,11 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n \n         node += field\n \n+\n     if 'return' in annotations and 'return' not in arguments:\n         field = nodes.field()\n         field += nodes.field_name('', 'rtype')\n-        field += nodes.field_body('', nodes.paragraph('', annotation))\n+        field += nodes.field_body('', nodes.paragraph('', annotations['return']))\n         node += field\n \n \n",
    "variant_7": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex f917dbdf3..1427dc7de 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -123,10 +123,11 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n \n         node += field\n \n+\n     if 'return' in annotations and 'return' not in arguments:\n         field = nodes.field()\n         field += nodes.field_name('', 'rtype')\n-        field += nodes.field_body('', nodes.paragraph('', annotation))\n+        field += nodes.field_body('', nodes.paragraph('', annotations['return']))\n         node += field\n \n \n",
    "variant_8": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex f917dbdf3..1427dc7de 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -123,10 +123,11 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n \n         node += field\n \n+\n     if 'return' in annotations and 'return' not in arguments:\n         field = nodes.field()\n         field += nodes.field_name('', 'rtype')\n-        field += nodes.field_body('', nodes.paragraph('', annotation))\n+        field += nodes.field_body('', nodes.paragraph('', annotations['return']))\n         node += field\n \n \n"
  }
}