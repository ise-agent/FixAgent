{
  "zero_patches": {
    "Location 1 (/root/hy/projects/pylint/pylint/config/__init__.py lines 58-66)": "\nUSER_HOME = os.path.expanduser(\"~\")\nif \"PYLINTHOME\" in os.environ:\n    PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n    if USER_HOME == \"~\":\n        USER_HOME = os.path.dirname(PYLINT_HOME)\nelif USER_HOME == \"~\":\n    # Handle case where home directory expansion fails\n    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\nelse:\n    # XDG Base Directory Specification compliant path\n    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(USER_HOME, \".local\", \"share\"))\n    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n",
    "Location 2 (/root/hy/projects/pylint/pylint/config/__init__.py lines 84-88)": "\ndef save_results(results, base):\n    if not os.path.exists(PYLINT_HOME):\n        try:\n            os.makedirs(PYLINT_HOME, exist_ok=True)\n        except OSError:\n            print(\"Unable to create directory %s\" % PYLINT_HOME, file=sys.stderr)\n",
    "Location 3 (/root/hy/projects/pylint/tests/lint/unittest_lint.py lines 629-635)": "\n@pytest.mark.usefixtures(\"pop_pylintrc\")\ndef test_pylint_home():\n    uhome = os.path.expanduser(\"~\")\n    if uhome == \"~\":\n        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n        expected = os.path.join(xdg_data_home, \"pylint\")\n    else:\n        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(uhome, \".local\", \"share\"))\n        expected = os.path.join(xdg_data_home, \"pylint\")\n    assert config.PYLINT_HOME == expected\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects/pylint/pylint/config/__init__.py lines 58-66)": [
      "\nUSER_HOME = os.path.expanduser(\"~\")\nif \"PYLINTHOME\" in os.environ:\n    PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n    if USER_HOME == \"~\":\n        USER_HOME = os.path.dirname(PYLINT_HOME)\nelif USER_HOME == \"~\":\n    # Handle case where home directory expansion fails\n    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\nelse:\n    # XDG Base Directory Specification compliant path\n    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(USER_HOME, \".local\", \"share\"))\n    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n",
      "\nUSER_HOME = os.path.expanduser(\"~\")\nif \"PYLINTHOME\" in os.environ:\n    PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n    if USER_HOME == \"~\":\n        USER_HOME = os.path.dirname(PYLINT_HOME)\nelif USER_HOME == \"~\":\n    # Handle case where home directory expansion fails\n    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\nelse:\n    # XDG Base Directory Specification compliant path\n    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(USER_HOME, \".local\", \"share\"))\n    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n",
      "\nUSER_HOME = os.path.expanduser(\"~\")\nif \"PYLINTHOME\" in os.environ:\n    PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n    if USER_HOME == \"~\":\n        USER_HOME = os.path.dirname(PYLINT_HOME)\nelif USER_HOME == \"~\":\n    # Handle case where home directory expansion fails\n    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\nelse:\n    # XDG Base Directory Specification compliant path\n    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(USER_HOME, \".local\", \"share\"))\n    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n",
      "\nUSER_HOME = os.path.expanduser(\"~\")\nif \"PYLINTHOME\" in os.environ:\n    PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n    if USER_HOME == \"~\":\n        USER_HOME = os.path.dirname(PYLINT_HOME)\nelif USER_HOME == \"~\":\n    # Handle case where home directory expansion fails\n    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\nelse:\n    # XDG Base Directory Specification compliant path\n    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(USER_HOME, \".local\", \"share\"))\n    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n",
      "\nUSER_HOME = os.path.expanduser(\"~\")\nif \"PYLINTHOME\" in os.environ:\n    PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n    if USER_HOME == \"~\":\n        USER_HOME = os.path.dirname(PYLINT_HOME)\nelif USER_HOME == \"~\":\n    # Handle case where home directory expansion fails\n    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\nelse:\n    # XDG Base Directory Specification compliant path\n    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(USER_HOME, \".local\", \"share\"))\n    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n",
      "\nUSER_HOME = os.path.expanduser(\"~\")\nif \"PYLINTHOME\" in os.environ:\n    PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n    if USER_HOME == \"~\":\n        USER_HOME = os.path.dirname(PYLINT_HOME)\nelif USER_HOME == \"~\":\n    # Handle case where home directory expansion fails\n    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\nelse:\n    # XDG Base Directory Specification compliant path\n    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(USER_HOME, \".local\", \"share\"))\n    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n",
      "\nUSER_HOME = os.path.expanduser(\"~\")\nif \"PYLINTHOME\" in os.environ:\n    PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n    if USER_HOME == \"~\":\n        USER_HOME = os.path.dirname(PYLINT_HOME)\nelif USER_HOME == \"~\":\n    # Handle case where home directory expansion fails\n    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\nelse:\n    # XDG Base Directory Specification compliant path\n    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(USER_HOME, \".local\", \"share\"))\n    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n",
      "\nUSER_HOME = os.path.expanduser(\"~\")\nif \"PYLINTHOME\" in os.environ:\n    PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n    if USER_HOME == \"~\":\n        USER_HOME = os.path.dirname(PYLINT_HOME)\nelif USER_HOME == \"~\":\n    # Handle case where home directory expansion fails\n    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\nelse:\n    # XDG Base Directory Specification compliant path\n    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(USER_HOME, \".local\", \"share\"))\n    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n"
    ],
    "Location 2 (/root/hy/projects/pylint/pylint/config/__init__.py lines 84-88)": [
      "\ndef save_results(results, base):\n    if not os.path.exists(PYLINT_HOME):\n        try:\n            os.makedirs(PYLINT_HOME, exist_ok=True)\n        except OSError:\n            print(\"Unable to create directory %s\" % PYLINT_HOME, file=sys.stderr)\n",
      "\ndef save_results(results, base):\n    if not os.path.exists(PYLINT_HOME):\n        try:\n            os.makedirs(PYLINT_HOME, exist_ok=True)\n        except OSError:\n            print(\"Unable to create directory %s\" % PYLINT_HOME, file=sys.stderr)\n",
      "\ndef save_results(results, base):\n    if not os.path.exists(PYLINT_HOME):\n        try:\n            os.makedirs(PYLINT_HOME, exist_ok=True)\n        except OSError:\n            print(\"Unable to create directory %s\" % PYLINT_HOME, file=sys.stderr)\n",
      "\ndef save_results(results, base):\n    if not os.path.exists(PYLINT_HOME):\n        try:\n            os.makedirs(PYLINT_HOME, exist_ok=True)\n        except OSError:\n            print(\"Unable to create directory %s\" % PYLINT_HOME, file=sys.stderr)\n",
      "\ndef save_results(results, base):\n    if not os.path.exists(PYLINT_HOME):\n        try:\n            os.makedirs(PYLINT_HOME, exist_ok=True)\n        except OSError:\n            print(\"Unable to create directory %s\" % PYLINT_HOME, file=sys.stderr)\n",
      "\ndef save_results(results, base):\n    if not os.path.exists(PYLINT_HOME):\n        try:\n            os.makedirs(PYLINT_HOME, exist_ok=True)\n        except OSError:\n            print(\"Unable to create directory %s\" % PYLINT_HOME, file=sys.stderr)\n",
      "\ndef save_results(results, base):\n    if not os.path.exists(PYLINT_HOME):\n        try:\n            os.makedirs(PYLINT_HOME, exist_ok=True)\n        except OSError:\n            print(\"Unable to create directory %s\" % PYLINT_HOME, file=sys.stderr)\n",
      "\ndef save_results(results, base):\n    if not os.path.exists(PYLINT_HOME):\n        try:\n            os.makedirs(PYLINT_HOME, exist_ok=True)\n        except OSError:\n            print(\"Unable to create directory %s\" % PYLINT_HOME, file=sys.stderr)\n"
    ],
    "Location 3 (/root/hy/projects/pylint/tests/lint/unittest_lint.py lines 629-635)": [
      "\n@pytest.mark.usefixtures(\"pop_pylintrc\")\ndef test_pylint_home():\n    uhome = os.path.expanduser(\"~\")\n    if uhome == \"~\":\n        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n        expected = os.path.join(xdg_data_home, \"pylint\")\n    else:\n        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(uhome, \".local\", \"share\"))\n        expected = os.path.join(xdg_data_home, \"pylint\")\n    assert config.PYLINT_HOME == expected\n",
      "\n@pytest.mark.usefixtures(\"pop_pylintrc\")\ndef test_pylint_home():\n    uhome = os.path.expanduser(\"~\")\n    if uhome == \"~\":\n        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n        expected = os.path.join(xdg_data_home, \"pylint\")\n    else:\n        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(uhome, \".local\", \"share\"))\n        expected = os.path.join(xdg_data_home, \"pylint\")\n    assert config.PYLINT_HOME == expected\n",
      "\n@pytest.mark.usefixtures(\"pop_pylintrc\")\ndef test_pylint_home():\n    uhome = os.path.expanduser(\"~\")\n    if uhome == \"~\":\n        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n        expected = os.path.join(xdg_data_home, \"pylint\")\n    else:\n        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(uhome, \".local\", \"share\"))\n        expected = os.path.join(xdg_data_home, \"pylint\")\n    assert config.PYLINT_HOME == expected\n",
      "\n@pytest.mark.usefixtures(\"pop_pylintrc\")\ndef test_pylint_home():\n    uhome = os.path.expanduser(\"~\")\n    if uhome == \"~\":\n        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n        expected = os.path.join(xdg_data_home, \"pylint\")\n    else:\n        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(uhome, \".local\", \"share\"))\n        expected = os.path.join(xdg_data_home, \"pylint\")\n    assert config.PYLINT_HOME == expected\n",
      "\n@pytest.mark.usefixtures(\"pop_pylintrc\")\ndef test_pylint_home():\n    uhome = os.path.expanduser(\"~\")\n    if uhome == \"~\":\n        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n        expected = os.path.join(xdg_data_home, \"pylint\")\n    else:\n        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(uhome, \".local\", \"share\"))\n        expected = os.path.join(xdg_data_home, \"pylint\")\n    assert config.PYLINT_HOME == expected\n",
      "\n@pytest.mark.usefixtures(\"pop_pylintrc\")\ndef test_pylint_home():\n    uhome = os.path.expanduser(\"~\")\n    if uhome == \"~\":\n        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n        expected = os.path.join(xdg_data_home, \"pylint\")\n    else:\n        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(uhome, \".local\", \"share\"))\n        expected = os.path.join(xdg_data_home, \"pylint\")\n    assert config.PYLINT_HOME == expected\n",
      "\n@pytest.mark.usefixtures(\"pop_pylintrc\")\ndef test_pylint_home():\n    uhome = os.path.expanduser(\"~\")\n    if uhome == \"~\":\n        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n        expected = os.path.join(xdg_data_home, \"pylint\")\n    else:\n        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(uhome, \".local\", \"share\"))\n        expected = os.path.join(xdg_data_home, \"pylint\")\n    assert config.PYLINT_HOME == expected\n",
      "\n@pytest.mark.usefixtures(\"pop_pylintrc\")\ndef test_pylint_home():\n    uhome = os.path.expanduser(\"~\")\n    if uhome == \"~\":\n        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n        expected = os.path.join(xdg_data_home, \"pylint\")\n    else:\n        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(uhome, \".local\", \"share\"))\n        expected = os.path.join(xdg_data_home, \"pylint\")\n    assert config.PYLINT_HOME == expected\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/pylint/config/__init__.py b/pylint/config/__init__.py\nindex 84774d0e3..eea595994 100644\n--- a/pylint/config/__init__.py\n+++ b/pylint/config/__init__.py\n@@ -55,15 +55,20 @@ __all__ = [\n     \"UnsupportedAction\",\n ]\n \n+\n USER_HOME = os.path.expanduser(\"~\")\n if \"PYLINTHOME\" in os.environ:\n     PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n     if USER_HOME == \"~\":\n         USER_HOME = os.path.dirname(PYLINT_HOME)\n elif USER_HOME == \"~\":\n-    PYLINT_HOME = \".pylint.d\"\n+    # Handle case where home directory expansion fails\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n+    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n else:\n-    PYLINT_HOME = os.path.join(USER_HOME, \".pylint.d\")\n+    # XDG Base Directory Specification compliant path\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(USER_HOME, \".local\", \"share\"))\n+    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n \n \n def _get_pdata_path(base_name, recurs):\n@@ -81,9 +86,10 @@ def load_results(base):\n \n \n def save_results(results, base):\n+\n     if not os.path.exists(PYLINT_HOME):\n         try:\n-            os.mkdir(PYLINT_HOME)\n+            os.makedirs(PYLINT_HOME, exist_ok=True)\n         except OSError:\n             print(\"Unable to create directory %s\" % PYLINT_HOME, file=sys.stderr)\n     data_file = _get_pdata_path(base, 1)\ndiff --git a/tests/lint/unittest_lint.py b/tests/lint/unittest_lint.py\nindex 004c29281..c501dc81b 100644\n--- a/tests/lint/unittest_lint.py\n+++ b/tests/lint/unittest_lint.py\n@@ -626,12 +626,15 @@ def pop_pylintrc():\n \n \n @pytest.mark.usefixtures(\"pop_pylintrc\")\n+\n def test_pylint_home():\n     uhome = os.path.expanduser(\"~\")\n     if uhome == \"~\":\n-        expected = \".pylint.d\"\n+        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n+        expected = os.path.join(xdg_data_home, \"pylint\")\n     else:\n-        expected = os.path.join(uhome, \".pylint.d\")\n+        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(uhome, \".local\", \"share\"))\n+        expected = os.path.join(xdg_data_home, \"pylint\")\n     assert config.PYLINT_HOME == expected\n \n     try:\n",
    "variant_0": "diff --git a/pylint/config/__init__.py b/pylint/config/__init__.py\nindex 84774d0e3..81ecb2cb2 100644\n--- a/pylint/config/__init__.py\n+++ b/pylint/config/__init__.py\n@@ -55,15 +55,20 @@ __all__ = [\n     \"UnsupportedAction\",\n ]\n \n+\n USER_HOME = os.path.expanduser(\"~\")\n if \"PYLINTHOME\" in os.environ:\n     PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n     if USER_HOME == \"~\":\n         USER_HOME = os.path.dirname(PYLINT_HOME)\n elif USER_HOME == \"~\":\n-    PYLINT_HOME = \".pylint.d\"\n+    # Handle case where home directory expansion fails\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n+    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n else:\n-    PYLINT_HOME = os.path.join(USER_HOME, \".pylint.d\")\n+    # XDG Base Directory Specification compliant path\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(USER_HOME, \".local\", \"share\"))\n+    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n \n \n def _get_pdata_path(base_name, recurs):\n@@ -80,10 +85,12 @@ def load_results(base):\n         return {}\n \n \n+def save_results(results, base):\n+\n def save_results(results, base):\n     if not os.path.exists(PYLINT_HOME):\n         try:\n-            os.mkdir(PYLINT_HOME)\n+            os.makedirs(PYLINT_HOME, exist_ok=True)\n         except OSError:\n             print(\"Unable to create directory %s\" % PYLINT_HOME, file=sys.stderr)\n     data_file = _get_pdata_path(base, 1)\ndiff --git a/tests/lint/unittest_lint.py b/tests/lint/unittest_lint.py\nindex 004c29281..b6c1a3ae8 100644\n--- a/tests/lint/unittest_lint.py\n+++ b/tests/lint/unittest_lint.py\n@@ -625,13 +625,17 @@ def pop_pylintrc():\n     os.environ.pop(\"PYLINTRC\", None)\n \n \n+@pytest.mark.usefixtures(\"pop_pylintrc\")\n+\n @pytest.mark.usefixtures(\"pop_pylintrc\")\n def test_pylint_home():\n     uhome = os.path.expanduser(\"~\")\n     if uhome == \"~\":\n-        expected = \".pylint.d\"\n+        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n+        expected = os.path.join(xdg_data_home, \"pylint\")\n     else:\n-        expected = os.path.join(uhome, \".pylint.d\")\n+        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(uhome, \".local\", \"share\"))\n+        expected = os.path.join(xdg_data_home, \"pylint\")\n     assert config.PYLINT_HOME == expected\n \n     try:\n",
    "variant_1": "diff --git a/pylint/config/__init__.py b/pylint/config/__init__.py\nindex 84774d0e3..81ecb2cb2 100644\n--- a/pylint/config/__init__.py\n+++ b/pylint/config/__init__.py\n@@ -55,15 +55,20 @@ __all__ = [\n     \"UnsupportedAction\",\n ]\n \n+\n USER_HOME = os.path.expanduser(\"~\")\n if \"PYLINTHOME\" in os.environ:\n     PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n     if USER_HOME == \"~\":\n         USER_HOME = os.path.dirname(PYLINT_HOME)\n elif USER_HOME == \"~\":\n-    PYLINT_HOME = \".pylint.d\"\n+    # Handle case where home directory expansion fails\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n+    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n else:\n-    PYLINT_HOME = os.path.join(USER_HOME, \".pylint.d\")\n+    # XDG Base Directory Specification compliant path\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(USER_HOME, \".local\", \"share\"))\n+    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n \n \n def _get_pdata_path(base_name, recurs):\n@@ -80,10 +85,12 @@ def load_results(base):\n         return {}\n \n \n+def save_results(results, base):\n+\n def save_results(results, base):\n     if not os.path.exists(PYLINT_HOME):\n         try:\n-            os.mkdir(PYLINT_HOME)\n+            os.makedirs(PYLINT_HOME, exist_ok=True)\n         except OSError:\n             print(\"Unable to create directory %s\" % PYLINT_HOME, file=sys.stderr)\n     data_file = _get_pdata_path(base, 1)\ndiff --git a/tests/lint/unittest_lint.py b/tests/lint/unittest_lint.py\nindex 004c29281..b6c1a3ae8 100644\n--- a/tests/lint/unittest_lint.py\n+++ b/tests/lint/unittest_lint.py\n@@ -625,13 +625,17 @@ def pop_pylintrc():\n     os.environ.pop(\"PYLINTRC\", None)\n \n \n+@pytest.mark.usefixtures(\"pop_pylintrc\")\n+\n @pytest.mark.usefixtures(\"pop_pylintrc\")\n def test_pylint_home():\n     uhome = os.path.expanduser(\"~\")\n     if uhome == \"~\":\n-        expected = \".pylint.d\"\n+        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n+        expected = os.path.join(xdg_data_home, \"pylint\")\n     else:\n-        expected = os.path.join(uhome, \".pylint.d\")\n+        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(uhome, \".local\", \"share\"))\n+        expected = os.path.join(xdg_data_home, \"pylint\")\n     assert config.PYLINT_HOME == expected\n \n     try:\n",
    "variant_2": "diff --git a/pylint/config/__init__.py b/pylint/config/__init__.py\nindex 84774d0e3..81ecb2cb2 100644\n--- a/pylint/config/__init__.py\n+++ b/pylint/config/__init__.py\n@@ -55,15 +55,20 @@ __all__ = [\n     \"UnsupportedAction\",\n ]\n \n+\n USER_HOME = os.path.expanduser(\"~\")\n if \"PYLINTHOME\" in os.environ:\n     PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n     if USER_HOME == \"~\":\n         USER_HOME = os.path.dirname(PYLINT_HOME)\n elif USER_HOME == \"~\":\n-    PYLINT_HOME = \".pylint.d\"\n+    # Handle case where home directory expansion fails\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n+    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n else:\n-    PYLINT_HOME = os.path.join(USER_HOME, \".pylint.d\")\n+    # XDG Base Directory Specification compliant path\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(USER_HOME, \".local\", \"share\"))\n+    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n \n \n def _get_pdata_path(base_name, recurs):\n@@ -80,10 +85,12 @@ def load_results(base):\n         return {}\n \n \n+def save_results(results, base):\n+\n def save_results(results, base):\n     if not os.path.exists(PYLINT_HOME):\n         try:\n-            os.mkdir(PYLINT_HOME)\n+            os.makedirs(PYLINT_HOME, exist_ok=True)\n         except OSError:\n             print(\"Unable to create directory %s\" % PYLINT_HOME, file=sys.stderr)\n     data_file = _get_pdata_path(base, 1)\ndiff --git a/tests/lint/unittest_lint.py b/tests/lint/unittest_lint.py\nindex 004c29281..b6c1a3ae8 100644\n--- a/tests/lint/unittest_lint.py\n+++ b/tests/lint/unittest_lint.py\n@@ -625,13 +625,17 @@ def pop_pylintrc():\n     os.environ.pop(\"PYLINTRC\", None)\n \n \n+@pytest.mark.usefixtures(\"pop_pylintrc\")\n+\n @pytest.mark.usefixtures(\"pop_pylintrc\")\n def test_pylint_home():\n     uhome = os.path.expanduser(\"~\")\n     if uhome == \"~\":\n-        expected = \".pylint.d\"\n+        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n+        expected = os.path.join(xdg_data_home, \"pylint\")\n     else:\n-        expected = os.path.join(uhome, \".pylint.d\")\n+        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(uhome, \".local\", \"share\"))\n+        expected = os.path.join(xdg_data_home, \"pylint\")\n     assert config.PYLINT_HOME == expected\n \n     try:\n",
    "variant_3": "diff --git a/pylint/config/__init__.py b/pylint/config/__init__.py\nindex 84774d0e3..81ecb2cb2 100644\n--- a/pylint/config/__init__.py\n+++ b/pylint/config/__init__.py\n@@ -55,15 +55,20 @@ __all__ = [\n     \"UnsupportedAction\",\n ]\n \n+\n USER_HOME = os.path.expanduser(\"~\")\n if \"PYLINTHOME\" in os.environ:\n     PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n     if USER_HOME == \"~\":\n         USER_HOME = os.path.dirname(PYLINT_HOME)\n elif USER_HOME == \"~\":\n-    PYLINT_HOME = \".pylint.d\"\n+    # Handle case where home directory expansion fails\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n+    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n else:\n-    PYLINT_HOME = os.path.join(USER_HOME, \".pylint.d\")\n+    # XDG Base Directory Specification compliant path\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(USER_HOME, \".local\", \"share\"))\n+    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n \n \n def _get_pdata_path(base_name, recurs):\n@@ -80,10 +85,12 @@ def load_results(base):\n         return {}\n \n \n+def save_results(results, base):\n+\n def save_results(results, base):\n     if not os.path.exists(PYLINT_HOME):\n         try:\n-            os.mkdir(PYLINT_HOME)\n+            os.makedirs(PYLINT_HOME, exist_ok=True)\n         except OSError:\n             print(\"Unable to create directory %s\" % PYLINT_HOME, file=sys.stderr)\n     data_file = _get_pdata_path(base, 1)\ndiff --git a/tests/lint/unittest_lint.py b/tests/lint/unittest_lint.py\nindex 004c29281..b6c1a3ae8 100644\n--- a/tests/lint/unittest_lint.py\n+++ b/tests/lint/unittest_lint.py\n@@ -625,13 +625,17 @@ def pop_pylintrc():\n     os.environ.pop(\"PYLINTRC\", None)\n \n \n+@pytest.mark.usefixtures(\"pop_pylintrc\")\n+\n @pytest.mark.usefixtures(\"pop_pylintrc\")\n def test_pylint_home():\n     uhome = os.path.expanduser(\"~\")\n     if uhome == \"~\":\n-        expected = \".pylint.d\"\n+        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n+        expected = os.path.join(xdg_data_home, \"pylint\")\n     else:\n-        expected = os.path.join(uhome, \".pylint.d\")\n+        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(uhome, \".local\", \"share\"))\n+        expected = os.path.join(xdg_data_home, \"pylint\")\n     assert config.PYLINT_HOME == expected\n \n     try:\n",
    "variant_4": "diff --git a/pylint/config/__init__.py b/pylint/config/__init__.py\nindex 84774d0e3..81ecb2cb2 100644\n--- a/pylint/config/__init__.py\n+++ b/pylint/config/__init__.py\n@@ -55,15 +55,20 @@ __all__ = [\n     \"UnsupportedAction\",\n ]\n \n+\n USER_HOME = os.path.expanduser(\"~\")\n if \"PYLINTHOME\" in os.environ:\n     PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n     if USER_HOME == \"~\":\n         USER_HOME = os.path.dirname(PYLINT_HOME)\n elif USER_HOME == \"~\":\n-    PYLINT_HOME = \".pylint.d\"\n+    # Handle case where home directory expansion fails\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n+    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n else:\n-    PYLINT_HOME = os.path.join(USER_HOME, \".pylint.d\")\n+    # XDG Base Directory Specification compliant path\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(USER_HOME, \".local\", \"share\"))\n+    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n \n \n def _get_pdata_path(base_name, recurs):\n@@ -80,10 +85,12 @@ def load_results(base):\n         return {}\n \n \n+def save_results(results, base):\n+\n def save_results(results, base):\n     if not os.path.exists(PYLINT_HOME):\n         try:\n-            os.mkdir(PYLINT_HOME)\n+            os.makedirs(PYLINT_HOME, exist_ok=True)\n         except OSError:\n             print(\"Unable to create directory %s\" % PYLINT_HOME, file=sys.stderr)\n     data_file = _get_pdata_path(base, 1)\ndiff --git a/tests/lint/unittest_lint.py b/tests/lint/unittest_lint.py\nindex 004c29281..b6c1a3ae8 100644\n--- a/tests/lint/unittest_lint.py\n+++ b/tests/lint/unittest_lint.py\n@@ -625,13 +625,17 @@ def pop_pylintrc():\n     os.environ.pop(\"PYLINTRC\", None)\n \n \n+@pytest.mark.usefixtures(\"pop_pylintrc\")\n+\n @pytest.mark.usefixtures(\"pop_pylintrc\")\n def test_pylint_home():\n     uhome = os.path.expanduser(\"~\")\n     if uhome == \"~\":\n-        expected = \".pylint.d\"\n+        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n+        expected = os.path.join(xdg_data_home, \"pylint\")\n     else:\n-        expected = os.path.join(uhome, \".pylint.d\")\n+        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(uhome, \".local\", \"share\"))\n+        expected = os.path.join(xdg_data_home, \"pylint\")\n     assert config.PYLINT_HOME == expected\n \n     try:\n",
    "variant_5": "diff --git a/pylint/config/__init__.py b/pylint/config/__init__.py\nindex 84774d0e3..81ecb2cb2 100644\n--- a/pylint/config/__init__.py\n+++ b/pylint/config/__init__.py\n@@ -55,15 +55,20 @@ __all__ = [\n     \"UnsupportedAction\",\n ]\n \n+\n USER_HOME = os.path.expanduser(\"~\")\n if \"PYLINTHOME\" in os.environ:\n     PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n     if USER_HOME == \"~\":\n         USER_HOME = os.path.dirname(PYLINT_HOME)\n elif USER_HOME == \"~\":\n-    PYLINT_HOME = \".pylint.d\"\n+    # Handle case where home directory expansion fails\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n+    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n else:\n-    PYLINT_HOME = os.path.join(USER_HOME, \".pylint.d\")\n+    # XDG Base Directory Specification compliant path\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(USER_HOME, \".local\", \"share\"))\n+    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n \n \n def _get_pdata_path(base_name, recurs):\n@@ -80,10 +85,12 @@ def load_results(base):\n         return {}\n \n \n+def save_results(results, base):\n+\n def save_results(results, base):\n     if not os.path.exists(PYLINT_HOME):\n         try:\n-            os.mkdir(PYLINT_HOME)\n+            os.makedirs(PYLINT_HOME, exist_ok=True)\n         except OSError:\n             print(\"Unable to create directory %s\" % PYLINT_HOME, file=sys.stderr)\n     data_file = _get_pdata_path(base, 1)\ndiff --git a/tests/lint/unittest_lint.py b/tests/lint/unittest_lint.py\nindex 004c29281..b6c1a3ae8 100644\n--- a/tests/lint/unittest_lint.py\n+++ b/tests/lint/unittest_lint.py\n@@ -625,13 +625,17 @@ def pop_pylintrc():\n     os.environ.pop(\"PYLINTRC\", None)\n \n \n+@pytest.mark.usefixtures(\"pop_pylintrc\")\n+\n @pytest.mark.usefixtures(\"pop_pylintrc\")\n def test_pylint_home():\n     uhome = os.path.expanduser(\"~\")\n     if uhome == \"~\":\n-        expected = \".pylint.d\"\n+        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n+        expected = os.path.join(xdg_data_home, \"pylint\")\n     else:\n-        expected = os.path.join(uhome, \".pylint.d\")\n+        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(uhome, \".local\", \"share\"))\n+        expected = os.path.join(xdg_data_home, \"pylint\")\n     assert config.PYLINT_HOME == expected\n \n     try:\n",
    "variant_6": "diff --git a/pylint/config/__init__.py b/pylint/config/__init__.py\nindex 84774d0e3..81ecb2cb2 100644\n--- a/pylint/config/__init__.py\n+++ b/pylint/config/__init__.py\n@@ -55,15 +55,20 @@ __all__ = [\n     \"UnsupportedAction\",\n ]\n \n+\n USER_HOME = os.path.expanduser(\"~\")\n if \"PYLINTHOME\" in os.environ:\n     PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n     if USER_HOME == \"~\":\n         USER_HOME = os.path.dirname(PYLINT_HOME)\n elif USER_HOME == \"~\":\n-    PYLINT_HOME = \".pylint.d\"\n+    # Handle case where home directory expansion fails\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n+    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n else:\n-    PYLINT_HOME = os.path.join(USER_HOME, \".pylint.d\")\n+    # XDG Base Directory Specification compliant path\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(USER_HOME, \".local\", \"share\"))\n+    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n \n \n def _get_pdata_path(base_name, recurs):\n@@ -80,10 +85,12 @@ def load_results(base):\n         return {}\n \n \n+def save_results(results, base):\n+\n def save_results(results, base):\n     if not os.path.exists(PYLINT_HOME):\n         try:\n-            os.mkdir(PYLINT_HOME)\n+            os.makedirs(PYLINT_HOME, exist_ok=True)\n         except OSError:\n             print(\"Unable to create directory %s\" % PYLINT_HOME, file=sys.stderr)\n     data_file = _get_pdata_path(base, 1)\ndiff --git a/tests/lint/unittest_lint.py b/tests/lint/unittest_lint.py\nindex 004c29281..b6c1a3ae8 100644\n--- a/tests/lint/unittest_lint.py\n+++ b/tests/lint/unittest_lint.py\n@@ -625,13 +625,17 @@ def pop_pylintrc():\n     os.environ.pop(\"PYLINTRC\", None)\n \n \n+@pytest.mark.usefixtures(\"pop_pylintrc\")\n+\n @pytest.mark.usefixtures(\"pop_pylintrc\")\n def test_pylint_home():\n     uhome = os.path.expanduser(\"~\")\n     if uhome == \"~\":\n-        expected = \".pylint.d\"\n+        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n+        expected = os.path.join(xdg_data_home, \"pylint\")\n     else:\n-        expected = os.path.join(uhome, \".pylint.d\")\n+        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(uhome, \".local\", \"share\"))\n+        expected = os.path.join(xdg_data_home, \"pylint\")\n     assert config.PYLINT_HOME == expected\n \n     try:\n",
    "variant_7": "diff --git a/pylint/config/__init__.py b/pylint/config/__init__.py\nindex 84774d0e3..81ecb2cb2 100644\n--- a/pylint/config/__init__.py\n+++ b/pylint/config/__init__.py\n@@ -55,15 +55,20 @@ __all__ = [\n     \"UnsupportedAction\",\n ]\n \n+\n USER_HOME = os.path.expanduser(\"~\")\n if \"PYLINTHOME\" in os.environ:\n     PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n     if USER_HOME == \"~\":\n         USER_HOME = os.path.dirname(PYLINT_HOME)\n elif USER_HOME == \"~\":\n-    PYLINT_HOME = \".pylint.d\"\n+    # Handle case where home directory expansion fails\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n+    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n else:\n-    PYLINT_HOME = os.path.join(USER_HOME, \".pylint.d\")\n+    # XDG Base Directory Specification compliant path\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(USER_HOME, \".local\", \"share\"))\n+    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n \n \n def _get_pdata_path(base_name, recurs):\n@@ -80,10 +85,12 @@ def load_results(base):\n         return {}\n \n \n+def save_results(results, base):\n+\n def save_results(results, base):\n     if not os.path.exists(PYLINT_HOME):\n         try:\n-            os.mkdir(PYLINT_HOME)\n+            os.makedirs(PYLINT_HOME, exist_ok=True)\n         except OSError:\n             print(\"Unable to create directory %s\" % PYLINT_HOME, file=sys.stderr)\n     data_file = _get_pdata_path(base, 1)\ndiff --git a/tests/lint/unittest_lint.py b/tests/lint/unittest_lint.py\nindex 004c29281..b6c1a3ae8 100644\n--- a/tests/lint/unittest_lint.py\n+++ b/tests/lint/unittest_lint.py\n@@ -625,13 +625,17 @@ def pop_pylintrc():\n     os.environ.pop(\"PYLINTRC\", None)\n \n \n+@pytest.mark.usefixtures(\"pop_pylintrc\")\n+\n @pytest.mark.usefixtures(\"pop_pylintrc\")\n def test_pylint_home():\n     uhome = os.path.expanduser(\"~\")\n     if uhome == \"~\":\n-        expected = \".pylint.d\"\n+        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n+        expected = os.path.join(xdg_data_home, \"pylint\")\n     else:\n-        expected = os.path.join(uhome, \".pylint.d\")\n+        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(uhome, \".local\", \"share\"))\n+        expected = os.path.join(xdg_data_home, \"pylint\")\n     assert config.PYLINT_HOME == expected\n \n     try:\n",
    "variant_8": "diff --git a/pylint/config/__init__.py b/pylint/config/__init__.py\nindex 84774d0e3..81ecb2cb2 100644\n--- a/pylint/config/__init__.py\n+++ b/pylint/config/__init__.py\n@@ -55,15 +55,20 @@ __all__ = [\n     \"UnsupportedAction\",\n ]\n \n+\n USER_HOME = os.path.expanduser(\"~\")\n if \"PYLINTHOME\" in os.environ:\n     PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n     if USER_HOME == \"~\":\n         USER_HOME = os.path.dirname(PYLINT_HOME)\n elif USER_HOME == \"~\":\n-    PYLINT_HOME = \".pylint.d\"\n+    # Handle case where home directory expansion fails\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n+    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n else:\n-    PYLINT_HOME = os.path.join(USER_HOME, \".pylint.d\")\n+    # XDG Base Directory Specification compliant path\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(USER_HOME, \".local\", \"share\"))\n+    PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n \n \n def _get_pdata_path(base_name, recurs):\n@@ -80,10 +85,12 @@ def load_results(base):\n         return {}\n \n \n+def save_results(results, base):\n+\n def save_results(results, base):\n     if not os.path.exists(PYLINT_HOME):\n         try:\n-            os.mkdir(PYLINT_HOME)\n+            os.makedirs(PYLINT_HOME, exist_ok=True)\n         except OSError:\n             print(\"Unable to create directory %s\" % PYLINT_HOME, file=sys.stderr)\n     data_file = _get_pdata_path(base, 1)\ndiff --git a/tests/lint/unittest_lint.py b/tests/lint/unittest_lint.py\nindex 004c29281..b6c1a3ae8 100644\n--- a/tests/lint/unittest_lint.py\n+++ b/tests/lint/unittest_lint.py\n@@ -625,13 +625,17 @@ def pop_pylintrc():\n     os.environ.pop(\"PYLINTRC\", None)\n \n \n+@pytest.mark.usefixtures(\"pop_pylintrc\")\n+\n @pytest.mark.usefixtures(\"pop_pylintrc\")\n def test_pylint_home():\n     uhome = os.path.expanduser(\"~\")\n     if uhome == \"~\":\n-        expected = \".pylint.d\"\n+        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", \"~/.local/share\")\n+        expected = os.path.join(xdg_data_home, \"pylint\")\n     else:\n-        expected = os.path.join(uhome, \".pylint.d\")\n+        xdg_data_home = os.environ.get(\"XDG_DATA_HOME\", os.path.join(uhome, \".local\", \"share\"))\n+        expected = os.path.join(xdg_data_home, \"pylint\")\n     assert config.PYLINT_HOME == expected\n \n     try:\n"
  }
}