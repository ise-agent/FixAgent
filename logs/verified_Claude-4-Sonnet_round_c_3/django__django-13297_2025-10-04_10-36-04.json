{
  "zero_patches": {
    "Location 1 (/root/hy/projects/django/django/views/generic/base.py lines 168-182)": "\n# RemovedInDjango40Warning\ndef _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n    class DeprecationWarningDict(dict):\n        def __getitem__(self, key):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().__getitem__(key)\n        \n        def get(self, key, default=None):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().get(key, default)\n    \n    return DeprecationWarningDict(url_kwargs)\n",
    "Location 2 (/root/hy/projects/django/django/views/generic/base.py lines 162-163)": "\n# RemovedInDjango40Warning\ndef _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n    class DeprecationWarningDict(dict):\n        def __getitem__(self, key):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().__getitem__(key)\n        \n        def get(self, key, default=None):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().get(key, default)\n    \n    return DeprecationWarningDict(url_kwargs)\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects/django/django/views/generic/base.py lines 168-182)": [
      "\ndef _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n    class DeprecationWarningDict(dict):\n        def __getitem__(self, key):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().__getitem__(key)\n        \n        def get(self, key, default=None):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().get(key, default)\n    \n    return DeprecationWarningDict(url_kwargs)\n",
      "\ndef _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n    class DeprecationWarningDict(dict):\n        def __getitem__(self, key):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().__getitem__(key)\n        \n        def get(self, key, default=None):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().get(key, default)\n    \n    return DeprecationWarningDict(url_kwargs)\n",
      "\ndef _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n    class DeprecationWarningDict(dict):\n        def __getitem__(self, key):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().__getitem__(key)\n        \n        def get(self, key, default=None):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().get(key, default)\n    \n    return DeprecationWarningDict(url_kwargs)\n",
      "\ndef _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n    class DeprecationWarningDict(dict):\n        def __getitem__(self, key):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().__getitem__(key)\n        \n        def get(self, key, default=None):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().get(key, default)\n    \n    return DeprecationWarningDict(url_kwargs)\n",
      "\ndef _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n    class DeprecationWarningDict(dict):\n        def __getitem__(self, key):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().__getitem__(key)\n        \n        def get(self, key, default=None):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().get(key, default)\n    \n    return DeprecationWarningDict(url_kwargs)\n",
      "\ndef _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n    class DeprecationWarningDict(dict):\n        def __getitem__(self, key):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().__getitem__(key)\n        \n        def get(self, key, default=None):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().get(key, default)\n    \n    return DeprecationWarningDict(url_kwargs)\n",
      "\ndef _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n    class DeprecationWarningDict(dict):\n        def __getitem__(self, key):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().__getitem__(key)\n        \n        def get(self, key, default=None):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().get(key, default)\n    \n    return DeprecationWarningDict(url_kwargs)\n",
      "\ndef _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n    class DeprecationWarningDict(dict):\n        def __getitem__(self, key):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().__getitem__(key)\n        \n        def get(self, key, default=None):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().get(key, default)\n    \n    return DeprecationWarningDict(url_kwargs)\n"
    ],
    "Location 2 (/root/hy/projects/django/django/views/generic/base.py lines 162-163)": [
      "\ndef _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n    class DeprecationWarningDict(dict):\n        def __getitem__(self, key):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().__getitem__(key)\n        \n        def get(self, key, default=None):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().get(key, default)\n    \n    return DeprecationWarningDict(url_kwargs)\n",
      "\n# RemovedInDjango40Warning\ndef _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n    class DeprecationWarningDict(dict):\n        def __getitem__(self, key):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().__getitem__(key)\n        \n        def get(self, key, default=None):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().get(key, default)\n    \n    return DeprecationWarningDict(url_kwargs)\n",
      "\n# RemovedInDjango40Warning\ndef _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n    class DeprecationWarningDict(dict):\n        def __getitem__(self, key):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().__getitem__(key)\n        \n        def get(self, key, default=None):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().get(key, default)\n    \n    return DeprecationWarningDict(url_kwargs)\n",
      "\ndef _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n    class DeprecationWarningDict(dict):\n        def __getitem__(self, key):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().__getitem__(key)\n        \n        def get(self, key, default=None):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().get(key, default)\n    \n    return DeprecationWarningDict(url_kwargs)\n",
      "\n# RemovedInDjango40Warning\ndef _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n    class DeprecationWarningDict(dict):\n        def __getitem__(self, key):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().__getitem__(key)\n        \n        def get(self, key, default=None):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().get(key, default)\n    \n    return DeprecationWarningDict(url_kwargs)\n",
      "\n# RemovedInDjango40Warning\ndef _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n    class DeprecationWarningDict(dict):\n        def __getitem__(self, key):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().__getitem__(key)\n        \n        def get(self, key, default=None):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().get(key, default)\n    \n    return DeprecationWarningDict(url_kwargs)\n",
      "\n# RemovedInDjango40Warning\ndef _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n    class DeprecationWarningDict(dict):\n        def __getitem__(self, key):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().__getitem__(key)\n        \n        def get(self, key, default=None):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().get(key, default)\n    \n    return DeprecationWarningDict(url_kwargs)\n",
      "\n# RemovedInDjango40Warning\ndef _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n    class DeprecationWarningDict(dict):\n        def __getitem__(self, key):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().__getitem__(key)\n        \n        def get(self, key, default=None):\n            if key in url_kwargs:\n                warnings.warn(\n                    'TemplateView passing URL kwargs to the context is '\n                    'deprecated. Reference %s in your template through '\n                    'view.kwargs instead.' % key,\n                    RemovedInDjango40Warning, stacklevel=2,\n                )\n            return super().get(key, default)\n    \n    return DeprecationWarningDict(url_kwargs)\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/django/views/generic/base.py b/django/views/generic/base.py\nindex ea5baca08d..85f0f317f3 100644\n--- a/django/views/generic/base.py\n+++ b/django/views/generic/base.py\n@@ -159,27 +159,37 @@ class TemplateView(TemplateResponseMixin, ContextMixin, View):\n     def get(self, request, *args, **kwargs):\n         # RemovedInDjango40Warning: when the deprecation ends, replace with:\n         #   context = self.get_context_data()\n+\n         context_kwargs = _wrap_url_kwargs_with_deprecation_warning(kwargs)\n         context = self.get_context_data(**context_kwargs)\n         return self.render_to_response(context)\n \n \n # RemovedInDjango40Warning\n+\n def _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n-    context_kwargs = {}\n-    for key, value in url_kwargs.items():\n-        # Bind into function closure.\n-        @SimpleLazyObject\n-        def access_value(key=key, value=value):\n-            warnings.warn(\n-                'TemplateView passing URL kwargs to the context is '\n-                'deprecated. Reference %s in your template through '\n-                'view.kwargs instead.' % key,\n-                RemovedInDjango40Warning, stacklevel=2,\n-            )\n-            return value\n-        context_kwargs[key] = access_value\n-    return context_kwargs\n+    class DeprecationWarningDict(dict):\n+        def __getitem__(self, key):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().__getitem__(key)\n+        \n+        def get(self, key, default=None):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().get(key, default)\n+    \n+    return DeprecationWarningDict(url_kwargs)\n \n \n class RedirectView(View):\n",
    "variant_0": "diff --git a/django/views/generic/base.py b/django/views/generic/base.py\nindex ea5baca08d..086a34360c 100644\n--- a/django/views/generic/base.py\n+++ b/django/views/generic/base.py\n@@ -159,27 +159,60 @@ class TemplateView(TemplateResponseMixin, ContextMixin, View):\n     def get(self, request, *args, **kwargs):\n         # RemovedInDjango40Warning: when the deprecation ends, replace with:\n         #   context = self.get_context_data()\n-        context_kwargs = _wrap_url_kwargs_with_deprecation_warning(kwargs)\n-        context = self.get_context_data(**context_kwargs)\n+\n+# RemovedInDjango40Warning\n+def _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n+    class DeprecationWarningDict(dict):\n+        def __getitem__(self, key):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().__getitem__(key)\n+        \n+        def get(self, key, default=None):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().get(key, default)\n+    \n+    return DeprecationWarningDict(url_kwargs)\n         return self.render_to_response(context)\n \n \n+# RemovedInDjango40Warning\n+\n # RemovedInDjango40Warning\n def _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n-    context_kwargs = {}\n-    for key, value in url_kwargs.items():\n-        # Bind into function closure.\n-        @SimpleLazyObject\n-        def access_value(key=key, value=value):\n-            warnings.warn(\n-                'TemplateView passing URL kwargs to the context is '\n-                'deprecated. Reference %s in your template through '\n-                'view.kwargs instead.' % key,\n-                RemovedInDjango40Warning, stacklevel=2,\n-            )\n-            return value\n-        context_kwargs[key] = access_value\n-    return context_kwargs\n+    class DeprecationWarningDict(dict):\n+        def __getitem__(self, key):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().__getitem__(key)\n+        \n+        def get(self, key, default=None):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().get(key, default)\n+    \n+    return DeprecationWarningDict(url_kwargs)\n \n \n class RedirectView(View):\n",
    "variant_1": "diff --git a/django/views/generic/base.py b/django/views/generic/base.py\nindex ea5baca08d..f1aab753d9 100644\n--- a/django/views/generic/base.py\n+++ b/django/views/generic/base.py\n@@ -159,27 +159,58 @@ class TemplateView(TemplateResponseMixin, ContextMixin, View):\n     def get(self, request, *args, **kwargs):\n         # RemovedInDjango40Warning: when the deprecation ends, replace with:\n         #   context = self.get_context_data()\n-        context_kwargs = _wrap_url_kwargs_with_deprecation_warning(kwargs)\n-        context = self.get_context_data(**context_kwargs)\n+\n+def _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n+    class DeprecationWarningDict(dict):\n+        def __getitem__(self, key):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().__getitem__(key)\n+        \n+        def get(self, key, default=None):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().get(key, default)\n+    \n+    return DeprecationWarningDict(url_kwargs)\n         return self.render_to_response(context)\n \n \n # RemovedInDjango40Warning\n+\n def _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n-    context_kwargs = {}\n-    for key, value in url_kwargs.items():\n-        # Bind into function closure.\n-        @SimpleLazyObject\n-        def access_value(key=key, value=value):\n-            warnings.warn(\n-                'TemplateView passing URL kwargs to the context is '\n-                'deprecated. Reference %s in your template through '\n-                'view.kwargs instead.' % key,\n-                RemovedInDjango40Warning, stacklevel=2,\n-            )\n-            return value\n-        context_kwargs[key] = access_value\n-    return context_kwargs\n+    class DeprecationWarningDict(dict):\n+        def __getitem__(self, key):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().__getitem__(key)\n+        \n+        def get(self, key, default=None):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().get(key, default)\n+    \n+    return DeprecationWarningDict(url_kwargs)\n \n \n class RedirectView(View):\n",
    "variant_2": "diff --git a/django/views/generic/base.py b/django/views/generic/base.py\nindex ea5baca08d..fedf399ce7 100644\n--- a/django/views/generic/base.py\n+++ b/django/views/generic/base.py\n@@ -159,27 +159,59 @@ class TemplateView(TemplateResponseMixin, ContextMixin, View):\n     def get(self, request, *args, **kwargs):\n         # RemovedInDjango40Warning: when the deprecation ends, replace with:\n         #   context = self.get_context_data()\n-        context_kwargs = _wrap_url_kwargs_with_deprecation_warning(kwargs)\n-        context = self.get_context_data(**context_kwargs)\n+\n+# RemovedInDjango40Warning\n+def _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n+    class DeprecationWarningDict(dict):\n+        def __getitem__(self, key):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().__getitem__(key)\n+        \n+        def get(self, key, default=None):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().get(key, default)\n+    \n+    return DeprecationWarningDict(url_kwargs)\n         return self.render_to_response(context)\n \n \n # RemovedInDjango40Warning\n+\n def _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n-    context_kwargs = {}\n-    for key, value in url_kwargs.items():\n-        # Bind into function closure.\n-        @SimpleLazyObject\n-        def access_value(key=key, value=value):\n-            warnings.warn(\n-                'TemplateView passing URL kwargs to the context is '\n-                'deprecated. Reference %s in your template through '\n-                'view.kwargs instead.' % key,\n-                RemovedInDjango40Warning, stacklevel=2,\n-            )\n-            return value\n-        context_kwargs[key] = access_value\n-    return context_kwargs\n+    class DeprecationWarningDict(dict):\n+        def __getitem__(self, key):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().__getitem__(key)\n+        \n+        def get(self, key, default=None):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().get(key, default)\n+    \n+    return DeprecationWarningDict(url_kwargs)\n \n \n class RedirectView(View):\n",
    "variant_3": "diff --git a/django/views/generic/base.py b/django/views/generic/base.py\nindex ea5baca08d..fedf399ce7 100644\n--- a/django/views/generic/base.py\n+++ b/django/views/generic/base.py\n@@ -159,27 +159,59 @@ class TemplateView(TemplateResponseMixin, ContextMixin, View):\n     def get(self, request, *args, **kwargs):\n         # RemovedInDjango40Warning: when the deprecation ends, replace with:\n         #   context = self.get_context_data()\n-        context_kwargs = _wrap_url_kwargs_with_deprecation_warning(kwargs)\n-        context = self.get_context_data(**context_kwargs)\n+\n+# RemovedInDjango40Warning\n+def _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n+    class DeprecationWarningDict(dict):\n+        def __getitem__(self, key):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().__getitem__(key)\n+        \n+        def get(self, key, default=None):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().get(key, default)\n+    \n+    return DeprecationWarningDict(url_kwargs)\n         return self.render_to_response(context)\n \n \n # RemovedInDjango40Warning\n+\n def _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n-    context_kwargs = {}\n-    for key, value in url_kwargs.items():\n-        # Bind into function closure.\n-        @SimpleLazyObject\n-        def access_value(key=key, value=value):\n-            warnings.warn(\n-                'TemplateView passing URL kwargs to the context is '\n-                'deprecated. Reference %s in your template through '\n-                'view.kwargs instead.' % key,\n-                RemovedInDjango40Warning, stacklevel=2,\n-            )\n-            return value\n-        context_kwargs[key] = access_value\n-    return context_kwargs\n+    class DeprecationWarningDict(dict):\n+        def __getitem__(self, key):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().__getitem__(key)\n+        \n+        def get(self, key, default=None):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().get(key, default)\n+    \n+    return DeprecationWarningDict(url_kwargs)\n \n \n class RedirectView(View):\n",
    "variant_4": "diff --git a/django/views/generic/base.py b/django/views/generic/base.py\nindex ea5baca08d..f1aab753d9 100644\n--- a/django/views/generic/base.py\n+++ b/django/views/generic/base.py\n@@ -159,27 +159,58 @@ class TemplateView(TemplateResponseMixin, ContextMixin, View):\n     def get(self, request, *args, **kwargs):\n         # RemovedInDjango40Warning: when the deprecation ends, replace with:\n         #   context = self.get_context_data()\n-        context_kwargs = _wrap_url_kwargs_with_deprecation_warning(kwargs)\n-        context = self.get_context_data(**context_kwargs)\n+\n+def _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n+    class DeprecationWarningDict(dict):\n+        def __getitem__(self, key):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().__getitem__(key)\n+        \n+        def get(self, key, default=None):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().get(key, default)\n+    \n+    return DeprecationWarningDict(url_kwargs)\n         return self.render_to_response(context)\n \n \n # RemovedInDjango40Warning\n+\n def _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n-    context_kwargs = {}\n-    for key, value in url_kwargs.items():\n-        # Bind into function closure.\n-        @SimpleLazyObject\n-        def access_value(key=key, value=value):\n-            warnings.warn(\n-                'TemplateView passing URL kwargs to the context is '\n-                'deprecated. Reference %s in your template through '\n-                'view.kwargs instead.' % key,\n-                RemovedInDjango40Warning, stacklevel=2,\n-            )\n-            return value\n-        context_kwargs[key] = access_value\n-    return context_kwargs\n+    class DeprecationWarningDict(dict):\n+        def __getitem__(self, key):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().__getitem__(key)\n+        \n+        def get(self, key, default=None):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().get(key, default)\n+    \n+    return DeprecationWarningDict(url_kwargs)\n \n \n class RedirectView(View):\n",
    "variant_5": "diff --git a/django/views/generic/base.py b/django/views/generic/base.py\nindex ea5baca08d..fedf399ce7 100644\n--- a/django/views/generic/base.py\n+++ b/django/views/generic/base.py\n@@ -159,27 +159,59 @@ class TemplateView(TemplateResponseMixin, ContextMixin, View):\n     def get(self, request, *args, **kwargs):\n         # RemovedInDjango40Warning: when the deprecation ends, replace with:\n         #   context = self.get_context_data()\n-        context_kwargs = _wrap_url_kwargs_with_deprecation_warning(kwargs)\n-        context = self.get_context_data(**context_kwargs)\n+\n+# RemovedInDjango40Warning\n+def _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n+    class DeprecationWarningDict(dict):\n+        def __getitem__(self, key):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().__getitem__(key)\n+        \n+        def get(self, key, default=None):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().get(key, default)\n+    \n+    return DeprecationWarningDict(url_kwargs)\n         return self.render_to_response(context)\n \n \n # RemovedInDjango40Warning\n+\n def _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n-    context_kwargs = {}\n-    for key, value in url_kwargs.items():\n-        # Bind into function closure.\n-        @SimpleLazyObject\n-        def access_value(key=key, value=value):\n-            warnings.warn(\n-                'TemplateView passing URL kwargs to the context is '\n-                'deprecated. Reference %s in your template through '\n-                'view.kwargs instead.' % key,\n-                RemovedInDjango40Warning, stacklevel=2,\n-            )\n-            return value\n-        context_kwargs[key] = access_value\n-    return context_kwargs\n+    class DeprecationWarningDict(dict):\n+        def __getitem__(self, key):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().__getitem__(key)\n+        \n+        def get(self, key, default=None):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().get(key, default)\n+    \n+    return DeprecationWarningDict(url_kwargs)\n \n \n class RedirectView(View):\n",
    "variant_6": "diff --git a/django/views/generic/base.py b/django/views/generic/base.py\nindex ea5baca08d..fedf399ce7 100644\n--- a/django/views/generic/base.py\n+++ b/django/views/generic/base.py\n@@ -159,27 +159,59 @@ class TemplateView(TemplateResponseMixin, ContextMixin, View):\n     def get(self, request, *args, **kwargs):\n         # RemovedInDjango40Warning: when the deprecation ends, replace with:\n         #   context = self.get_context_data()\n-        context_kwargs = _wrap_url_kwargs_with_deprecation_warning(kwargs)\n-        context = self.get_context_data(**context_kwargs)\n+\n+# RemovedInDjango40Warning\n+def _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n+    class DeprecationWarningDict(dict):\n+        def __getitem__(self, key):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().__getitem__(key)\n+        \n+        def get(self, key, default=None):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().get(key, default)\n+    \n+    return DeprecationWarningDict(url_kwargs)\n         return self.render_to_response(context)\n \n \n # RemovedInDjango40Warning\n+\n def _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n-    context_kwargs = {}\n-    for key, value in url_kwargs.items():\n-        # Bind into function closure.\n-        @SimpleLazyObject\n-        def access_value(key=key, value=value):\n-            warnings.warn(\n-                'TemplateView passing URL kwargs to the context is '\n-                'deprecated. Reference %s in your template through '\n-                'view.kwargs instead.' % key,\n-                RemovedInDjango40Warning, stacklevel=2,\n-            )\n-            return value\n-        context_kwargs[key] = access_value\n-    return context_kwargs\n+    class DeprecationWarningDict(dict):\n+        def __getitem__(self, key):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().__getitem__(key)\n+        \n+        def get(self, key, default=None):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().get(key, default)\n+    \n+    return DeprecationWarningDict(url_kwargs)\n \n \n class RedirectView(View):\n",
    "variant_7": "diff --git a/django/views/generic/base.py b/django/views/generic/base.py\nindex ea5baca08d..fedf399ce7 100644\n--- a/django/views/generic/base.py\n+++ b/django/views/generic/base.py\n@@ -159,27 +159,59 @@ class TemplateView(TemplateResponseMixin, ContextMixin, View):\n     def get(self, request, *args, **kwargs):\n         # RemovedInDjango40Warning: when the deprecation ends, replace with:\n         #   context = self.get_context_data()\n-        context_kwargs = _wrap_url_kwargs_with_deprecation_warning(kwargs)\n-        context = self.get_context_data(**context_kwargs)\n+\n+# RemovedInDjango40Warning\n+def _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n+    class DeprecationWarningDict(dict):\n+        def __getitem__(self, key):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().__getitem__(key)\n+        \n+        def get(self, key, default=None):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().get(key, default)\n+    \n+    return DeprecationWarningDict(url_kwargs)\n         return self.render_to_response(context)\n \n \n # RemovedInDjango40Warning\n+\n def _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n-    context_kwargs = {}\n-    for key, value in url_kwargs.items():\n-        # Bind into function closure.\n-        @SimpleLazyObject\n-        def access_value(key=key, value=value):\n-            warnings.warn(\n-                'TemplateView passing URL kwargs to the context is '\n-                'deprecated. Reference %s in your template through '\n-                'view.kwargs instead.' % key,\n-                RemovedInDjango40Warning, stacklevel=2,\n-            )\n-            return value\n-        context_kwargs[key] = access_value\n-    return context_kwargs\n+    class DeprecationWarningDict(dict):\n+        def __getitem__(self, key):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().__getitem__(key)\n+        \n+        def get(self, key, default=None):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().get(key, default)\n+    \n+    return DeprecationWarningDict(url_kwargs)\n \n \n class RedirectView(View):\n",
    "variant_8": "diff --git a/django/views/generic/base.py b/django/views/generic/base.py\nindex ea5baca08d..fedf399ce7 100644\n--- a/django/views/generic/base.py\n+++ b/django/views/generic/base.py\n@@ -159,27 +159,59 @@ class TemplateView(TemplateResponseMixin, ContextMixin, View):\n     def get(self, request, *args, **kwargs):\n         # RemovedInDjango40Warning: when the deprecation ends, replace with:\n         #   context = self.get_context_data()\n-        context_kwargs = _wrap_url_kwargs_with_deprecation_warning(kwargs)\n-        context = self.get_context_data(**context_kwargs)\n+\n+# RemovedInDjango40Warning\n+def _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n+    class DeprecationWarningDict(dict):\n+        def __getitem__(self, key):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().__getitem__(key)\n+        \n+        def get(self, key, default=None):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().get(key, default)\n+    \n+    return DeprecationWarningDict(url_kwargs)\n         return self.render_to_response(context)\n \n \n # RemovedInDjango40Warning\n+\n def _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n-    context_kwargs = {}\n-    for key, value in url_kwargs.items():\n-        # Bind into function closure.\n-        @SimpleLazyObject\n-        def access_value(key=key, value=value):\n-            warnings.warn(\n-                'TemplateView passing URL kwargs to the context is '\n-                'deprecated. Reference %s in your template through '\n-                'view.kwargs instead.' % key,\n-                RemovedInDjango40Warning, stacklevel=2,\n-            )\n-            return value\n-        context_kwargs[key] = access_value\n-    return context_kwargs\n+    class DeprecationWarningDict(dict):\n+        def __getitem__(self, key):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().__getitem__(key)\n+        \n+        def get(self, key, default=None):\n+            if key in url_kwargs:\n+                warnings.warn(\n+                    'TemplateView passing URL kwargs to the context is '\n+                    'deprecated. Reference %s in your template through '\n+                    'view.kwargs instead.' % key,\n+                    RemovedInDjango40Warning, stacklevel=2,\n+                )\n+            return super().get(key, default)\n+    \n+    return DeprecationWarningDict(url_kwargs)\n \n \n class RedirectView(View):\n"
  }
}