{
  "zero_patches": {
    "Location 1 (/root/hy/projects_1/sphinx/sphinx/domains/std.py lines 46-46)": "\n# RE for option descriptions\noption_desc_re = re.compile(r'([^\\s=]+)(=?\\s*.*)')\n",
    "Location 2 (/root/hy/projects_1/sphinx/sphinx/domains/std.py lines 192-198)": "\n            m = option_desc_re.match(potential_option)\n            if not m:\n                logger.warning(__('Malformed option description %r, should '\n                                  'be a valid option format'), potential_option,\n                               location=signode)\n                continue\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects_1/sphinx/sphinx/domains/std.py lines 46-46)": [
      "\n# RE for option descriptions\noption_desc_re = re.compile(r'([^\\s=]+)(=?\\s*.*)')\n",
      "\n# RE for option descriptions\noption_desc_re = re.compile(r'([^\\s=]+)(=?\\s*.*)')\n",
      "\n# RE for option descriptions\noption_desc_re = re.compile(r'([^\\s=]+)(=?\\s*.*)')\n",
      "\n# RE for option descriptions\noption_desc_re = re.compile(r'([^\\s=]+)(=?\\s*.*)')\n",
      "\n# RE for option descriptions\noption_desc_re = re.compile(r'([^\\s=]+)(=?\\s*.*)')\n",
      "\n# RE for option descriptions\noption_desc_re = re.compile(r'([^\\s=]+)(=?\\s*.*)')\n",
      "\noption_desc_re = re.compile(r'([^\\s=]+)(=?\\s*.*)')\n",
      "\n# RE for option descriptions\noption_desc_re = re.compile(r'([^\\s=]+)(=?\\s*.*)')\n"
    ],
    "Location 2 (/root/hy/projects_1/sphinx/sphinx/domains/std.py lines 192-198)": [
      "\n            m = option_desc_re.match(potential_option)\n            if not m:\n                logger.warning(__('Malformed option description %r, should '\n                                  'look like \"name\" or \"name=args\"'), potential_option,\n                               location=signode)\n                continue\n",
      "\n            m = option_desc_re.match(potential_option)\n            if not m:\n                logger.warning(__('Malformed option description %r, should '\n                                  'be a valid option format'), potential_option,\n                               location=signode)\n                continue\n",
      "\n            m = option_desc_re.match(potential_option)\n            if not m:\n                logger.warning(__('Malformed option description %r, should '\n                                  'be a valid option name optionally followed by arguments'), \n                               potential_option,\n                               location=signode)\n                continue\n",
      "\n            m = option_desc_re.match(potential_option)\n            if not m:\n                logger.warning(__('Malformed option description %r, should '\n                                  'be a valid option format'), potential_option,\n                               location=signode)\n                continue\n",
      "\n            m = option_desc_re.match(potential_option)\n            if not m:\n                logger.warning(__('Malformed option description %r, should '\n                                  'be a valid option pattern'), potential_option,\n                               location=signode)\n                continue\n",
      "\n            m = option_desc_re.match(potential_option)\n            if not m:\n                logger.warning(__('Malformed option description %r, should '\n                                  'be a valid option name optionally followed by arguments'), \n                               potential_option, location=signode)\n                continue\n",
      "\n            m = option_desc_re.match(potential_option)\n            if not m:\n                logger.warning(__('Malformed option description %r, should '\n                                  'be a valid option pattern'), potential_option,\n                               location=signode)\n                continue\n",
      "\n            m = option_desc_re.match(potential_option)\n            if not m:\n                logger.warning(__('Malformed option description %r, should '\n                                  'be a valid option name optionally followed by arguments'),\n                               potential_option,\n                               location=signode)\n                continue\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/sphinx/domains/std.py b/sphinx/domains/std.py\nindex c87217c56..e15c7ae46 100644\n--- a/sphinx/domains/std.py\n+++ b/sphinx/domains/std.py\n@@ -43,7 +43,8 @@ logger = logging.getLogger(__name__)\n \n \n # RE for option descriptions\n-option_desc_re = re.compile(r'((?:/|--|-|\\+)?[^\\s=[]+)(=?\\s*.*)')\n+\n+option_desc_re = re.compile(r'([^\\s=]+)(=?\\s*.*)')\n # RE for grammar tokens\n token_re = re.compile(r'`(\\w+)`', re.U)\n \n@@ -189,11 +190,11 @@ class Cmdoption(ObjectDescription):\n         firstname = ''\n         for potential_option in sig.split(', '):\n             potential_option = potential_option.strip()\n+\n             m = option_desc_re.match(potential_option)\n             if not m:\n                 logger.warning(__('Malformed option description %r, should '\n-                                  'look like \"opt\", \"-opt args\", \"--opt args\", '\n-                                  '\"/opt args\" or \"+opt args\"'), potential_option,\n+                                  'look like a valid option'), potential_option,\n                                location=signode)\n                 continue\n             optname, args = m.groups()\n",
    "variant_0": "diff --git a/sphinx/domains/std.py b/sphinx/domains/std.py\nindex c87217c56..258a4ea48 100644\n--- a/sphinx/domains/std.py\n+++ b/sphinx/domains/std.py\n@@ -43,7 +43,9 @@ logger = logging.getLogger(__name__)\n \n \n # RE for option descriptions\n-option_desc_re = re.compile(r'((?:/|--|-|\\+)?[^\\s=[]+)(=?\\s*.*)')\n+\n+# RE for option descriptions\n+option_desc_re = re.compile(r'([^\\s=]+)(=?\\s*.*)')\n # RE for grammar tokens\n token_re = re.compile(r'`(\\w+)`', re.U)\n \n@@ -189,11 +191,11 @@ class Cmdoption(ObjectDescription):\n         firstname = ''\n         for potential_option in sig.split(', '):\n             potential_option = potential_option.strip()\n+\n             m = option_desc_re.match(potential_option)\n             if not m:\n                 logger.warning(__('Malformed option description %r, should '\n-                                  'look like \"opt\", \"-opt args\", \"--opt args\", '\n-                                  '\"/opt args\" or \"+opt args\"'), potential_option,\n+                                  'be a valid option format'), potential_option,\n                                location=signode)\n                 continue\n             optname, args = m.groups()\n",
    "variant_1": "diff --git a/sphinx/domains/std.py b/sphinx/domains/std.py\nindex c87217c56..0fbfa3f41 100644\n--- a/sphinx/domains/std.py\n+++ b/sphinx/domains/std.py\n@@ -43,7 +43,9 @@ logger = logging.getLogger(__name__)\n \n \n # RE for option descriptions\n-option_desc_re = re.compile(r'((?:/|--|-|\\+)?[^\\s=[]+)(=?\\s*.*)')\n+\n+# RE for option descriptions\n+option_desc_re = re.compile(r'([^\\s=]+)(=?\\s*.*)')\n # RE for grammar tokens\n token_re = re.compile(r'`(\\w+)`', re.U)\n \n@@ -189,11 +191,11 @@ class Cmdoption(ObjectDescription):\n         firstname = ''\n         for potential_option in sig.split(', '):\n             potential_option = potential_option.strip()\n+\n             m = option_desc_re.match(potential_option)\n             if not m:\n                 logger.warning(__('Malformed option description %r, should '\n-                                  'look like \"opt\", \"-opt args\", \"--opt args\", '\n-                                  '\"/opt args\" or \"+opt args\"'), potential_option,\n+                                  'look like \"name\" or \"name=args\"'), potential_option,\n                                location=signode)\n                 continue\n             optname, args = m.groups()\n",
    "variant_2": "diff --git a/sphinx/domains/std.py b/sphinx/domains/std.py\nindex c87217c56..258a4ea48 100644\n--- a/sphinx/domains/std.py\n+++ b/sphinx/domains/std.py\n@@ -43,7 +43,9 @@ logger = logging.getLogger(__name__)\n \n \n # RE for option descriptions\n-option_desc_re = re.compile(r'((?:/|--|-|\\+)?[^\\s=[]+)(=?\\s*.*)')\n+\n+# RE for option descriptions\n+option_desc_re = re.compile(r'([^\\s=]+)(=?\\s*.*)')\n # RE for grammar tokens\n token_re = re.compile(r'`(\\w+)`', re.U)\n \n@@ -189,11 +191,11 @@ class Cmdoption(ObjectDescription):\n         firstname = ''\n         for potential_option in sig.split(', '):\n             potential_option = potential_option.strip()\n+\n             m = option_desc_re.match(potential_option)\n             if not m:\n                 logger.warning(__('Malformed option description %r, should '\n-                                  'look like \"opt\", \"-opt args\", \"--opt args\", '\n-                                  '\"/opt args\" or \"+opt args\"'), potential_option,\n+                                  'be a valid option format'), potential_option,\n                                location=signode)\n                 continue\n             optname, args = m.groups()\n",
    "variant_3": "diff --git a/sphinx/domains/std.py b/sphinx/domains/std.py\nindex c87217c56..c702c095b 100644\n--- a/sphinx/domains/std.py\n+++ b/sphinx/domains/std.py\n@@ -43,7 +43,9 @@ logger = logging.getLogger(__name__)\n \n \n # RE for option descriptions\n-option_desc_re = re.compile(r'((?:/|--|-|\\+)?[^\\s=[]+)(=?\\s*.*)')\n+\n+# RE for option descriptions\n+option_desc_re = re.compile(r'([^\\s=]+)(=?\\s*.*)')\n # RE for grammar tokens\n token_re = re.compile(r'`(\\w+)`', re.U)\n \n@@ -189,11 +191,12 @@ class Cmdoption(ObjectDescription):\n         firstname = ''\n         for potential_option in sig.split(', '):\n             potential_option = potential_option.strip()\n+\n             m = option_desc_re.match(potential_option)\n             if not m:\n                 logger.warning(__('Malformed option description %r, should '\n-                                  'look like \"opt\", \"-opt args\", \"--opt args\", '\n-                                  '\"/opt args\" or \"+opt args\"'), potential_option,\n+                                  'be a valid option name optionally followed by arguments'), \n+                               potential_option,\n                                location=signode)\n                 continue\n             optname, args = m.groups()\n",
    "variant_4": "diff --git a/sphinx/domains/std.py b/sphinx/domains/std.py\nindex c87217c56..258a4ea48 100644\n--- a/sphinx/domains/std.py\n+++ b/sphinx/domains/std.py\n@@ -43,7 +43,9 @@ logger = logging.getLogger(__name__)\n \n \n # RE for option descriptions\n-option_desc_re = re.compile(r'((?:/|--|-|\\+)?[^\\s=[]+)(=?\\s*.*)')\n+\n+# RE for option descriptions\n+option_desc_re = re.compile(r'([^\\s=]+)(=?\\s*.*)')\n # RE for grammar tokens\n token_re = re.compile(r'`(\\w+)`', re.U)\n \n@@ -189,11 +191,11 @@ class Cmdoption(ObjectDescription):\n         firstname = ''\n         for potential_option in sig.split(', '):\n             potential_option = potential_option.strip()\n+\n             m = option_desc_re.match(potential_option)\n             if not m:\n                 logger.warning(__('Malformed option description %r, should '\n-                                  'look like \"opt\", \"-opt args\", \"--opt args\", '\n-                                  '\"/opt args\" or \"+opt args\"'), potential_option,\n+                                  'be a valid option format'), potential_option,\n                                location=signode)\n                 continue\n             optname, args = m.groups()\n",
    "variant_5": "diff --git a/sphinx/domains/std.py b/sphinx/domains/std.py\nindex c87217c56..529729114 100644\n--- a/sphinx/domains/std.py\n+++ b/sphinx/domains/std.py\n@@ -43,7 +43,9 @@ logger = logging.getLogger(__name__)\n \n \n # RE for option descriptions\n-option_desc_re = re.compile(r'((?:/|--|-|\\+)?[^\\s=[]+)(=?\\s*.*)')\n+\n+# RE for option descriptions\n+option_desc_re = re.compile(r'([^\\s=]+)(=?\\s*.*)')\n # RE for grammar tokens\n token_re = re.compile(r'`(\\w+)`', re.U)\n \n@@ -189,11 +191,11 @@ class Cmdoption(ObjectDescription):\n         firstname = ''\n         for potential_option in sig.split(', '):\n             potential_option = potential_option.strip()\n+\n             m = option_desc_re.match(potential_option)\n             if not m:\n                 logger.warning(__('Malformed option description %r, should '\n-                                  'look like \"opt\", \"-opt args\", \"--opt args\", '\n-                                  '\"/opt args\" or \"+opt args\"'), potential_option,\n+                                  'be a valid option pattern'), potential_option,\n                                location=signode)\n                 continue\n             optname, args = m.groups()\n",
    "variant_6": "diff --git a/sphinx/domains/std.py b/sphinx/domains/std.py\nindex c87217c56..d0ec18d7d 100644\n--- a/sphinx/domains/std.py\n+++ b/sphinx/domains/std.py\n@@ -43,7 +43,9 @@ logger = logging.getLogger(__name__)\n \n \n # RE for option descriptions\n-option_desc_re = re.compile(r'((?:/|--|-|\\+)?[^\\s=[]+)(=?\\s*.*)')\n+\n+# RE for option descriptions\n+option_desc_re = re.compile(r'([^\\s=]+)(=?\\s*.*)')\n # RE for grammar tokens\n token_re = re.compile(r'`(\\w+)`', re.U)\n \n@@ -189,12 +191,12 @@ class Cmdoption(ObjectDescription):\n         firstname = ''\n         for potential_option in sig.split(', '):\n             potential_option = potential_option.strip()\n+\n             m = option_desc_re.match(potential_option)\n             if not m:\n                 logger.warning(__('Malformed option description %r, should '\n-                                  'look like \"opt\", \"-opt args\", \"--opt args\", '\n-                                  '\"/opt args\" or \"+opt args\"'), potential_option,\n-                               location=signode)\n+                                  'be a valid option name optionally followed by arguments'), \n+                               potential_option, location=signode)\n                 continue\n             optname, args = m.groups()\n             if count:\n",
    "variant_7": "diff --git a/sphinx/domains/std.py b/sphinx/domains/std.py\nindex c87217c56..806bdddca 100644\n--- a/sphinx/domains/std.py\n+++ b/sphinx/domains/std.py\n@@ -43,7 +43,8 @@ logger = logging.getLogger(__name__)\n \n \n # RE for option descriptions\n-option_desc_re = re.compile(r'((?:/|--|-|\\+)?[^\\s=[]+)(=?\\s*.*)')\n+\n+option_desc_re = re.compile(r'([^\\s=]+)(=?\\s*.*)')\n # RE for grammar tokens\n token_re = re.compile(r'`(\\w+)`', re.U)\n \n@@ -189,11 +190,11 @@ class Cmdoption(ObjectDescription):\n         firstname = ''\n         for potential_option in sig.split(', '):\n             potential_option = potential_option.strip()\n+\n             m = option_desc_re.match(potential_option)\n             if not m:\n                 logger.warning(__('Malformed option description %r, should '\n-                                  'look like \"opt\", \"-opt args\", \"--opt args\", '\n-                                  '\"/opt args\" or \"+opt args\"'), potential_option,\n+                                  'be a valid option pattern'), potential_option,\n                                location=signode)\n                 continue\n             optname, args = m.groups()\n",
    "variant_8": "diff --git a/sphinx/domains/std.py b/sphinx/domains/std.py\nindex c87217c56..2f1f18f49 100644\n--- a/sphinx/domains/std.py\n+++ b/sphinx/domains/std.py\n@@ -43,7 +43,9 @@ logger = logging.getLogger(__name__)\n \n \n # RE for option descriptions\n-option_desc_re = re.compile(r'((?:/|--|-|\\+)?[^\\s=[]+)(=?\\s*.*)')\n+\n+# RE for option descriptions\n+option_desc_re = re.compile(r'([^\\s=]+)(=?\\s*.*)')\n # RE for grammar tokens\n token_re = re.compile(r'`(\\w+)`', re.U)\n \n@@ -189,11 +191,12 @@ class Cmdoption(ObjectDescription):\n         firstname = ''\n         for potential_option in sig.split(', '):\n             potential_option = potential_option.strip()\n+\n             m = option_desc_re.match(potential_option)\n             if not m:\n                 logger.warning(__('Malformed option description %r, should '\n-                                  'look like \"opt\", \"-opt args\", \"--opt args\", '\n-                                  '\"/opt args\" or \"+opt args\"'), potential_option,\n+                                  'be a valid option name optionally followed by arguments'),\n+                               potential_option,\n                                location=signode)\n                 continue\n             optname, args = m.groups()\n"
  }
}