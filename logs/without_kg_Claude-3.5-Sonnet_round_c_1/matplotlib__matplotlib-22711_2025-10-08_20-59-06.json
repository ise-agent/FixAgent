{
  "zero_patches": {
    "Location 1 (/root/hy/projects_1/matplotlib/lib/matplotlib/widgets.py lines 906-906)": "\n        val = np.sort(val)\n        _api.check_shape((2,), val=val)\n        val[0] = self._min_in_bounds(val[0])\n        val[1] = self._max_in_bounds(val[1])\n        xy = self.poly.xy\n        if self.orientation == \"vertical\":\n            xy[0] = .25, val[0]\n            xy[1] = .25, val[1]\n            xy[2] = .75, val[1]\n            xy[3] = .75, val[0]\n            # xy[4] = .25, val[0]  # Removed: IndexError - polygon only has 4 vertices\n        else:\n            xy[0] = val[0], .25\n            xy[1] = val[0], .75\n            xy[2] = val[1], .75\n            xy[3] = val[1], .25\n            # xy[4] = val[0], .25  # Removed: IndexError - polygon only has 4 vertices\n        self.poly.xy = xy\n        self.valtext.set_text(self._format(val))\n        if self.drawon:\n            self.ax.figure.canvas.draw_idle()\n",
    "Location 2 (/root/hy/projects_1/matplotlib/lib/matplotlib/widgets.py lines 912-912)": "\n        else:\n            xy[0] = val[0], .25\n            xy[1] = val[0], .75\n            xy[2] = val[1], .75\n            xy[3] = val[1], .25\n            # xy[4] = val[0], .25  # Commented out - polygon only has 4 vertices\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects_1/matplotlib/lib/matplotlib/widgets.py lines 906-906)": [
      "\n        val = np.sort(val)\n        _api.check_shape((2,), val=val)\n        val[0] = self._min_in_bounds(val[0])\n        val[1] = self._max_in_bounds(val[1])\n        xy = self.poly.xy\n        if self.orientation == \"vertical\":\n            xy[0] = .25, val[0]\n            xy[1] = .25, val[1]\n            xy[2] = .75, val[1]\n            xy[3] = .75, val[0]\n            # xy[4] = .25, val[0]  # Removed: IndexError - polygon only has 4 vertices\n        else:\n            xy[0] = val[0], .25\n            xy[1] = val[0], .75\n            xy[2] = val[1], .75\n            xy[3] = val[1], .25\n            # xy[4] = val[0], .25  # Removed: IndexError - polygon only has 4 vertices\n        self.poly.xy = xy\n        self.valtext.set_text(self._format(val))\n        if self.drawon:\n            self.ax.figure.canvas.draw_idle()\n",
      "\n        val = np.sort(val)\n        _api.check_shape((2,), val=val)\n        val[0] = self._min_in_bounds(val[0])\n        val[1] = self._max_in_bounds(val[1])\n        xy = self.poly.xy\n        if self.orientation == \"vertical\":\n            xy[0] = .25, val[0]\n            xy[1] = .25, val[1]\n            xy[2] = .75, val[1]\n            xy[3] = .75, val[0]\n            # xy[4] = .25, val[0]  # Removed: polygon only has 4 vertices\n        else:\n            xy[0] = val[0], .25\n            xy[1] = val[0], .75\n            xy[2] = val[1], .75\n            xy[3] = val[1], .25\n            # xy[4] = val[0], .25  # Removed: polygon only has 4 vertices\n        self.poly.xy = xy\n        self.valtext.set_text(self._format(val))\n        if self.drawon:\n            self.ax.figure.canvas.draw_idle()\n",
      "\n        val = np.sort(val)\n        _api.check_shape((2,), val=val)\n        val[0] = self._min_in_bounds(val[0])\n        val[1] = self._max_in_bounds(val[1])\n        xy = self.poly.xy\n        if self.orientation == \"vertical\":\n            xy[0] = .25, val[0]\n            xy[1] = .25, val[1]\n            xy[2] = .75, val[1]\n            xy[3] = .75, val[0]\n            # xy[4] = .25, val[0]  # Removed: polygon only has 4 vertices\n        else:\n            xy[0] = val[0], .25\n            xy[1] = val[0], .75\n            xy[2] = val[1], .75\n            xy[3] = val[1], .25\n            # xy[4] = val[0], .25  # Removed: polygon only has 4 vertices\n        self.poly.xy = xy\n        self.valtext.set_text(self._format(val))\n        if self.drawon:\n            self.ax.figure.canvas.draw_idle()\n",
      "\n        val = np.sort(val)\n        _api.check_shape((2,), val=val)\n        val[0] = self._min_in_bounds(val[0])\n        val[1] = self._max_in_bounds(val[1])\n        xy = self.poly.xy\n        if self.orientation == \"vertical\":\n            xy[0] = .25, val[0]\n            xy[1] = .25, val[1]\n            xy[2] = .75, val[1]\n            xy[3] = .75, val[0]\n            # xy[4] = .25, val[0]  # Removed: polygon only has 4 vertices\n        else:\n            xy[0] = val[0], .25\n            xy[1] = val[0], .75\n            xy[2] = val[1], .75\n            xy[3] = val[1], .25\n            # xy[4] = val[0], .25  # Removed: polygon only has 4 vertices\n        self.poly.xy = xy\n        self.valtext.set_text(self._format(val))\n        if self.drawon:\n            self.ax.figure.canvas.draw_idle()\n",
      "\n        val = np.sort(val)\n        _api.check_shape((2,), val=val)\n        val[0] = self._min_in_bounds(val[0])\n        val[1] = self._max_in_bounds(val[1])\n        xy = self.poly.xy\n        if self.orientation == \"vertical\":\n            xy[0] = .25, val[0]\n            xy[1] = .25, val[1]\n            xy[2] = .75, val[1]\n            xy[3] = .75, val[0]\n            # xy[4] = .25, val[0]  # Removed: polygon only has 4 vertices\n        else:\n            xy[0] = val[0], .25\n            xy[1] = val[0], .75\n            xy[2] = val[1], .75\n            xy[3] = val[1], .25\n            # xy[4] = val[0], .25  # Removed: polygon only has 4 vertices\n        self.poly.xy = xy\n        self.valtext.set_text(self._format(val))\n        if self.drawon:\n            self.ax.figure.canvas.draw_idle()\n",
      "\n        val = np.sort(val)\n        _api.check_shape((2,), val=val)\n        val[0] = self._min_in_bounds(val[0])\n        val[1] = self._max_in_bounds(val[1])\n        xy = self.poly.xy\n        if self.orientation == \"vertical\":\n            xy[0] = .25, val[0]\n            xy[1] = .25, val[1]\n            xy[2] = .75, val[1]\n            xy[3] = .75, val[0]\n            # xy[4] = .25, val[0]  # Removed: polygon only has 4 vertices\n        else:\n            xy[0] = val[0], .25\n            xy[1] = val[0], .75\n            xy[2] = val[1], .75\n            xy[3] = val[1], .25\n            # xy[4] = val[0], .25  # Removed: polygon only has 4 vertices\n        self.poly.xy = xy\n        self.valtext.set_text(self._format(val))\n        if self.drawon:\n            self.ax.figure.canvas.draw_idle()\n",
      "\n        val = np.sort(val)\n        _api.check_shape((2,), val=val)\n        val[0] = self._min_in_bounds(val[0])\n        val[1] = self._max_in_bounds(val[1])\n        xy = self.poly.xy\n        if self.orientation == \"vertical\":\n            xy[0] = .25, val[0]\n            xy[1] = .25, val[1]\n            xy[2] = .75, val[1]\n            xy[3] = .75, val[0]\n            # xy[4] = .25, val[0]  # Removed: IndexError - polygon only has 4 vertices\n        else:\n            xy[0] = val[0], .25\n            xy[1] = val[0], .75\n            xy[2] = val[1], .75\n            xy[3] = val[1], .25\n            # xy[4] = val[0], .25  # Removed: IndexError - polygon only has 4 vertices\n        self.poly.xy = xy\n        self.valtext.set_text(self._format(val))\n        if self.drawon:\n            self.ax.figure.canvas.draw_idle()\n",
      "\n        val = np.sort(val)\n        _api.check_shape((2,), val=val)\n        val[0] = self._min_in_bounds(val[0])\n        val[1] = self._max_in_bounds(val[1])\n        xy = self.poly.xy\n        if self.orientation == \"vertical\":\n            xy[0] = .25, val[0]\n            xy[1] = .25, val[1]\n            xy[2] = .75, val[1]\n            xy[3] = .75, val[0]\n            # xy[4] = .25, val[0]  # Removed: polygon only has 4 vertices\n        else:\n            xy[0] = val[0], .25\n            xy[1] = val[0], .75\n            xy[2] = val[1], .75\n            xy[3] = val[1], .25\n            # xy[4] = val[0], .25  # Removed: polygon only has 4 vertices\n        self.poly.xy = xy\n        self.valtext.set_text(self._format(val))\n        if self.drawon:\n            self.ax.figure.canvas.draw_idle()\n"
    ],
    "Location 2 (/root/hy/projects_1/matplotlib/lib/matplotlib/widgets.py lines 912-912)": [
      "\n        else:\n            xy[0] = val[0], .25\n            xy[1] = val[0], .75\n            xy[2] = val[1], .75\n            xy[3] = val[1], .25\n            # xy[4] = val[0], .25  # Removed: polygon only has 4 vertices\n",
      "\n        if self.orientation == 'vertical':\n            xy[0] = .25, val[0]\n            xy[1] = .25, val[1]\n            xy[2] = .75, val[1]\n            xy[3] = .75, val[0]\n            # xy[4] = .25, val[0]  # Removed: attempting to access non-existent 5th vertex\n        else:\n            xy[0] = val[0], .25\n            xy[1] = val[0], .75\n            xy[2] = val[1], .75\n            xy[3] = val[1], .25\n            # xy[4] = val[0], .25  # Removed: attempting to access non-existent 5th vertex\n",
      "\n        else:\n            xy[0] = val[0], .25\n            xy[1] = val[0], .75\n            xy[2] = val[1], .75\n            xy[3] = val[1], .25\n            # xy[4] = val[0], .25  # Removed: polygon only has 4 vertices\n",
      "\n        if self.orientation == \"vertical\":\n            xy[0] = .25, val[0]\n            xy[1] = .25, val[1]\n            xy[2] = .75, val[1]\n            xy[3] = .75, val[0]\n        else:\n            xy[0] = val[0], .25\n            xy[1] = val[0], .75\n            xy[2] = val[1], .75\n            xy[3] = val[1], .25\n",
      "\n        else:\n            xy[0] = val[0], .25\n            xy[1] = val[0], .75\n            xy[2] = val[1], .75\n            xy[3] = val[1], .25\n            # xy[4] = val[0], .25  # Removed: xy only has 4 vertices, not 5\n",
      "\n        else:\n            xy[0] = val[0], .25\n            xy[1] = val[0], .75\n            xy[2] = val[1], .75\n            xy[3] = val[1], .25\n            # xy[4] = val[0], .25  # Removed: polygon only has 4 vertices\n",
      "\n        if self.orientation == \"vertical\":\n            xy[0] = .25, val[0]\n            xy[1] = .25, val[1]\n            xy[2] = .75, val[1]\n            xy[3] = .75, val[0]\n            # xy[4] = .25, val[0]  # Removed: accessing non-existent 5th vertex\n        else:\n            xy[0] = val[0], .25\n            xy[1] = val[0], .75\n            xy[2] = val[1], .75\n            xy[3] = val[1], .25\n            # xy[4] = val[0], .25  # Removed: accessing non-existent 5th vertex\n",
      "\n            xy[0] = val[0], .25\n            xy[1] = val[0], .75\n            xy[2] = val[1], .75\n            xy[3] = val[1], .25\n            # xy[4] = val[0], .25  # Removed: IndexError - polygon only has 4 vertices\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex da5b40a5ef..33e9ea2faf 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -903,13 +903,15 @@ class RangeSlider(SliderBase):\n             xy[1] = .25, val[1]\n             xy[2] = .75, val[1]\n             xy[3] = .75, val[0]\n-            xy[4] = .25, val[0]\n+\n+            # xy[4] = .25, val[0]\n         else:\n             xy[0] = val[0], .25\n             xy[1] = val[0], .75\n             xy[2] = val[1], .75\n             xy[3] = val[1], .25\n-            xy[4] = val[0], .25\n+\n+            # xy[4] = val[0], .25\n         self.poly.xy = xy\n         self.valtext.set_text(self._format(val))\n         if self.drawon:\n",
    "variant_0": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex da5b40a5ef..3142724368 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -903,13 +903,40 @@ class RangeSlider(SliderBase):\n             xy[1] = .25, val[1]\n             xy[2] = .75, val[1]\n             xy[3] = .75, val[0]\n-            xy[4] = .25, val[0]\n+\n+        val = np.sort(val)\n+        _api.check_shape((2,), val=val)\n+        val[0] = self._min_in_bounds(val[0])\n+        val[1] = self._max_in_bounds(val[1])\n+        xy = self.poly.xy\n+        if self.orientation == \"vertical\":\n+            xy[0] = .25, val[0]\n+            xy[1] = .25, val[1]\n+            xy[2] = .75, val[1]\n+            xy[3] = .75, val[0]\n+            # xy[4] = .25, val[0]  # Removed: IndexError - polygon only has 4 vertices\n+        else:\n+            xy[0] = val[0], .25\n+            xy[1] = val[0], .75\n+            xy[2] = val[1], .75\n+            xy[3] = val[1], .25\n+            # xy[4] = val[0], .25  # Removed: IndexError - polygon only has 4 vertices\n+        self.poly.xy = xy\n+        self.valtext.set_text(self._format(val))\n+        if self.drawon:\n+            self.ax.figure.canvas.draw_idle()\n+        else:\n+            xy[0] = val[0], .25\n+            xy[1] = val[0], .75\n+            xy[2] = val[1], .75\n+            xy[3] = val[1], .25\n+\n         else:\n             xy[0] = val[0], .25\n             xy[1] = val[0], .75\n             xy[2] = val[1], .75\n             xy[3] = val[1], .25\n-            xy[4] = val[0], .25\n+            # xy[4] = val[0], .25  # Commented out - polygon only has 4 vertices\n         self.poly.xy = xy\n         self.valtext.set_text(self._format(val))\n         if self.drawon:\n",
    "variant_1": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex da5b40a5ef..9b1d9d6295 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -903,13 +903,40 @@ class RangeSlider(SliderBase):\n             xy[1] = .25, val[1]\n             xy[2] = .75, val[1]\n             xy[3] = .75, val[0]\n-            xy[4] = .25, val[0]\n+\n+        val = np.sort(val)\n+        _api.check_shape((2,), val=val)\n+        val[0] = self._min_in_bounds(val[0])\n+        val[1] = self._max_in_bounds(val[1])\n+        xy = self.poly.xy\n+        if self.orientation == \"vertical\":\n+            xy[0] = .25, val[0]\n+            xy[1] = .25, val[1]\n+            xy[2] = .75, val[1]\n+            xy[3] = .75, val[0]\n+            # xy[4] = .25, val[0]  # Removed: IndexError - polygon only has 4 vertices\n+        else:\n+            xy[0] = val[0], .25\n+            xy[1] = val[0], .75\n+            xy[2] = val[1], .75\n+            xy[3] = val[1], .25\n+            # xy[4] = val[0], .25  # Removed: IndexError - polygon only has 4 vertices\n+        self.poly.xy = xy\n+        self.valtext.set_text(self._format(val))\n+        if self.drawon:\n+            self.ax.figure.canvas.draw_idle()\n+        else:\n+            xy[0] = val[0], .25\n+            xy[1] = val[0], .75\n+            xy[2] = val[1], .75\n+            xy[3] = val[1], .25\n+\n         else:\n             xy[0] = val[0], .25\n             xy[1] = val[0], .75\n             xy[2] = val[1], .75\n             xy[3] = val[1], .25\n-            xy[4] = val[0], .25\n+            # xy[4] = val[0], .25  # Removed: polygon only has 4 vertices\n         self.poly.xy = xy\n         self.valtext.set_text(self._format(val))\n         if self.drawon:\n",
    "variant_2": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex da5b40a5ef..c1301eda53 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -903,13 +903,46 @@ class RangeSlider(SliderBase):\n             xy[1] = .25, val[1]\n             xy[2] = .75, val[1]\n             xy[3] = .75, val[0]\n-            xy[4] = .25, val[0]\n+\n+        val = np.sort(val)\n+        _api.check_shape((2,), val=val)\n+        val[0] = self._min_in_bounds(val[0])\n+        val[1] = self._max_in_bounds(val[1])\n+        xy = self.poly.xy\n+        if self.orientation == \"vertical\":\n+            xy[0] = .25, val[0]\n+            xy[1] = .25, val[1]\n+            xy[2] = .75, val[1]\n+            xy[3] = .75, val[0]\n+            # xy[4] = .25, val[0]  # Removed: polygon only has 4 vertices\n+        else:\n+            xy[0] = val[0], .25\n+            xy[1] = val[0], .75\n+            xy[2] = val[1], .75\n+            xy[3] = val[1], .25\n+            # xy[4] = val[0], .25  # Removed: polygon only has 4 vertices\n+        self.poly.xy = xy\n+        self.valtext.set_text(self._format(val))\n+        if self.drawon:\n+            self.ax.figure.canvas.draw_idle()\n+        else:\n+            xy[0] = val[0], .25\n+            xy[1] = val[0], .75\n+            xy[2] = val[1], .75\n+            xy[3] = val[1], .25\n+\n+        if self.orientation == 'vertical':\n+            xy[0] = .25, val[0]\n+            xy[1] = .25, val[1]\n+            xy[2] = .75, val[1]\n+            xy[3] = .75, val[0]\n+            # xy[4] = .25, val[0]  # Removed: attempting to access non-existent 5th vertex\n         else:\n             xy[0] = val[0], .25\n             xy[1] = val[0], .75\n             xy[2] = val[1], .75\n             xy[3] = val[1], .25\n-            xy[4] = val[0], .25\n+            # xy[4] = val[0], .25  # Removed: attempting to access non-existent 5th vertex\n         self.poly.xy = xy\n         self.valtext.set_text(self._format(val))\n         if self.drawon:\n",
    "variant_3": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex da5b40a5ef..485ad31a62 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -903,13 +903,40 @@ class RangeSlider(SliderBase):\n             xy[1] = .25, val[1]\n             xy[2] = .75, val[1]\n             xy[3] = .75, val[0]\n-            xy[4] = .25, val[0]\n+\n+        val = np.sort(val)\n+        _api.check_shape((2,), val=val)\n+        val[0] = self._min_in_bounds(val[0])\n+        val[1] = self._max_in_bounds(val[1])\n+        xy = self.poly.xy\n+        if self.orientation == \"vertical\":\n+            xy[0] = .25, val[0]\n+            xy[1] = .25, val[1]\n+            xy[2] = .75, val[1]\n+            xy[3] = .75, val[0]\n+            # xy[4] = .25, val[0]  # Removed: polygon only has 4 vertices\n+        else:\n+            xy[0] = val[0], .25\n+            xy[1] = val[0], .75\n+            xy[2] = val[1], .75\n+            xy[3] = val[1], .25\n+            # xy[4] = val[0], .25  # Removed: polygon only has 4 vertices\n+        self.poly.xy = xy\n+        self.valtext.set_text(self._format(val))\n+        if self.drawon:\n+            self.ax.figure.canvas.draw_idle()\n+        else:\n+            xy[0] = val[0], .25\n+            xy[1] = val[0], .75\n+            xy[2] = val[1], .75\n+            xy[3] = val[1], .25\n+\n         else:\n             xy[0] = val[0], .25\n             xy[1] = val[0], .75\n             xy[2] = val[1], .75\n             xy[3] = val[1], .25\n-            xy[4] = val[0], .25\n+            # xy[4] = val[0], .25  # Removed: polygon only has 4 vertices\n         self.poly.xy = xy\n         self.valtext.set_text(self._format(val))\n         if self.drawon:\n",
    "variant_4": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex da5b40a5ef..a0755128f5 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -903,13 +903,44 @@ class RangeSlider(SliderBase):\n             xy[1] = .25, val[1]\n             xy[2] = .75, val[1]\n             xy[3] = .75, val[0]\n-            xy[4] = .25, val[0]\n+\n+        val = np.sort(val)\n+        _api.check_shape((2,), val=val)\n+        val[0] = self._min_in_bounds(val[0])\n+        val[1] = self._max_in_bounds(val[1])\n+        xy = self.poly.xy\n+        if self.orientation == \"vertical\":\n+            xy[0] = .25, val[0]\n+            xy[1] = .25, val[1]\n+            xy[2] = .75, val[1]\n+            xy[3] = .75, val[0]\n+            # xy[4] = .25, val[0]  # Removed: polygon only has 4 vertices\n+        else:\n+            xy[0] = val[0], .25\n+            xy[1] = val[0], .75\n+            xy[2] = val[1], .75\n+            xy[3] = val[1], .25\n+            # xy[4] = val[0], .25  # Removed: polygon only has 4 vertices\n+        self.poly.xy = xy\n+        self.valtext.set_text(self._format(val))\n+        if self.drawon:\n+            self.ax.figure.canvas.draw_idle()\n+        else:\n+            xy[0] = val[0], .25\n+            xy[1] = val[0], .75\n+            xy[2] = val[1], .75\n+            xy[3] = val[1], .25\n+\n+        if self.orientation == \"vertical\":\n+            xy[0] = .25, val[0]\n+            xy[1] = .25, val[1]\n+            xy[2] = .75, val[1]\n+            xy[3] = .75, val[0]\n         else:\n             xy[0] = val[0], .25\n             xy[1] = val[0], .75\n             xy[2] = val[1], .75\n             xy[3] = val[1], .25\n-            xy[4] = val[0], .25\n         self.poly.xy = xy\n         self.valtext.set_text(self._format(val))\n         if self.drawon:\n",
    "variant_5": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex da5b40a5ef..8de9e00e0e 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -903,13 +903,40 @@ class RangeSlider(SliderBase):\n             xy[1] = .25, val[1]\n             xy[2] = .75, val[1]\n             xy[3] = .75, val[0]\n-            xy[4] = .25, val[0]\n+\n+        val = np.sort(val)\n+        _api.check_shape((2,), val=val)\n+        val[0] = self._min_in_bounds(val[0])\n+        val[1] = self._max_in_bounds(val[1])\n+        xy = self.poly.xy\n+        if self.orientation == \"vertical\":\n+            xy[0] = .25, val[0]\n+            xy[1] = .25, val[1]\n+            xy[2] = .75, val[1]\n+            xy[3] = .75, val[0]\n+            # xy[4] = .25, val[0]  # Removed: polygon only has 4 vertices\n+        else:\n+            xy[0] = val[0], .25\n+            xy[1] = val[0], .75\n+            xy[2] = val[1], .75\n+            xy[3] = val[1], .25\n+            # xy[4] = val[0], .25  # Removed: polygon only has 4 vertices\n+        self.poly.xy = xy\n+        self.valtext.set_text(self._format(val))\n+        if self.drawon:\n+            self.ax.figure.canvas.draw_idle()\n+        else:\n+            xy[0] = val[0], .25\n+            xy[1] = val[0], .75\n+            xy[2] = val[1], .75\n+            xy[3] = val[1], .25\n+\n         else:\n             xy[0] = val[0], .25\n             xy[1] = val[0], .75\n             xy[2] = val[1], .75\n             xy[3] = val[1], .25\n-            xy[4] = val[0], .25\n+            # xy[4] = val[0], .25  # Removed: xy only has 4 vertices, not 5\n         self.poly.xy = xy\n         self.valtext.set_text(self._format(val))\n         if self.drawon:\n",
    "variant_6": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex da5b40a5ef..485ad31a62 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -903,13 +903,40 @@ class RangeSlider(SliderBase):\n             xy[1] = .25, val[1]\n             xy[2] = .75, val[1]\n             xy[3] = .75, val[0]\n-            xy[4] = .25, val[0]\n+\n+        val = np.sort(val)\n+        _api.check_shape((2,), val=val)\n+        val[0] = self._min_in_bounds(val[0])\n+        val[1] = self._max_in_bounds(val[1])\n+        xy = self.poly.xy\n+        if self.orientation == \"vertical\":\n+            xy[0] = .25, val[0]\n+            xy[1] = .25, val[1]\n+            xy[2] = .75, val[1]\n+            xy[3] = .75, val[0]\n+            # xy[4] = .25, val[0]  # Removed: polygon only has 4 vertices\n+        else:\n+            xy[0] = val[0], .25\n+            xy[1] = val[0], .75\n+            xy[2] = val[1], .75\n+            xy[3] = val[1], .25\n+            # xy[4] = val[0], .25  # Removed: polygon only has 4 vertices\n+        self.poly.xy = xy\n+        self.valtext.set_text(self._format(val))\n+        if self.drawon:\n+            self.ax.figure.canvas.draw_idle()\n+        else:\n+            xy[0] = val[0], .25\n+            xy[1] = val[0], .75\n+            xy[2] = val[1], .75\n+            xy[3] = val[1], .25\n+\n         else:\n             xy[0] = val[0], .25\n             xy[1] = val[0], .75\n             xy[2] = val[1], .75\n             xy[3] = val[1], .25\n-            xy[4] = val[0], .25\n+            # xy[4] = val[0], .25  # Removed: polygon only has 4 vertices\n         self.poly.xy = xy\n         self.valtext.set_text(self._format(val))\n         if self.drawon:\n",
    "variant_7": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex da5b40a5ef..0a40e353b2 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -903,13 +903,46 @@ class RangeSlider(SliderBase):\n             xy[1] = .25, val[1]\n             xy[2] = .75, val[1]\n             xy[3] = .75, val[0]\n-            xy[4] = .25, val[0]\n+\n+        val = np.sort(val)\n+        _api.check_shape((2,), val=val)\n+        val[0] = self._min_in_bounds(val[0])\n+        val[1] = self._max_in_bounds(val[1])\n+        xy = self.poly.xy\n+        if self.orientation == \"vertical\":\n+            xy[0] = .25, val[0]\n+            xy[1] = .25, val[1]\n+            xy[2] = .75, val[1]\n+            xy[3] = .75, val[0]\n+            # xy[4] = .25, val[0]  # Removed: IndexError - polygon only has 4 vertices\n+        else:\n+            xy[0] = val[0], .25\n+            xy[1] = val[0], .75\n+            xy[2] = val[1], .75\n+            xy[3] = val[1], .25\n+            # xy[4] = val[0], .25  # Removed: IndexError - polygon only has 4 vertices\n+        self.poly.xy = xy\n+        self.valtext.set_text(self._format(val))\n+        if self.drawon:\n+            self.ax.figure.canvas.draw_idle()\n+        else:\n+            xy[0] = val[0], .25\n+            xy[1] = val[0], .75\n+            xy[2] = val[1], .75\n+            xy[3] = val[1], .25\n+\n+        if self.orientation == \"vertical\":\n+            xy[0] = .25, val[0]\n+            xy[1] = .25, val[1]\n+            xy[2] = .75, val[1]\n+            xy[3] = .75, val[0]\n+            # xy[4] = .25, val[0]  # Removed: accessing non-existent 5th vertex\n         else:\n             xy[0] = val[0], .25\n             xy[1] = val[0], .75\n             xy[2] = val[1], .75\n             xy[3] = val[1], .25\n-            xy[4] = val[0], .25\n+            # xy[4] = val[0], .25  # Removed: accessing non-existent 5th vertex\n         self.poly.xy = xy\n         self.valtext.set_text(self._format(val))\n         if self.drawon:\n",
    "variant_8": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex da5b40a5ef..8e12a7117c 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -903,13 +903,39 @@ class RangeSlider(SliderBase):\n             xy[1] = .25, val[1]\n             xy[2] = .75, val[1]\n             xy[3] = .75, val[0]\n-            xy[4] = .25, val[0]\n+\n+        val = np.sort(val)\n+        _api.check_shape((2,), val=val)\n+        val[0] = self._min_in_bounds(val[0])\n+        val[1] = self._max_in_bounds(val[1])\n+        xy = self.poly.xy\n+        if self.orientation == \"vertical\":\n+            xy[0] = .25, val[0]\n+            xy[1] = .25, val[1]\n+            xy[2] = .75, val[1]\n+            xy[3] = .75, val[0]\n+            # xy[4] = .25, val[0]  # Removed: polygon only has 4 vertices\n         else:\n             xy[0] = val[0], .25\n             xy[1] = val[0], .75\n             xy[2] = val[1], .75\n             xy[3] = val[1], .25\n-            xy[4] = val[0], .25\n+            # xy[4] = val[0], .25  # Removed: polygon only has 4 vertices\n+        self.poly.xy = xy\n+        self.valtext.set_text(self._format(val))\n+        if self.drawon:\n+            self.ax.figure.canvas.draw_idle()\n+        else:\n+            xy[0] = val[0], .25\n+            xy[1] = val[0], .75\n+            xy[2] = val[1], .75\n+            xy[3] = val[1], .25\n+\n+            xy[0] = val[0], .25\n+            xy[1] = val[0], .75\n+            xy[2] = val[1], .75\n+            xy[3] = val[1], .25\n+            # xy[4] = val[0], .25  # Removed: IndexError - polygon only has 4 vertices\n         self.poly.xy = xy\n         self.valtext.set_text(self._format(val))\n         if self.drawon:\n"
  }
}