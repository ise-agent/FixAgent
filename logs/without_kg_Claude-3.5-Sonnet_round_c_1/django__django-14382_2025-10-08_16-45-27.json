{
  "zero_patches": {
    "Location 1 (/root/hy/projects_1/django/django/core/management/templates.py lines 77-77)": "\n                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects_1/django/django/core/management/templates.py lines 77-77)": [
      "\n        if target is None:\n            top_dir = os.path.join(os.getcwd(), name)\n            try:\n                os.makedirs(top_dir)\n            except FileExistsError:\n                raise CommandError(\"'%s' already exists\" % top_dir)\n            except OSError as e:\n                raise CommandError(e)\n        else:\n            if app_or_project == 'app':\n                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')\n            top_dir = os.path.abspath(os.path.expanduser(target))\n            if not os.path.exists(top_dir):\n                raise CommandError(\"Destination directory '%s' does not \"\n                                   \"exist, please create it first.\" % top_dir)\n\n        extensions = tuple(handle_extensions(options['extensions']))\n        extra_files = []\n        for file in options['files']:\n            extra_files.extend(map(lambda x: x.strip(), file.split(',')))\n        if self.verbosity >= 2:\n",
      "\n        if target is None:\n            top_dir = os.path.join(os.getcwd(), name)\n            try:\n                os.makedirs(top_dir)\n            except FileExistsError:\n                raise CommandError(\"'%s' already exists\" % top_dir)\n            except OSError as e:\n                raise CommandError(e)\n        else:\n            if app_or_project == 'app':\n                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')\n            top_dir = os.path.abspath(os.path.expanduser(target))\n            if not os.path.exists(top_dir):\n                raise CommandError(\"Destination directory '%s' does not \"\n                                   \"exist, please create it first.\" % top_dir)\n\n        extensions = tuple(handle_extensions(options['extensions']))\n        extra_files = []\n        for file in options['files']:\n            extra_files.extend(map(lambda x: x.strip(), file.split(',')))\n        if self.verbosity >= 2:\n",
      "\n            if app_or_project == 'app':\n                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')\n",
      "\n        if target is None:\n            top_dir = os.path.join(os.getcwd(), name)\n            try:\n                os.makedirs(top_dir)\n            except FileExistsError:\n                raise CommandError(\"'%s' already exists\" % top_dir)\n            except OSError as e:\n                raise CommandError(e)\n        else:\n            if app_or_project == 'app':\n                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')\n            top_dir = os.path.abspath(os.path.expanduser(target))\n            if not os.path.exists(top_dir):\n                raise CommandError(\"Destination directory '%s' does not \"\n                                   \"exist, please create it first.\" % top_dir)\n\n        extensions = tuple(handle_extensions(options['extensions']))\n        extra_files = []\n        for file in options['files']:\n            extra_files.extend(map(lambda x: x.strip(), file.split(',')))\n        if self.verbosity >= 2:\n",
      "\n        if target is None:\n            top_dir = os.path.join(os.getcwd(), name)\n            try:\n                os.makedirs(top_dir)\n            except FileExistsError:\n                raise CommandError(\"'%s' already exists\" % top_dir)\n            except OSError as e:\n                raise CommandError(e)\n        else:\n            if app_or_project == 'app':\n                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')\n            top_dir = os.path.abspath(os.path.expanduser(target))\n            if not os.path.exists(top_dir):\n                raise CommandError(\"Destination directory '%s' does not \"\n                                   \"exist, please create it first.\" % top_dir)\n\n        extensions = tuple(handle_extensions(options['extensions']))\n        extra_files = []\n        for file in options['files']:\n            extra_files.extend(map(lambda x: x.strip(), file.split(',')))\n        if self.verbosity >= 2:\n",
      "\n        if target is None:\n            top_dir = os.path.join(os.getcwd(), name)\n            try:\n                os.makedirs(top_dir)\n            except FileExistsError:\n                raise CommandError(\"'%s' already exists\" % top_dir)\n            except OSError as e:\n                raise CommandError(e)\n        else:\n            if app_or_project == 'app':\n                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')\n            top_dir = os.path.abspath(os.path.expanduser(target))\n            if not os.path.exists(top_dir):\n                raise CommandError(\"Destination directory '%s' does not \"\n                                   \"exist, please create it first.\" % top_dir)\n\n        extensions = tuple(handle_extensions(options['extensions']))\n        extra_files = []\n        for file in options['files']:\n            extra_files.extend(map(lambda x: x.strip(), file.split(',')))\n        if self.verbosity >= 2:\n",
      "\n        if target is None:\n            top_dir = os.path.join(os.getcwd(), name)\n            try:\n                os.makedirs(top_dir)\n            except FileExistsError:\n                raise CommandError(\"'%s' already exists\" % top_dir)\n            except OSError as e:\n                raise CommandError(e)\n        else:\n            if app_or_project == 'app':\n                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')\n            top_dir = os.path.abspath(os.path.expanduser(target))\n            if not os.path.exists(top_dir):\n                raise CommandError(\"Destination directory '%s' does not \"\n                                   \"exist, please create it first.\" % top_dir)\n\n        extensions = tuple(handle_extensions(options['extensions']))\n        extra_files = []\n        for file in options['files']:\n            extra_files.extend(map(lambda x: x.strip(), file.split(',')))\n        if self.verbosity >= 2:\n",
      "\n        if target is None:\n            top_dir = os.path.join(os.getcwd(), name)\n            try:\n                os.makedirs(top_dir)\n            except FileExistsError:\n                raise CommandError(\"'%s' already exists\" % top_dir)\n            except OSError as e:\n                raise CommandError(e)\n        else:\n            if app_or_project == 'app':\n                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')\n            top_dir = os.path.abspath(os.path.expanduser(target))\n            if not os.path.exists(top_dir):\n                raise CommandError(\"Destination directory '%s' does not \"\n                                   \"exist, please create it first.\" % top_dir)\n\n        extensions = tuple(handle_extensions(options['extensions']))\n        extra_files = []\n        for file in options['files']:\n            extra_files.extend(map(lambda x: x.strip(), file.split(',')))\n        if self.verbosity >= 2:\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/django/core/management/templates.py b/django/core/management/templates.py\nindex 8dc6068286..ccaa4b566f 100644\n--- a/django/core/management/templates.py\n+++ b/django/core/management/templates.py\n@@ -74,7 +74,8 @@ class TemplateCommand(BaseCommand):\n                 raise CommandError(e)\n         else:\n             if app_or_project == 'app':\n-                self.validate_name(os.path.basename(target), 'directory')\n+\n+                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')\n             top_dir = os.path.abspath(os.path.expanduser(target))\n             if not os.path.exists(top_dir):\n                 raise CommandError(\"Destination directory '%s' does not \"\n",
    "variant_0": "diff --git a/django/core/management/templates.py b/django/core/management/templates.py\nindex 8dc6068286..ccaa4b566f 100644\n--- a/django/core/management/templates.py\n+++ b/django/core/management/templates.py\n@@ -74,7 +74,8 @@ class TemplateCommand(BaseCommand):\n                 raise CommandError(e)\n         else:\n             if app_or_project == 'app':\n-                self.validate_name(os.path.basename(target), 'directory')\n+\n+                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')\n             top_dir = os.path.abspath(os.path.expanduser(target))\n             if not os.path.exists(top_dir):\n                 raise CommandError(\"Destination directory '%s' does not \"\n",
    "variant_1": "diff --git a/django/core/management/templates.py b/django/core/management/templates.py\nindex 8dc6068286..35316c05d5 100644\n--- a/django/core/management/templates.py\n+++ b/django/core/management/templates.py\n@@ -74,7 +74,28 @@ class TemplateCommand(BaseCommand):\n                 raise CommandError(e)\n         else:\n             if app_or_project == 'app':\n-                self.validate_name(os.path.basename(target), 'directory')\n+\n+        if target is None:\n+            top_dir = os.path.join(os.getcwd(), name)\n+            try:\n+                os.makedirs(top_dir)\n+            except FileExistsError:\n+                raise CommandError(\"'%s' already exists\" % top_dir)\n+            except OSError as e:\n+                raise CommandError(e)\n+        else:\n+            if app_or_project == 'app':\n+                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')\n+            top_dir = os.path.abspath(os.path.expanduser(target))\n+            if not os.path.exists(top_dir):\n+                raise CommandError(\"Destination directory '%s' does not \"\n+                                   \"exist, please create it first.\" % top_dir)\n+\n+        extensions = tuple(handle_extensions(options['extensions']))\n+        extra_files = []\n+        for file in options['files']:\n+            extra_files.extend(map(lambda x: x.strip(), file.split(',')))\n+        if self.verbosity >= 2:\n             top_dir = os.path.abspath(os.path.expanduser(target))\n             if not os.path.exists(top_dir):\n                 raise CommandError(\"Destination directory '%s' does not \"\n",
    "variant_2": "diff --git a/django/core/management/templates.py b/django/core/management/templates.py\nindex 8dc6068286..35316c05d5 100644\n--- a/django/core/management/templates.py\n+++ b/django/core/management/templates.py\n@@ -74,7 +74,28 @@ class TemplateCommand(BaseCommand):\n                 raise CommandError(e)\n         else:\n             if app_or_project == 'app':\n-                self.validate_name(os.path.basename(target), 'directory')\n+\n+        if target is None:\n+            top_dir = os.path.join(os.getcwd(), name)\n+            try:\n+                os.makedirs(top_dir)\n+            except FileExistsError:\n+                raise CommandError(\"'%s' already exists\" % top_dir)\n+            except OSError as e:\n+                raise CommandError(e)\n+        else:\n+            if app_or_project == 'app':\n+                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')\n+            top_dir = os.path.abspath(os.path.expanduser(target))\n+            if not os.path.exists(top_dir):\n+                raise CommandError(\"Destination directory '%s' does not \"\n+                                   \"exist, please create it first.\" % top_dir)\n+\n+        extensions = tuple(handle_extensions(options['extensions']))\n+        extra_files = []\n+        for file in options['files']:\n+            extra_files.extend(map(lambda x: x.strip(), file.split(',')))\n+        if self.verbosity >= 2:\n             top_dir = os.path.abspath(os.path.expanduser(target))\n             if not os.path.exists(top_dir):\n                 raise CommandError(\"Destination directory '%s' does not \"\n",
    "variant_3": "diff --git a/django/core/management/templates.py b/django/core/management/templates.py\nindex 8dc6068286..5f950b23aa 100644\n--- a/django/core/management/templates.py\n+++ b/django/core/management/templates.py\n@@ -74,7 +74,9 @@ class TemplateCommand(BaseCommand):\n                 raise CommandError(e)\n         else:\n             if app_or_project == 'app':\n-                self.validate_name(os.path.basename(target), 'directory')\n+\n+            if app_or_project == 'app':\n+                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')\n             top_dir = os.path.abspath(os.path.expanduser(target))\n             if not os.path.exists(top_dir):\n                 raise CommandError(\"Destination directory '%s' does not \"\n",
    "variant_4": "diff --git a/django/core/management/templates.py b/django/core/management/templates.py\nindex 8dc6068286..35316c05d5 100644\n--- a/django/core/management/templates.py\n+++ b/django/core/management/templates.py\n@@ -74,7 +74,28 @@ class TemplateCommand(BaseCommand):\n                 raise CommandError(e)\n         else:\n             if app_or_project == 'app':\n-                self.validate_name(os.path.basename(target), 'directory')\n+\n+        if target is None:\n+            top_dir = os.path.join(os.getcwd(), name)\n+            try:\n+                os.makedirs(top_dir)\n+            except FileExistsError:\n+                raise CommandError(\"'%s' already exists\" % top_dir)\n+            except OSError as e:\n+                raise CommandError(e)\n+        else:\n+            if app_or_project == 'app':\n+                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')\n+            top_dir = os.path.abspath(os.path.expanduser(target))\n+            if not os.path.exists(top_dir):\n+                raise CommandError(\"Destination directory '%s' does not \"\n+                                   \"exist, please create it first.\" % top_dir)\n+\n+        extensions = tuple(handle_extensions(options['extensions']))\n+        extra_files = []\n+        for file in options['files']:\n+            extra_files.extend(map(lambda x: x.strip(), file.split(',')))\n+        if self.verbosity >= 2:\n             top_dir = os.path.abspath(os.path.expanduser(target))\n             if not os.path.exists(top_dir):\n                 raise CommandError(\"Destination directory '%s' does not \"\n",
    "variant_5": "diff --git a/django/core/management/templates.py b/django/core/management/templates.py\nindex 8dc6068286..35316c05d5 100644\n--- a/django/core/management/templates.py\n+++ b/django/core/management/templates.py\n@@ -74,7 +74,28 @@ class TemplateCommand(BaseCommand):\n                 raise CommandError(e)\n         else:\n             if app_or_project == 'app':\n-                self.validate_name(os.path.basename(target), 'directory')\n+\n+        if target is None:\n+            top_dir = os.path.join(os.getcwd(), name)\n+            try:\n+                os.makedirs(top_dir)\n+            except FileExistsError:\n+                raise CommandError(\"'%s' already exists\" % top_dir)\n+            except OSError as e:\n+                raise CommandError(e)\n+        else:\n+            if app_or_project == 'app':\n+                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')\n+            top_dir = os.path.abspath(os.path.expanduser(target))\n+            if not os.path.exists(top_dir):\n+                raise CommandError(\"Destination directory '%s' does not \"\n+                                   \"exist, please create it first.\" % top_dir)\n+\n+        extensions = tuple(handle_extensions(options['extensions']))\n+        extra_files = []\n+        for file in options['files']:\n+            extra_files.extend(map(lambda x: x.strip(), file.split(',')))\n+        if self.verbosity >= 2:\n             top_dir = os.path.abspath(os.path.expanduser(target))\n             if not os.path.exists(top_dir):\n                 raise CommandError(\"Destination directory '%s' does not \"\n",
    "variant_6": "diff --git a/django/core/management/templates.py b/django/core/management/templates.py\nindex 8dc6068286..35316c05d5 100644\n--- a/django/core/management/templates.py\n+++ b/django/core/management/templates.py\n@@ -74,7 +74,28 @@ class TemplateCommand(BaseCommand):\n                 raise CommandError(e)\n         else:\n             if app_or_project == 'app':\n-                self.validate_name(os.path.basename(target), 'directory')\n+\n+        if target is None:\n+            top_dir = os.path.join(os.getcwd(), name)\n+            try:\n+                os.makedirs(top_dir)\n+            except FileExistsError:\n+                raise CommandError(\"'%s' already exists\" % top_dir)\n+            except OSError as e:\n+                raise CommandError(e)\n+        else:\n+            if app_or_project == 'app':\n+                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')\n+            top_dir = os.path.abspath(os.path.expanduser(target))\n+            if not os.path.exists(top_dir):\n+                raise CommandError(\"Destination directory '%s' does not \"\n+                                   \"exist, please create it first.\" % top_dir)\n+\n+        extensions = tuple(handle_extensions(options['extensions']))\n+        extra_files = []\n+        for file in options['files']:\n+            extra_files.extend(map(lambda x: x.strip(), file.split(',')))\n+        if self.verbosity >= 2:\n             top_dir = os.path.abspath(os.path.expanduser(target))\n             if not os.path.exists(top_dir):\n                 raise CommandError(\"Destination directory '%s' does not \"\n",
    "variant_7": "diff --git a/django/core/management/templates.py b/django/core/management/templates.py\nindex 8dc6068286..35316c05d5 100644\n--- a/django/core/management/templates.py\n+++ b/django/core/management/templates.py\n@@ -74,7 +74,28 @@ class TemplateCommand(BaseCommand):\n                 raise CommandError(e)\n         else:\n             if app_or_project == 'app':\n-                self.validate_name(os.path.basename(target), 'directory')\n+\n+        if target is None:\n+            top_dir = os.path.join(os.getcwd(), name)\n+            try:\n+                os.makedirs(top_dir)\n+            except FileExistsError:\n+                raise CommandError(\"'%s' already exists\" % top_dir)\n+            except OSError as e:\n+                raise CommandError(e)\n+        else:\n+            if app_or_project == 'app':\n+                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')\n+            top_dir = os.path.abspath(os.path.expanduser(target))\n+            if not os.path.exists(top_dir):\n+                raise CommandError(\"Destination directory '%s' does not \"\n+                                   \"exist, please create it first.\" % top_dir)\n+\n+        extensions = tuple(handle_extensions(options['extensions']))\n+        extra_files = []\n+        for file in options['files']:\n+            extra_files.extend(map(lambda x: x.strip(), file.split(',')))\n+        if self.verbosity >= 2:\n             top_dir = os.path.abspath(os.path.expanduser(target))\n             if not os.path.exists(top_dir):\n                 raise CommandError(\"Destination directory '%s' does not \"\n",
    "variant_8": "diff --git a/django/core/management/templates.py b/django/core/management/templates.py\nindex 8dc6068286..35316c05d5 100644\n--- a/django/core/management/templates.py\n+++ b/django/core/management/templates.py\n@@ -74,7 +74,28 @@ class TemplateCommand(BaseCommand):\n                 raise CommandError(e)\n         else:\n             if app_or_project == 'app':\n-                self.validate_name(os.path.basename(target), 'directory')\n+\n+        if target is None:\n+            top_dir = os.path.join(os.getcwd(), name)\n+            try:\n+                os.makedirs(top_dir)\n+            except FileExistsError:\n+                raise CommandError(\"'%s' already exists\" % top_dir)\n+            except OSError as e:\n+                raise CommandError(e)\n+        else:\n+            if app_or_project == 'app':\n+                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')\n+            top_dir = os.path.abspath(os.path.expanduser(target))\n+            if not os.path.exists(top_dir):\n+                raise CommandError(\"Destination directory '%s' does not \"\n+                                   \"exist, please create it first.\" % top_dir)\n+\n+        extensions = tuple(handle_extensions(options['extensions']))\n+        extra_files = []\n+        for file in options['files']:\n+            extra_files.extend(map(lambda x: x.strip(), file.split(',')))\n+        if self.verbosity >= 2:\n             top_dir = os.path.abspath(os.path.expanduser(target))\n             if not os.path.exists(top_dir):\n                 raise CommandError(\"Destination directory '%s' does not \"\n"
  }
}