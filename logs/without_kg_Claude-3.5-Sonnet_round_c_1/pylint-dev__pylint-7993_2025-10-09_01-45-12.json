{
  "zero_patches": {
    "Location 1 (/root/hy/projects_1/pylint/pylint/reporters/text.py lines 178-178)": "\n        arguments = re.findall(r\"(?<!\\{)\\{([^{}]+?)(:[^}]*)?\\}(?!\\})\", template)\n",
    "Location 2 (/root/hy/projects_1/pylint/pylint/reporters/text.py lines 185-185)": "\n                template = re.sub(r\"(?<!\\{)\\{\" + re.escape(argument[0]) + r\"(:[^}]*)?\\}(?!\\})\", \"\", template)\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects_1/pylint/pylint/reporters/text.py lines 178-178)": [
      "\n        arguments = re.findall(r\"(?<!\\{)\\{([^{}]+?)(:[^}]*)?\\}(?!\\})\", template)\n",
      "\n        arguments = re.findall(r\"(?<!\\{)\\{([^{}]+?)(:[^}]*)?\\}(?!\\})\", template)\n",
      "\n        arguments = re.findall(r\"(?<!\\{)\\{([^{}]+?)(:[^}]*)?\\}(?!\\})\", template)\n",
      "\n        arguments = re.findall(r\"(?<!\\{)\\{([^{}]+?)(:[^}]*)?\\}(?!\\})\", template)\n",
      "\n        arguments = re.findall(r\"(?<!\\{)\\{([^{}]+?)(:[^}]*)?\\}(?!\\})\", template)\n",
      "\n        arguments = re.findall(r\"(?<!\\{)\\{([^{}]+?)(:[^}]*)?\\}(?!\\})\", template)\n",
      "\n        arguments = re.findall(r\"(?<!\\{)\\{([^{}]+?)(:[^}]*)?\\}(?!\\})\", template)\n",
      "\n        arguments = re.findall(r\"(?<!\\{)\\{([^{}]+?)(:[^}]*)?\\}(?!\\})\", template)\n"
    ],
    "Location 2 (/root/hy/projects_1/pylint/pylint/reporters/text.py lines 185-185)": [
      "\n                template = re.sub(r\"(?<!\\{)\\{\" + re.escape(argument[0]) + r\"(:[^}]*)?\\}(?!\\})\", \"\", template)\n",
      "\n                template = re.sub(r\"(?<!\\{)\\{\" + re.escape(argument[0]) + r\"(:[^}]*)?\\}(?!\\})\", \"\", template)\n",
      "\n                template = re.sub(r\"(?<!\\{)\\{\" + re.escape(argument[0]) + r\"(:[^}]*)?\\}(?!\\})\", \"\", template)\n",
      "\n                template = re.sub(r\"(?<!\\{)\\{\" + re.escape(argument[0]) + r\"(:[^}]*)?\\}(?!\\})\", \"\", template)\n",
      "\n                template = re.sub(r\"(?<!\\{)\\{\" + re.escape(argument[0]) + r\"(:[^}]*)?\\}(?!\\})\", \"\", template)\n",
      "\n                template = re.sub(r\"(?<!\\{)\\{\" + re.escape(argument[0]) + r\"(:[^}]*)?\\}(?!\\})\", \"\", template)\n",
      "\n                template = re.sub(r\"(?<!\\{)\\{\" + re.escape(argument[0]) + r\"(:[^}]*)?\\}(?!\\})\", \"\", template)\n",
      "\n                template = re.sub(r\"(?<!\\{)\\{\" + re.escape(argument[0]) + r\"(:[^}]*)?\\}(?!\\})\", \"\", template)\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/pylint/reporters/text.py b/pylint/reporters/text.py\nindex 29bd46798..d3f69b35f 100644\n--- a/pylint/reporters/text.py\n+++ b/pylint/reporters/text.py\n@@ -175,14 +175,16 @@ class TextReporter(BaseReporter):\n         self._template = template\n \n         # Check to see if all parameters in the template are attributes of the Message\n-        arguments = re.findall(r\"\\{(.+?)(:.*)?\\}\", template)\n+\n+        arguments = re.findall(r\"(?<!\\{)\\{([^{}]+?)(:[^}]*)?\\}(?!\\})\", template)\n         for argument in arguments:\n             if argument[0] not in MESSAGE_FIELDS:\n                 warnings.warn(\n                     f\"Don't recognize the argument '{argument[0]}' in the --msg-template. \"\n                     \"Are you sure it is supported on the current version of pylint?\"\n                 )\n-                template = re.sub(r\"\\{\" + argument[0] + r\"(:.*?)?\\}\", \"\", template)\n+\n+                template = re.sub(r\"(?<!\\{)\\{\" + re.escape(argument[0]) + r\"(:[^}]*)?\\}(?!\\})\", \"\", template)\n         self._fixed_template = template\n \n     def write_message(self, msg: Message) -> None:\n",
    "variant_0": "diff --git a/pylint/reporters/text.py b/pylint/reporters/text.py\nindex 29bd46798..d3f69b35f 100644\n--- a/pylint/reporters/text.py\n+++ b/pylint/reporters/text.py\n@@ -175,14 +175,16 @@ class TextReporter(BaseReporter):\n         self._template = template\n \n         # Check to see if all parameters in the template are attributes of the Message\n-        arguments = re.findall(r\"\\{(.+?)(:.*)?\\}\", template)\n+\n+        arguments = re.findall(r\"(?<!\\{)\\{([^{}]+?)(:[^}]*)?\\}(?!\\})\", template)\n         for argument in arguments:\n             if argument[0] not in MESSAGE_FIELDS:\n                 warnings.warn(\n                     f\"Don't recognize the argument '{argument[0]}' in the --msg-template. \"\n                     \"Are you sure it is supported on the current version of pylint?\"\n                 )\n-                template = re.sub(r\"\\{\" + argument[0] + r\"(:.*?)?\\}\", \"\", template)\n+\n+                template = re.sub(r\"(?<!\\{)\\{\" + re.escape(argument[0]) + r\"(:[^}]*)?\\}(?!\\})\", \"\", template)\n         self._fixed_template = template\n \n     def write_message(self, msg: Message) -> None:\n",
    "variant_1": "diff --git a/pylint/reporters/text.py b/pylint/reporters/text.py\nindex 29bd46798..d3f69b35f 100644\n--- a/pylint/reporters/text.py\n+++ b/pylint/reporters/text.py\n@@ -175,14 +175,16 @@ class TextReporter(BaseReporter):\n         self._template = template\n \n         # Check to see if all parameters in the template are attributes of the Message\n-        arguments = re.findall(r\"\\{(.+?)(:.*)?\\}\", template)\n+\n+        arguments = re.findall(r\"(?<!\\{)\\{([^{}]+?)(:[^}]*)?\\}(?!\\})\", template)\n         for argument in arguments:\n             if argument[0] not in MESSAGE_FIELDS:\n                 warnings.warn(\n                     f\"Don't recognize the argument '{argument[0]}' in the --msg-template. \"\n                     \"Are you sure it is supported on the current version of pylint?\"\n                 )\n-                template = re.sub(r\"\\{\" + argument[0] + r\"(:.*?)?\\}\", \"\", template)\n+\n+                template = re.sub(r\"(?<!\\{)\\{\" + re.escape(argument[0]) + r\"(:[^}]*)?\\}(?!\\})\", \"\", template)\n         self._fixed_template = template\n \n     def write_message(self, msg: Message) -> None:\n",
    "variant_2": "diff --git a/pylint/reporters/text.py b/pylint/reporters/text.py\nindex 29bd46798..d3f69b35f 100644\n--- a/pylint/reporters/text.py\n+++ b/pylint/reporters/text.py\n@@ -175,14 +175,16 @@ class TextReporter(BaseReporter):\n         self._template = template\n \n         # Check to see if all parameters in the template are attributes of the Message\n-        arguments = re.findall(r\"\\{(.+?)(:.*)?\\}\", template)\n+\n+        arguments = re.findall(r\"(?<!\\{)\\{([^{}]+?)(:[^}]*)?\\}(?!\\})\", template)\n         for argument in arguments:\n             if argument[0] not in MESSAGE_FIELDS:\n                 warnings.warn(\n                     f\"Don't recognize the argument '{argument[0]}' in the --msg-template. \"\n                     \"Are you sure it is supported on the current version of pylint?\"\n                 )\n-                template = re.sub(r\"\\{\" + argument[0] + r\"(:.*?)?\\}\", \"\", template)\n+\n+                template = re.sub(r\"(?<!\\{)\\{\" + re.escape(argument[0]) + r\"(:[^}]*)?\\}(?!\\})\", \"\", template)\n         self._fixed_template = template\n \n     def write_message(self, msg: Message) -> None:\n",
    "variant_3": "diff --git a/pylint/reporters/text.py b/pylint/reporters/text.py\nindex 29bd46798..d3f69b35f 100644\n--- a/pylint/reporters/text.py\n+++ b/pylint/reporters/text.py\n@@ -175,14 +175,16 @@ class TextReporter(BaseReporter):\n         self._template = template\n \n         # Check to see if all parameters in the template are attributes of the Message\n-        arguments = re.findall(r\"\\{(.+?)(:.*)?\\}\", template)\n+\n+        arguments = re.findall(r\"(?<!\\{)\\{([^{}]+?)(:[^}]*)?\\}(?!\\})\", template)\n         for argument in arguments:\n             if argument[0] not in MESSAGE_FIELDS:\n                 warnings.warn(\n                     f\"Don't recognize the argument '{argument[0]}' in the --msg-template. \"\n                     \"Are you sure it is supported on the current version of pylint?\"\n                 )\n-                template = re.sub(r\"\\{\" + argument[0] + r\"(:.*?)?\\}\", \"\", template)\n+\n+                template = re.sub(r\"(?<!\\{)\\{\" + re.escape(argument[0]) + r\"(:[^}]*)?\\}(?!\\})\", \"\", template)\n         self._fixed_template = template\n \n     def write_message(self, msg: Message) -> None:\n",
    "variant_4": "diff --git a/pylint/reporters/text.py b/pylint/reporters/text.py\nindex 29bd46798..d3f69b35f 100644\n--- a/pylint/reporters/text.py\n+++ b/pylint/reporters/text.py\n@@ -175,14 +175,16 @@ class TextReporter(BaseReporter):\n         self._template = template\n \n         # Check to see if all parameters in the template are attributes of the Message\n-        arguments = re.findall(r\"\\{(.+?)(:.*)?\\}\", template)\n+\n+        arguments = re.findall(r\"(?<!\\{)\\{([^{}]+?)(:[^}]*)?\\}(?!\\})\", template)\n         for argument in arguments:\n             if argument[0] not in MESSAGE_FIELDS:\n                 warnings.warn(\n                     f\"Don't recognize the argument '{argument[0]}' in the --msg-template. \"\n                     \"Are you sure it is supported on the current version of pylint?\"\n                 )\n-                template = re.sub(r\"\\{\" + argument[0] + r\"(:.*?)?\\}\", \"\", template)\n+\n+                template = re.sub(r\"(?<!\\{)\\{\" + re.escape(argument[0]) + r\"(:[^}]*)?\\}(?!\\})\", \"\", template)\n         self._fixed_template = template\n \n     def write_message(self, msg: Message) -> None:\n",
    "variant_5": "diff --git a/pylint/reporters/text.py b/pylint/reporters/text.py\nindex 29bd46798..d3f69b35f 100644\n--- a/pylint/reporters/text.py\n+++ b/pylint/reporters/text.py\n@@ -175,14 +175,16 @@ class TextReporter(BaseReporter):\n         self._template = template\n \n         # Check to see if all parameters in the template are attributes of the Message\n-        arguments = re.findall(r\"\\{(.+?)(:.*)?\\}\", template)\n+\n+        arguments = re.findall(r\"(?<!\\{)\\{([^{}]+?)(:[^}]*)?\\}(?!\\})\", template)\n         for argument in arguments:\n             if argument[0] not in MESSAGE_FIELDS:\n                 warnings.warn(\n                     f\"Don't recognize the argument '{argument[0]}' in the --msg-template. \"\n                     \"Are you sure it is supported on the current version of pylint?\"\n                 )\n-                template = re.sub(r\"\\{\" + argument[0] + r\"(:.*?)?\\}\", \"\", template)\n+\n+                template = re.sub(r\"(?<!\\{)\\{\" + re.escape(argument[0]) + r\"(:[^}]*)?\\}(?!\\})\", \"\", template)\n         self._fixed_template = template\n \n     def write_message(self, msg: Message) -> None:\n",
    "variant_6": "diff --git a/pylint/reporters/text.py b/pylint/reporters/text.py\nindex 29bd46798..d3f69b35f 100644\n--- a/pylint/reporters/text.py\n+++ b/pylint/reporters/text.py\n@@ -175,14 +175,16 @@ class TextReporter(BaseReporter):\n         self._template = template\n \n         # Check to see if all parameters in the template are attributes of the Message\n-        arguments = re.findall(r\"\\{(.+?)(:.*)?\\}\", template)\n+\n+        arguments = re.findall(r\"(?<!\\{)\\{([^{}]+?)(:[^}]*)?\\}(?!\\})\", template)\n         for argument in arguments:\n             if argument[0] not in MESSAGE_FIELDS:\n                 warnings.warn(\n                     f\"Don't recognize the argument '{argument[0]}' in the --msg-template. \"\n                     \"Are you sure it is supported on the current version of pylint?\"\n                 )\n-                template = re.sub(r\"\\{\" + argument[0] + r\"(:.*?)?\\}\", \"\", template)\n+\n+                template = re.sub(r\"(?<!\\{)\\{\" + re.escape(argument[0]) + r\"(:[^}]*)?\\}(?!\\})\", \"\", template)\n         self._fixed_template = template\n \n     def write_message(self, msg: Message) -> None:\n",
    "variant_7": "diff --git a/pylint/reporters/text.py b/pylint/reporters/text.py\nindex 29bd46798..d3f69b35f 100644\n--- a/pylint/reporters/text.py\n+++ b/pylint/reporters/text.py\n@@ -175,14 +175,16 @@ class TextReporter(BaseReporter):\n         self._template = template\n \n         # Check to see if all parameters in the template are attributes of the Message\n-        arguments = re.findall(r\"\\{(.+?)(:.*)?\\}\", template)\n+\n+        arguments = re.findall(r\"(?<!\\{)\\{([^{}]+?)(:[^}]*)?\\}(?!\\})\", template)\n         for argument in arguments:\n             if argument[0] not in MESSAGE_FIELDS:\n                 warnings.warn(\n                     f\"Don't recognize the argument '{argument[0]}' in the --msg-template. \"\n                     \"Are you sure it is supported on the current version of pylint?\"\n                 )\n-                template = re.sub(r\"\\{\" + argument[0] + r\"(:.*?)?\\}\", \"\", template)\n+\n+                template = re.sub(r\"(?<!\\{)\\{\" + re.escape(argument[0]) + r\"(:[^}]*)?\\}(?!\\})\", \"\", template)\n         self._fixed_template = template\n \n     def write_message(self, msg: Message) -> None:\n",
    "variant_8": "diff --git a/pylint/reporters/text.py b/pylint/reporters/text.py\nindex 29bd46798..d3f69b35f 100644\n--- a/pylint/reporters/text.py\n+++ b/pylint/reporters/text.py\n@@ -175,14 +175,16 @@ class TextReporter(BaseReporter):\n         self._template = template\n \n         # Check to see if all parameters in the template are attributes of the Message\n-        arguments = re.findall(r\"\\{(.+?)(:.*)?\\}\", template)\n+\n+        arguments = re.findall(r\"(?<!\\{)\\{([^{}]+?)(:[^}]*)?\\}(?!\\})\", template)\n         for argument in arguments:\n             if argument[0] not in MESSAGE_FIELDS:\n                 warnings.warn(\n                     f\"Don't recognize the argument '{argument[0]}' in the --msg-template. \"\n                     \"Are you sure it is supported on the current version of pylint?\"\n                 )\n-                template = re.sub(r\"\\{\" + argument[0] + r\"(:.*?)?\\}\", \"\", template)\n+\n+                template = re.sub(r\"(?<!\\{)\\{\" + re.escape(argument[0]) + r\"(:[^}]*)?\\}(?!\\})\", \"\", template)\n         self._fixed_template = template\n \n     def write_message(self, msg: Message) -> None:\n"
  }
}