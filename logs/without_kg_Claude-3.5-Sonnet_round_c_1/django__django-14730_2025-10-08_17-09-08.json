{
  "zero_patches": {
    "Location 1 (/root/hy/projects_1/django/django/db/models/fields/related.py lines 1230-1261)": "\n    def _check_ignored_options(self, **kwargs):\n        warnings = []\n\n        if self.has_null_arg:\n            warnings.append(\n                checks.Warning(\n                    'null has no effect on ManyToManyField.',\n                    obj=self,\n                    id='fields.W340',\n                )\n            )\n\n        if self._validators:\n            warnings.append(\n                checks.Warning(\n                    'ManyToManyField does not support validators.',\n                    obj=self,\n                    id='fields.W341',\n                )\n            )\n        if (self.remote_field.limit_choices_to and self.remote_field.through and\n                not self.remote_field.through._meta.auto_created):\n            warnings.append(\n                checks.Warning(\n                    'limit_choices_to has no effect on ManyToManyField '\n                    'with a through model.',\n                    obj=self,\n                    id='fields.W343',\n                )\n            )\n\n        if self.remote_field.symmetrical and self.remote_field.related_name:\n            warnings.append(\n                checks.Error(\n                    'related_name has no effect on ManyToManyField with symmetrical=True.',\n                    obj=self,\n                    id='fields.E344',\n                )\n            )\n\n        return warnings\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects_1/django/django/db/models/fields/related.py lines 1230-1261)": [
      "\n    def _check_ignored_options(self, **kwargs):\n        warnings = []\n\n        if self.has_null_arg:\n            warnings.append(\n                checks.Warning(\n                    'null has no effect on ManyToManyField.',\n                    obj=self,\n                    id='fields.W340',\n                )\n            )\n\n        if self._validators:\n            warnings.append(\n                checks.Warning(\n                    'ManyToManyField does not support validators.',\n                    obj=self,\n                    id='fields.W341',\n                )\n            )\n        if (self.remote_field.limit_choices_to and self.remote_field.through and\n                not self.remote_field.through._meta.auto_created):\n            warnings.append(\n                checks.Warning(\n                    'limit_choices_to has no effect on ManyToManyField '\n                    'with a through model.',\n                    obj=self,\n                    id='fields.W343',\n                )\n            )\n\n        if self.remote_field.symmetrical and self.remote_field.related_name:\n            warnings.append(\n                checks.Error(\n                    'related_name has no effect on ManyToManyField with symmetrical=True.',\n                    obj=self,\n                    id='fields.E344',\n                )\n            )\n\n        return warnings\n",
      "\n    def _check_ignored_options(self, **kwargs):\n        warnings = []\n\n        if self.has_null_arg:\n            warnings.append(\n                checks.Warning(\n                    'null has no effect on ManyToManyField.',\n                    obj=self,\n                    id='fields.W340',\n                )\n            )\n\n        if self._validators:\n            warnings.append(\n                checks.Warning(\n                    'ManyToManyField does not support validators.',\n                    obj=self,\n                    id='fields.W341',\n                )\n            )\n        if (self.remote_field.limit_choices_to and self.remote_field.through and\n                not self.remote_field.through._meta.auto_created):\n            warnings.append(\n                checks.Warning(\n                    'limit_choices_to has no effect on ManyToManyField '\n                    'with a through model.',\n                    obj=self,\n                    id='fields.W343',\n                )\n            )\n\n        if self.remote_field.symmetrical and self.remote_field.related_name:\n            warnings.append(\n                checks.Error(\n                    'related_name has no effect on ManyToManyField with symmetrical=True.',\n                    obj=self,\n                    id='fields.E344',\n                )\n            )\n\n        return warnings\n",
      "\n    def _check_ignored_options(self, **kwargs):\n        warnings = []\n\n        if self.has_null_arg:\n            warnings.append(\n                checks.Warning(\n                    'null has no effect on ManyToManyField.',\n                    obj=self,\n                    id='fields.W340',\n                )\n            )\n\n        if self._validators:\n            warnings.append(\n                checks.Warning(\n                    'ManyToManyField does not support validators.',\n                    obj=self,\n                    id='fields.W341',\n                )\n            )\n        if (self.remote_field.limit_choices_to and self.remote_field.through and\n                not self.remote_field.through._meta.auto_created):\n            warnings.append(\n                checks.Warning(\n                    'limit_choices_to has no effect on ManyToManyField '\n                    'with a through model.',\n                    obj=self,\n                    id='fields.W343',\n                )\n            )\n\n        if self.remote_field.symmetrical and self.remote_field.related_name:\n            warnings.append(\n                checks.Error(\n                    'related_name has no effect on ManyToManyField with symmetrical=True.',\n                    obj=self,\n                    id='fields.E344',\n                )\n            )\n\n        return warnings\n",
      "\n    def _check_ignored_options(self, **kwargs):\n        warnings = []\n\n        if self.has_null_arg:\n            warnings.append(\n                checks.Warning(\n                    'null has no effect on ManyToManyField.',\n                    obj=self,\n                    id='fields.W340',\n                )\n            )\n\n        if self._validators:\n            warnings.append(\n                checks.Warning(\n                    'ManyToManyField does not support validators.',\n                    obj=self,\n                    id='fields.W341',\n                )\n            )\n        if (self.remote_field.limit_choices_to and self.remote_field.through and\n                not self.remote_field.through._meta.auto_created):\n            warnings.append(\n                checks.Warning(\n                    'limit_choices_to has no effect on ManyToManyField '\n                    'with a through model.',\n                    obj=self,\n                    id='fields.W343',\n                )\n            )\n\n        if self.remote_field.symmetrical and self.remote_field.related_name:\n            warnings.append(\n                checks.Error(\n                    'related_name has no effect on ManyToManyField with symmetrical=True.',\n                    obj=self,\n                    id='fields.E344',\n                )\n            )\n\n        return warnings\n",
      "\n    def _check_ignored_options(self, **kwargs):\n        warnings = []\n\n        if self.has_null_arg:\n            warnings.append(\n                checks.Warning(\n                    'null has no effect on ManyToManyField.',\n                    obj=self,\n                    id='fields.W340',\n                )\n            )\n\n        if self._validators:\n            warnings.append(\n                checks.Warning(\n                    'ManyToManyField does not support validators.',\n                    obj=self,\n                    id='fields.W341',\n                )\n            )\n        if (self.remote_field.limit_choices_to and self.remote_field.through and\n                not self.remote_field.through._meta.auto_created):\n            warnings.append(\n                checks.Warning(\n                    'limit_choices_to has no effect on ManyToManyField '\n                    'with a through model.',\n                    obj=self,\n                    id='fields.W343',\n                )\n            )\n\n        if self.remote_field.symmetrical and self.remote_field.related_name:\n            warnings.append(\n                checks.Error(\n                    'related_name has no effect on ManyToManyField with symmetrical=True.',\n                    obj=self,\n                    id='fields.E344',\n                )\n            )\n\n        return warnings\n",
      "\n    def _check_ignored_options(self, **kwargs):\n        warnings = []\n\n        if self.has_null_arg:\n            warnings.append(\n                checks.Warning(\n                    'null has no effect on ManyToManyField.',\n                    obj=self,\n                    id='fields.W340',\n                )\n            )\n\n        if self._validators:\n            warnings.append(\n                checks.Warning(\n                    'ManyToManyField does not support validators.',\n                    obj=self,\n                    id='fields.W341',\n                )\n            )\n        if (self.remote_field.limit_choices_to and self.remote_field.through and\n                not self.remote_field.through._meta.auto_created):\n            warnings.append(\n                checks.Warning(\n                    'limit_choices_to has no effect on ManyToManyField '\n                    'with a through model.',\n                    obj=self,\n                    id='fields.W343',\n                )\n            )\n\n        if self.remote_field.symmetrical and self.remote_field.related_name:\n            warnings.append(\n                checks.Error(\n                    'related_name has no effect on ManyToManyField with symmetrical=True.',\n                    obj=self,\n                    id='fields.E344',\n                )\n            )\n\n        return warnings\n",
      "\n    def _check_ignored_options(self, **kwargs):\n        warnings = []\n\n        if self.has_null_arg:\n            warnings.append(\n                checks.Warning(\n                    'null has no effect on ManyToManyField.',\n                    obj=self,\n                    id='fields.W340',\n                )\n            )\n\n        if self._validators:\n            warnings.append(\n                checks.Warning(\n                    'ManyToManyField does not support validators.',\n                    obj=self,\n                    id='fields.W341',\n                )\n            )\n        if (self.remote_field.limit_choices_to and self.remote_field.through and\n                not self.remote_field.through._meta.auto_created):\n            warnings.append(\n                checks.Warning(\n                    'limit_choices_to has no effect on ManyToManyField '\n                    'with a through model.',\n                    obj=self,\n                    id='fields.W343',\n                )\n            )\n\n        if self.remote_field.symmetrical and self.remote_field.related_name:\n            warnings.append(\n                checks.Error(\n                    'related_name has no effect on ManyToManyField with symmetrical=True.',\n                    obj=self,\n                    id='fields.E344',\n                )\n            )\n\n        return warnings\n",
      "\n    def _check_ignored_options(self, **kwargs):\n        warnings = []\n\n        if self.has_null_arg:\n            warnings.append(\n                checks.Warning(\n                    'null has no effect on ManyToManyField.',\n                    obj=self,\n                    id='fields.W340',\n                )\n            )\n\n        if self._validators:\n            warnings.append(\n                checks.Warning(\n                    'ManyToManyField does not support validators.',\n                    obj=self,\n                    id='fields.W341',\n                )\n            )\n        if (self.remote_field.limit_choices_to and self.remote_field.through and\n                not self.remote_field.through._meta.auto_created):\n            warnings.append(\n                checks.Warning(\n                    'limit_choices_to has no effect on ManyToManyField '\n                    'with a through model.',\n                    obj=self,\n                    id='fields.W343',\n                )\n            )\n\n        if self.remote_field.symmetrical and self.remote_field.related_name:\n            warnings.append(\n                checks.Error(\n                    'related_name has no effect on ManyToManyField with symmetrical=True.',\n                    obj=self,\n                    id='fields.E344',\n                )\n            )\n\n        return warnings\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex febaadbb5b..8e96dc8a08 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -1227,6 +1227,7 @@ class ManyToManyField(RelatedField):\n             ]\n         return []\n \n+\n     def _check_ignored_options(self, **kwargs):\n         warnings = []\n \n@@ -1258,6 +1259,15 @@ class ManyToManyField(RelatedField):\n                 )\n             )\n \n+        if self.remote_field.symmetrical and self.remote_field.related_name:\n+            warnings.append(\n+                checks.Error(\n+                    'related_name has no effect on ManyToManyField with symmetrical=True.',\n+                    obj=self,\n+                    id='fields.E344',\n+                )\n+            )\n+\n         return warnings\n \n     def _check_relationship_model(self, from_model=None, **kwargs):\n",
    "variant_0": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex febaadbb5b..8e96dc8a08 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -1227,6 +1227,7 @@ class ManyToManyField(RelatedField):\n             ]\n         return []\n \n+\n     def _check_ignored_options(self, **kwargs):\n         warnings = []\n \n@@ -1258,6 +1259,15 @@ class ManyToManyField(RelatedField):\n                 )\n             )\n \n+        if self.remote_field.symmetrical and self.remote_field.related_name:\n+            warnings.append(\n+                checks.Error(\n+                    'related_name has no effect on ManyToManyField with symmetrical=True.',\n+                    obj=self,\n+                    id='fields.E344',\n+                )\n+            )\n+\n         return warnings\n \n     def _check_relationship_model(self, from_model=None, **kwargs):\n",
    "variant_1": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex febaadbb5b..8e96dc8a08 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -1227,6 +1227,7 @@ class ManyToManyField(RelatedField):\n             ]\n         return []\n \n+\n     def _check_ignored_options(self, **kwargs):\n         warnings = []\n \n@@ -1258,6 +1259,15 @@ class ManyToManyField(RelatedField):\n                 )\n             )\n \n+        if self.remote_field.symmetrical and self.remote_field.related_name:\n+            warnings.append(\n+                checks.Error(\n+                    'related_name has no effect on ManyToManyField with symmetrical=True.',\n+                    obj=self,\n+                    id='fields.E344',\n+                )\n+            )\n+\n         return warnings\n \n     def _check_relationship_model(self, from_model=None, **kwargs):\n",
    "variant_2": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex febaadbb5b..8e96dc8a08 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -1227,6 +1227,7 @@ class ManyToManyField(RelatedField):\n             ]\n         return []\n \n+\n     def _check_ignored_options(self, **kwargs):\n         warnings = []\n \n@@ -1258,6 +1259,15 @@ class ManyToManyField(RelatedField):\n                 )\n             )\n \n+        if self.remote_field.symmetrical and self.remote_field.related_name:\n+            warnings.append(\n+                checks.Error(\n+                    'related_name has no effect on ManyToManyField with symmetrical=True.',\n+                    obj=self,\n+                    id='fields.E344',\n+                )\n+            )\n+\n         return warnings\n \n     def _check_relationship_model(self, from_model=None, **kwargs):\n",
    "variant_3": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex febaadbb5b..8e96dc8a08 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -1227,6 +1227,7 @@ class ManyToManyField(RelatedField):\n             ]\n         return []\n \n+\n     def _check_ignored_options(self, **kwargs):\n         warnings = []\n \n@@ -1258,6 +1259,15 @@ class ManyToManyField(RelatedField):\n                 )\n             )\n \n+        if self.remote_field.symmetrical and self.remote_field.related_name:\n+            warnings.append(\n+                checks.Error(\n+                    'related_name has no effect on ManyToManyField with symmetrical=True.',\n+                    obj=self,\n+                    id='fields.E344',\n+                )\n+            )\n+\n         return warnings\n \n     def _check_relationship_model(self, from_model=None, **kwargs):\n",
    "variant_4": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex febaadbb5b..8e96dc8a08 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -1227,6 +1227,7 @@ class ManyToManyField(RelatedField):\n             ]\n         return []\n \n+\n     def _check_ignored_options(self, **kwargs):\n         warnings = []\n \n@@ -1258,6 +1259,15 @@ class ManyToManyField(RelatedField):\n                 )\n             )\n \n+        if self.remote_field.symmetrical and self.remote_field.related_name:\n+            warnings.append(\n+                checks.Error(\n+                    'related_name has no effect on ManyToManyField with symmetrical=True.',\n+                    obj=self,\n+                    id='fields.E344',\n+                )\n+            )\n+\n         return warnings\n \n     def _check_relationship_model(self, from_model=None, **kwargs):\n",
    "variant_5": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex febaadbb5b..8e96dc8a08 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -1227,6 +1227,7 @@ class ManyToManyField(RelatedField):\n             ]\n         return []\n \n+\n     def _check_ignored_options(self, **kwargs):\n         warnings = []\n \n@@ -1258,6 +1259,15 @@ class ManyToManyField(RelatedField):\n                 )\n             )\n \n+        if self.remote_field.symmetrical and self.remote_field.related_name:\n+            warnings.append(\n+                checks.Error(\n+                    'related_name has no effect on ManyToManyField with symmetrical=True.',\n+                    obj=self,\n+                    id='fields.E344',\n+                )\n+            )\n+\n         return warnings\n \n     def _check_relationship_model(self, from_model=None, **kwargs):\n",
    "variant_6": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex febaadbb5b..8e96dc8a08 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -1227,6 +1227,7 @@ class ManyToManyField(RelatedField):\n             ]\n         return []\n \n+\n     def _check_ignored_options(self, **kwargs):\n         warnings = []\n \n@@ -1258,6 +1259,15 @@ class ManyToManyField(RelatedField):\n                 )\n             )\n \n+        if self.remote_field.symmetrical and self.remote_field.related_name:\n+            warnings.append(\n+                checks.Error(\n+                    'related_name has no effect on ManyToManyField with symmetrical=True.',\n+                    obj=self,\n+                    id='fields.E344',\n+                )\n+            )\n+\n         return warnings\n \n     def _check_relationship_model(self, from_model=None, **kwargs):\n",
    "variant_7": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex febaadbb5b..8e96dc8a08 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -1227,6 +1227,7 @@ class ManyToManyField(RelatedField):\n             ]\n         return []\n \n+\n     def _check_ignored_options(self, **kwargs):\n         warnings = []\n \n@@ -1258,6 +1259,15 @@ class ManyToManyField(RelatedField):\n                 )\n             )\n \n+        if self.remote_field.symmetrical and self.remote_field.related_name:\n+            warnings.append(\n+                checks.Error(\n+                    'related_name has no effect on ManyToManyField with symmetrical=True.',\n+                    obj=self,\n+                    id='fields.E344',\n+                )\n+            )\n+\n         return warnings\n \n     def _check_relationship_model(self, from_model=None, **kwargs):\n",
    "variant_8": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex febaadbb5b..8e96dc8a08 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -1227,6 +1227,7 @@ class ManyToManyField(RelatedField):\n             ]\n         return []\n \n+\n     def _check_ignored_options(self, **kwargs):\n         warnings = []\n \n@@ -1258,6 +1259,15 @@ class ManyToManyField(RelatedField):\n                 )\n             )\n \n+        if self.remote_field.symmetrical and self.remote_field.related_name:\n+            warnings.append(\n+                checks.Error(\n+                    'related_name has no effect on ManyToManyField with symmetrical=True.',\n+                    obj=self,\n+                    id='fields.E344',\n+                )\n+            )\n+\n         return warnings\n \n     def _check_relationship_model(self, from_model=None, **kwargs):\n"
  }
}