{
  "zero_patches": {
    "Location 1 (/root/hy/projects_1/xarray/xarray/core/groupby.py lines 439-439)": "\n    def __repr__(self):\n        return \"{}, grouped over {!r}\\n{!r} groups with labels {}.\".format(\n            self.__class__.__name__,\n            self._unique_coord.name,\n            self._unique_coord.size,\n            \", \".join(format_array_flat(self._unique_coord, 30).split()),\n        )\n",
    "Location 2 (/root/hy/projects_1/xarray/xarray/tests/test_groupby.py lines 391-391)": "\n    expected += \", grouped over %r\" % dim\n",
    "Location 3 (/root/hy/projects_1/xarray/xarray/tests/test_groupby.py lines 408-408)": "\n    expected += \", grouped over 'month'\"\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects_1/xarray/xarray/core/groupby.py lines 439-439)": [
      "\n    def __repr__(self):\n        return \"{}, grouped over {!r}\\n{!r} groups with labels {}.\".format(\n            self.__class__.__name__,\n            self._unique_coord.name,\n            self._unique_coord.size,\n            \", \".join(format_array_flat(self._unique_coord, 30).split()),\n        )\n",
      "\n    def __repr__(self):\n        return \"{}, grouped over {!r}\\n{!r} groups with labels {}.\".format(\n            self.__class__.__name__,\n            self._unique_coord.name,\n            self._unique_coord.size,\n            \", \".join(format_array_flat(self._unique_coord, 30).split()),\n        )\n",
      "\n    def __repr__(self):\n        return \"{}, grouped over {!r}\\n{!r} groups with labels {}.\".format(\n            self.__class__.__name__,\n            self._unique_coord.name,\n            self._unique_coord.size,\n            \", \".join(format_array_flat(self._unique_coord, 30).split()),\n        )\n",
      "\n    def __repr__(self):\n        return \"{}, grouped over {!r}\\n{!r} groups with labels {}.\".format(\n            self.__class__.__name__,\n            self._unique_coord.name,\n            self._unique_coord.size,\n            \", \".join(format_array_flat(self._unique_coord, 30).split()),\n        )\n",
      "\n    def __repr__(self):\n        return \"{}, grouped over {!r}\\n{!r} groups with labels {}.\".format(\n            self.__class__.__name__,\n            self._unique_coord.name,\n            self._unique_coord.size,\n            \", \".join(format_array_flat(self._unique_coord, 30).split()),\n        )\n",
      "\n    def __repr__(self):\n        return \"{}, grouped over {!r}\\n{!r} groups with labels {}.\".format(\n            self.__class__.__name__,\n            self._unique_coord.name,\n            self._unique_coord.size,\n            \", \".join(format_array_flat(self._unique_coord, 30).split()),\n        )\n",
      "\n    def __repr__(self):\n        return \"{}, grouped over {!r}\\n{!r} groups with labels {}.\".format(\n            self.__class__.__name__,\n            self._unique_coord.name,\n            self._unique_coord.size,\n            \", \".join(format_array_flat(self._unique_coord, 30).split()),\n        )\n",
      "\n    def __repr__(self):\n        return \"{}, grouped over {!r}\\n{!r} groups with labels {}.\".format(\n            self.__class__.__name__,\n            self._unique_coord.name,\n            self._unique_coord.size,\n            \", \".join(format_array_flat(self._unique_coord, 30).split()),\n        )\n"
    ],
    "Location 2 (/root/hy/projects_1/xarray/xarray/tests/test_groupby.py lines 391-391)": [
      "\n    expected += \", grouped over %r\" % dim\n",
      "\n    expected += \", grouped over %r\" % dim\n",
      "\n    expected += \", grouped over %r\" % dim\n",
      "\n    expected += \", grouped over %r\" % dim\n",
      "\n    expected += \", grouped over %r\" % dim\n",
      "\n    expected += \", grouped over %r\" % dim\n",
      "\n    expected += \", grouped over %r\" % dim\n",
      "\n    expected += \", grouped over %r\" % dim\n"
    ],
    "Location 3 (/root/hy/projects_1/xarray/xarray/tests/test_groupby.py lines 408-408)": [
      "\n    expected += \", grouped over 'month'\"\n",
      "\n    expected += \", grouped over 'month'\"\n",
      "\n    expected += \", grouped over 'month'\"\n",
      "\n    expected += \", grouped over 'month'\"\n",
      "\n    expected += \", grouped over 'month'\"\n",
      "\n    expected += \", grouped over 'month'\"\n",
      "\n    expected += \", grouped over 'month'\"\n",
      "\n    expected += \", grouped over 'month'\"\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/xarray/core/groupby.py b/xarray/core/groupby.py\nindex 8a097251..1b0d0589 100644\n--- a/xarray/core/groupby.py\n+++ b/xarray/core/groupby.py\n@@ -436,7 +436,8 @@ class GroupBy(SupportsArithmetic):\n         return zip(self._unique_coord.values, self._iter_grouped())\n \n     def __repr__(self):\n-        return \"{}, grouped over {!r} \\n{!r} groups with labels {}.\".format(\n+\n+        return \"{}, grouped over {!r}\\n{!r} groups with labels {}.\".format(\n             self.__class__.__name__,\n             self._unique_coord.name,\n             self._unique_coord.size,\ndiff --git a/xarray/tests/test_groupby.py b/xarray/tests/test_groupby.py\nindex 5ef7677c..b559fabf 100644\n--- a/xarray/tests/test_groupby.py\n+++ b/xarray/tests/test_groupby.py\n@@ -388,7 +388,8 @@ repr_da = xr.DataArray(\n def test_groupby_repr(obj, dim):\n     actual = repr(obj.groupby(dim))\n     expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over %r \" % dim\n+\n+    expected += \", grouped over %r\" % dim\n     expected += \"\\n%r groups with labels \" % (len(np.unique(obj[dim])))\n     if dim == \"x\":\n         expected += \"1, 2, 3, 4, 5.\"\n@@ -405,7 +406,8 @@ def test_groupby_repr(obj, dim):\n def test_groupby_repr_datetime(obj):\n     actual = repr(obj.groupby(\"t.month\"))\n     expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over 'month' \"\n+\n+    expected += \", grouped over 'month'\"\n     expected += \"\\n%r groups with labels \" % (len(np.unique(obj.t.dt.month)))\n     expected += \"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12.\"\n     assert actual == expected\n",
    "variant_0": "diff --git a/xarray/core/groupby.py b/xarray/core/groupby.py\nindex 8a097251..7c006e3d 100644\n--- a/xarray/core/groupby.py\n+++ b/xarray/core/groupby.py\n@@ -436,7 +436,14 @@ class GroupBy(SupportsArithmetic):\n         return zip(self._unique_coord.values, self._iter_grouped())\n \n     def __repr__(self):\n-        return \"{}, grouped over {!r} \\n{!r} groups with labels {}.\".format(\n+\n+    def __repr__(self):\n+        return \"{}, grouped over {!r}\\n{!r} groups with labels {}.\".format(\n+            self.__class__.__name__,\n+            self._unique_coord.name,\n+            self._unique_coord.size,\n+            \", \".join(format_array_flat(self._unique_coord, 30).split()),\n+        )\n             self.__class__.__name__,\n             self._unique_coord.name,\n             self._unique_coord.size,\ndiff --git a/xarray/tests/test_groupby.py b/xarray/tests/test_groupby.py\nindex 5ef7677c..b559fabf 100644\n--- a/xarray/tests/test_groupby.py\n+++ b/xarray/tests/test_groupby.py\n@@ -388,7 +388,8 @@ repr_da = xr.DataArray(\n def test_groupby_repr(obj, dim):\n     actual = repr(obj.groupby(dim))\n     expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over %r \" % dim\n+\n+    expected += \", grouped over %r\" % dim\n     expected += \"\\n%r groups with labels \" % (len(np.unique(obj[dim])))\n     if dim == \"x\":\n         expected += \"1, 2, 3, 4, 5.\"\n@@ -405,7 +406,8 @@ def test_groupby_repr(obj, dim):\n def test_groupby_repr_datetime(obj):\n     actual = repr(obj.groupby(\"t.month\"))\n     expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over 'month' \"\n+\n+    expected += \", grouped over 'month'\"\n     expected += \"\\n%r groups with labels \" % (len(np.unique(obj.t.dt.month)))\n     expected += \"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12.\"\n     assert actual == expected\n",
    "variant_1": "diff --git a/xarray/core/groupby.py b/xarray/core/groupby.py\nindex 8a097251..7c006e3d 100644\n--- a/xarray/core/groupby.py\n+++ b/xarray/core/groupby.py\n@@ -436,7 +436,14 @@ class GroupBy(SupportsArithmetic):\n         return zip(self._unique_coord.values, self._iter_grouped())\n \n     def __repr__(self):\n-        return \"{}, grouped over {!r} \\n{!r} groups with labels {}.\".format(\n+\n+    def __repr__(self):\n+        return \"{}, grouped over {!r}\\n{!r} groups with labels {}.\".format(\n+            self.__class__.__name__,\n+            self._unique_coord.name,\n+            self._unique_coord.size,\n+            \", \".join(format_array_flat(self._unique_coord, 30).split()),\n+        )\n             self.__class__.__name__,\n             self._unique_coord.name,\n             self._unique_coord.size,\ndiff --git a/xarray/tests/test_groupby.py b/xarray/tests/test_groupby.py\nindex 5ef7677c..b559fabf 100644\n--- a/xarray/tests/test_groupby.py\n+++ b/xarray/tests/test_groupby.py\n@@ -388,7 +388,8 @@ repr_da = xr.DataArray(\n def test_groupby_repr(obj, dim):\n     actual = repr(obj.groupby(dim))\n     expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over %r \" % dim\n+\n+    expected += \", grouped over %r\" % dim\n     expected += \"\\n%r groups with labels \" % (len(np.unique(obj[dim])))\n     if dim == \"x\":\n         expected += \"1, 2, 3, 4, 5.\"\n@@ -405,7 +406,8 @@ def test_groupby_repr(obj, dim):\n def test_groupby_repr_datetime(obj):\n     actual = repr(obj.groupby(\"t.month\"))\n     expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over 'month' \"\n+\n+    expected += \", grouped over 'month'\"\n     expected += \"\\n%r groups with labels \" % (len(np.unique(obj.t.dt.month)))\n     expected += \"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12.\"\n     assert actual == expected\n",
    "variant_2": "diff --git a/xarray/core/groupby.py b/xarray/core/groupby.py\nindex 8a097251..7c006e3d 100644\n--- a/xarray/core/groupby.py\n+++ b/xarray/core/groupby.py\n@@ -436,7 +436,14 @@ class GroupBy(SupportsArithmetic):\n         return zip(self._unique_coord.values, self._iter_grouped())\n \n     def __repr__(self):\n-        return \"{}, grouped over {!r} \\n{!r} groups with labels {}.\".format(\n+\n+    def __repr__(self):\n+        return \"{}, grouped over {!r}\\n{!r} groups with labels {}.\".format(\n+            self.__class__.__name__,\n+            self._unique_coord.name,\n+            self._unique_coord.size,\n+            \", \".join(format_array_flat(self._unique_coord, 30).split()),\n+        )\n             self.__class__.__name__,\n             self._unique_coord.name,\n             self._unique_coord.size,\ndiff --git a/xarray/tests/test_groupby.py b/xarray/tests/test_groupby.py\nindex 5ef7677c..b559fabf 100644\n--- a/xarray/tests/test_groupby.py\n+++ b/xarray/tests/test_groupby.py\n@@ -388,7 +388,8 @@ repr_da = xr.DataArray(\n def test_groupby_repr(obj, dim):\n     actual = repr(obj.groupby(dim))\n     expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over %r \" % dim\n+\n+    expected += \", grouped over %r\" % dim\n     expected += \"\\n%r groups with labels \" % (len(np.unique(obj[dim])))\n     if dim == \"x\":\n         expected += \"1, 2, 3, 4, 5.\"\n@@ -405,7 +406,8 @@ def test_groupby_repr(obj, dim):\n def test_groupby_repr_datetime(obj):\n     actual = repr(obj.groupby(\"t.month\"))\n     expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over 'month' \"\n+\n+    expected += \", grouped over 'month'\"\n     expected += \"\\n%r groups with labels \" % (len(np.unique(obj.t.dt.month)))\n     expected += \"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12.\"\n     assert actual == expected\n",
    "variant_3": "diff --git a/xarray/core/groupby.py b/xarray/core/groupby.py\nindex 8a097251..7c006e3d 100644\n--- a/xarray/core/groupby.py\n+++ b/xarray/core/groupby.py\n@@ -436,7 +436,14 @@ class GroupBy(SupportsArithmetic):\n         return zip(self._unique_coord.values, self._iter_grouped())\n \n     def __repr__(self):\n-        return \"{}, grouped over {!r} \\n{!r} groups with labels {}.\".format(\n+\n+    def __repr__(self):\n+        return \"{}, grouped over {!r}\\n{!r} groups with labels {}.\".format(\n+            self.__class__.__name__,\n+            self._unique_coord.name,\n+            self._unique_coord.size,\n+            \", \".join(format_array_flat(self._unique_coord, 30).split()),\n+        )\n             self.__class__.__name__,\n             self._unique_coord.name,\n             self._unique_coord.size,\ndiff --git a/xarray/tests/test_groupby.py b/xarray/tests/test_groupby.py\nindex 5ef7677c..b559fabf 100644\n--- a/xarray/tests/test_groupby.py\n+++ b/xarray/tests/test_groupby.py\n@@ -388,7 +388,8 @@ repr_da = xr.DataArray(\n def test_groupby_repr(obj, dim):\n     actual = repr(obj.groupby(dim))\n     expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over %r \" % dim\n+\n+    expected += \", grouped over %r\" % dim\n     expected += \"\\n%r groups with labels \" % (len(np.unique(obj[dim])))\n     if dim == \"x\":\n         expected += \"1, 2, 3, 4, 5.\"\n@@ -405,7 +406,8 @@ def test_groupby_repr(obj, dim):\n def test_groupby_repr_datetime(obj):\n     actual = repr(obj.groupby(\"t.month\"))\n     expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over 'month' \"\n+\n+    expected += \", grouped over 'month'\"\n     expected += \"\\n%r groups with labels \" % (len(np.unique(obj.t.dt.month)))\n     expected += \"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12.\"\n     assert actual == expected\n",
    "variant_4": "diff --git a/xarray/core/groupby.py b/xarray/core/groupby.py\nindex 8a097251..7c006e3d 100644\n--- a/xarray/core/groupby.py\n+++ b/xarray/core/groupby.py\n@@ -436,7 +436,14 @@ class GroupBy(SupportsArithmetic):\n         return zip(self._unique_coord.values, self._iter_grouped())\n \n     def __repr__(self):\n-        return \"{}, grouped over {!r} \\n{!r} groups with labels {}.\".format(\n+\n+    def __repr__(self):\n+        return \"{}, grouped over {!r}\\n{!r} groups with labels {}.\".format(\n+            self.__class__.__name__,\n+            self._unique_coord.name,\n+            self._unique_coord.size,\n+            \", \".join(format_array_flat(self._unique_coord, 30).split()),\n+        )\n             self.__class__.__name__,\n             self._unique_coord.name,\n             self._unique_coord.size,\ndiff --git a/xarray/tests/test_groupby.py b/xarray/tests/test_groupby.py\nindex 5ef7677c..b559fabf 100644\n--- a/xarray/tests/test_groupby.py\n+++ b/xarray/tests/test_groupby.py\n@@ -388,7 +388,8 @@ repr_da = xr.DataArray(\n def test_groupby_repr(obj, dim):\n     actual = repr(obj.groupby(dim))\n     expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over %r \" % dim\n+\n+    expected += \", grouped over %r\" % dim\n     expected += \"\\n%r groups with labels \" % (len(np.unique(obj[dim])))\n     if dim == \"x\":\n         expected += \"1, 2, 3, 4, 5.\"\n@@ -405,7 +406,8 @@ def test_groupby_repr(obj, dim):\n def test_groupby_repr_datetime(obj):\n     actual = repr(obj.groupby(\"t.month\"))\n     expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over 'month' \"\n+\n+    expected += \", grouped over 'month'\"\n     expected += \"\\n%r groups with labels \" % (len(np.unique(obj.t.dt.month)))\n     expected += \"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12.\"\n     assert actual == expected\n",
    "variant_5": "diff --git a/xarray/core/groupby.py b/xarray/core/groupby.py\nindex 8a097251..7c006e3d 100644\n--- a/xarray/core/groupby.py\n+++ b/xarray/core/groupby.py\n@@ -436,7 +436,14 @@ class GroupBy(SupportsArithmetic):\n         return zip(self._unique_coord.values, self._iter_grouped())\n \n     def __repr__(self):\n-        return \"{}, grouped over {!r} \\n{!r} groups with labels {}.\".format(\n+\n+    def __repr__(self):\n+        return \"{}, grouped over {!r}\\n{!r} groups with labels {}.\".format(\n+            self.__class__.__name__,\n+            self._unique_coord.name,\n+            self._unique_coord.size,\n+            \", \".join(format_array_flat(self._unique_coord, 30).split()),\n+        )\n             self.__class__.__name__,\n             self._unique_coord.name,\n             self._unique_coord.size,\ndiff --git a/xarray/tests/test_groupby.py b/xarray/tests/test_groupby.py\nindex 5ef7677c..b559fabf 100644\n--- a/xarray/tests/test_groupby.py\n+++ b/xarray/tests/test_groupby.py\n@@ -388,7 +388,8 @@ repr_da = xr.DataArray(\n def test_groupby_repr(obj, dim):\n     actual = repr(obj.groupby(dim))\n     expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over %r \" % dim\n+\n+    expected += \", grouped over %r\" % dim\n     expected += \"\\n%r groups with labels \" % (len(np.unique(obj[dim])))\n     if dim == \"x\":\n         expected += \"1, 2, 3, 4, 5.\"\n@@ -405,7 +406,8 @@ def test_groupby_repr(obj, dim):\n def test_groupby_repr_datetime(obj):\n     actual = repr(obj.groupby(\"t.month\"))\n     expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over 'month' \"\n+\n+    expected += \", grouped over 'month'\"\n     expected += \"\\n%r groups with labels \" % (len(np.unique(obj.t.dt.month)))\n     expected += \"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12.\"\n     assert actual == expected\n",
    "variant_6": "diff --git a/xarray/core/groupby.py b/xarray/core/groupby.py\nindex 8a097251..7c006e3d 100644\n--- a/xarray/core/groupby.py\n+++ b/xarray/core/groupby.py\n@@ -436,7 +436,14 @@ class GroupBy(SupportsArithmetic):\n         return zip(self._unique_coord.values, self._iter_grouped())\n \n     def __repr__(self):\n-        return \"{}, grouped over {!r} \\n{!r} groups with labels {}.\".format(\n+\n+    def __repr__(self):\n+        return \"{}, grouped over {!r}\\n{!r} groups with labels {}.\".format(\n+            self.__class__.__name__,\n+            self._unique_coord.name,\n+            self._unique_coord.size,\n+            \", \".join(format_array_flat(self._unique_coord, 30).split()),\n+        )\n             self.__class__.__name__,\n             self._unique_coord.name,\n             self._unique_coord.size,\ndiff --git a/xarray/tests/test_groupby.py b/xarray/tests/test_groupby.py\nindex 5ef7677c..b559fabf 100644\n--- a/xarray/tests/test_groupby.py\n+++ b/xarray/tests/test_groupby.py\n@@ -388,7 +388,8 @@ repr_da = xr.DataArray(\n def test_groupby_repr(obj, dim):\n     actual = repr(obj.groupby(dim))\n     expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over %r \" % dim\n+\n+    expected += \", grouped over %r\" % dim\n     expected += \"\\n%r groups with labels \" % (len(np.unique(obj[dim])))\n     if dim == \"x\":\n         expected += \"1, 2, 3, 4, 5.\"\n@@ -405,7 +406,8 @@ def test_groupby_repr(obj, dim):\n def test_groupby_repr_datetime(obj):\n     actual = repr(obj.groupby(\"t.month\"))\n     expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over 'month' \"\n+\n+    expected += \", grouped over 'month'\"\n     expected += \"\\n%r groups with labels \" % (len(np.unique(obj.t.dt.month)))\n     expected += \"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12.\"\n     assert actual == expected\n",
    "variant_7": "diff --git a/xarray/core/groupby.py b/xarray/core/groupby.py\nindex 8a097251..7c006e3d 100644\n--- a/xarray/core/groupby.py\n+++ b/xarray/core/groupby.py\n@@ -436,7 +436,14 @@ class GroupBy(SupportsArithmetic):\n         return zip(self._unique_coord.values, self._iter_grouped())\n \n     def __repr__(self):\n-        return \"{}, grouped over {!r} \\n{!r} groups with labels {}.\".format(\n+\n+    def __repr__(self):\n+        return \"{}, grouped over {!r}\\n{!r} groups with labels {}.\".format(\n+            self.__class__.__name__,\n+            self._unique_coord.name,\n+            self._unique_coord.size,\n+            \", \".join(format_array_flat(self._unique_coord, 30).split()),\n+        )\n             self.__class__.__name__,\n             self._unique_coord.name,\n             self._unique_coord.size,\ndiff --git a/xarray/tests/test_groupby.py b/xarray/tests/test_groupby.py\nindex 5ef7677c..b559fabf 100644\n--- a/xarray/tests/test_groupby.py\n+++ b/xarray/tests/test_groupby.py\n@@ -388,7 +388,8 @@ repr_da = xr.DataArray(\n def test_groupby_repr(obj, dim):\n     actual = repr(obj.groupby(dim))\n     expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over %r \" % dim\n+\n+    expected += \", grouped over %r\" % dim\n     expected += \"\\n%r groups with labels \" % (len(np.unique(obj[dim])))\n     if dim == \"x\":\n         expected += \"1, 2, 3, 4, 5.\"\n@@ -405,7 +406,8 @@ def test_groupby_repr(obj, dim):\n def test_groupby_repr_datetime(obj):\n     actual = repr(obj.groupby(\"t.month\"))\n     expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over 'month' \"\n+\n+    expected += \", grouped over 'month'\"\n     expected += \"\\n%r groups with labels \" % (len(np.unique(obj.t.dt.month)))\n     expected += \"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12.\"\n     assert actual == expected\n",
    "variant_8": "diff --git a/xarray/core/groupby.py b/xarray/core/groupby.py\nindex 8a097251..7c006e3d 100644\n--- a/xarray/core/groupby.py\n+++ b/xarray/core/groupby.py\n@@ -436,7 +436,14 @@ class GroupBy(SupportsArithmetic):\n         return zip(self._unique_coord.values, self._iter_grouped())\n \n     def __repr__(self):\n-        return \"{}, grouped over {!r} \\n{!r} groups with labels {}.\".format(\n+\n+    def __repr__(self):\n+        return \"{}, grouped over {!r}\\n{!r} groups with labels {}.\".format(\n+            self.__class__.__name__,\n+            self._unique_coord.name,\n+            self._unique_coord.size,\n+            \", \".join(format_array_flat(self._unique_coord, 30).split()),\n+        )\n             self.__class__.__name__,\n             self._unique_coord.name,\n             self._unique_coord.size,\ndiff --git a/xarray/tests/test_groupby.py b/xarray/tests/test_groupby.py\nindex 5ef7677c..b559fabf 100644\n--- a/xarray/tests/test_groupby.py\n+++ b/xarray/tests/test_groupby.py\n@@ -388,7 +388,8 @@ repr_da = xr.DataArray(\n def test_groupby_repr(obj, dim):\n     actual = repr(obj.groupby(dim))\n     expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over %r \" % dim\n+\n+    expected += \", grouped over %r\" % dim\n     expected += \"\\n%r groups with labels \" % (len(np.unique(obj[dim])))\n     if dim == \"x\":\n         expected += \"1, 2, 3, 4, 5.\"\n@@ -405,7 +406,8 @@ def test_groupby_repr(obj, dim):\n def test_groupby_repr_datetime(obj):\n     actual = repr(obj.groupby(\"t.month\"))\n     expected = \"%sGroupBy\" % obj.__class__.__name__\n-    expected += \", grouped over 'month' \"\n+\n+    expected += \", grouped over 'month'\"\n     expected += \"\\n%r groups with labels \" % (len(np.unique(obj.t.dt.month)))\n     expected += \"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12.\"\n     assert actual == expected\n"
  }
}