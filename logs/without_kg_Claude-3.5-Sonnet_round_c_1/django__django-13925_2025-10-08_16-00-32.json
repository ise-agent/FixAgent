{
  "zero_patches": {
    "Location 1 (/root/hy/projects_1/django/django/db/models/base.py lines 1300-1304)": "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n",
    "Location 2 (/root/hy/projects_1/django/django/db/models/base.py lines 243-249)": "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n            return [\n                checks.Warning(\n                    f\"Auto-created primary key used when not defining a \"\n                    f\"primary key type, by default \"\n                    f\"'django.db.models.AutoField'.\",\n                    hint=(\n                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n                        f\"default_auto_field attribute to point to a subclass \"\n                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n                    ),\n                    obj=cls,\n                    id='models.W042',\n                )\n            ]\n        return []\n",
    "Location 3 (/root/hy/projects_1/django/django/db/models/base.py lines 204-207)": "\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n",
    "Location 4 (/root/hy/projects_1/django/django/db/models/fields/related_descriptors.py lines 313-316)": "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n            return [\n                checks.Warning(\n                    f\"Auto-created primary key used when not defining a \"\n                    f\"primary key type, by default \"\n                    f\"'django.db.models.AutoField'.\",\n                    hint=(\n                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n                        f\"default_auto_field attribute to point to a subclass \"\n                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n                    ),\n                    obj=cls,\n                    id='models.W042',\n                )\n            ]\n        return []\n",
    "Location 5 (/root/hy/projects_1/django/django/db/models/fields/related.py lines 914-916)": "\ndef _check_default_pk(cls, **kwargs):\n    if (\n        cls._meta.pk.auto_created and\n        not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n        not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n        not cls._meta.app_config._is_default_auto_field_overridden\n    ):\n        return [\n            checks.Warning(\n                f\"Auto-created primary key used when not defining a \"\n                f\"primary key type, by default \"\n                f\"'django.db.models.AutoField'.\",\n                hint=(\n                    f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n                    f\"{cls._meta.app_config.__class__.__qualname__}.\"\n                    f\"default_auto_field attribute to point to a subclass \"\n                    f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n                ),\n                obj=cls,\n                id='models.W042',\n            )\n        ]\n    return []\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects_1/django/django/db/models/base.py lines 1300-1304)": [
      "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n",
      "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n",
      "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n",
      "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n",
      "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n",
      "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n",
      "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n",
      "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n"
    ],
    "Location 2 (/root/hy/projects_1/django/django/db/models/base.py lines 243-249)": [
      "\n                if (\n                    cls._meta.pk.auto_created and\n                    not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n                    not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n                    not cls._meta.app_config._is_default_auto_field_overridden\n                ):\n",
      "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n            return [\n                checks.Warning(\n                    f\"Auto-created primary key used when not defining a \"\n                    f\"primary key type, by default \"\n                    f\"'django.db.models.AutoField'.\",\n                    hint=(\n                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n                        f\"default_auto_field attribute to point to a subclass \"\n                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n                    ),\n                    obj=cls,\n                    id='models.W042',\n                )\n            ]\n        return []\n",
      "\n            if (\n                cls._meta.pk.auto_created and\n                not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n                not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n                not cls._meta.app_config._is_default_auto_field_overridden\n            ):\n",
      "\n            if (\n                cls._meta.pk.auto_created and\n                not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n                not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n                not cls._meta.app_config._is_default_auto_field_overridden\n            ):\n",
      "\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n",
      "\n                if (\n                    cls._meta.pk.auto_created and\n                    not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n                    not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n                    not cls._meta.app_config._is_default_auto_field_overridden\n                ):\n",
      "\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n",
      "\n                if (\n                    cls._meta.pk.auto_created and\n                    not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n                    not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n                    not cls._meta.app_config._is_default_auto_field_overridden\n                ):\n"
    ],
    "Location 3 (/root/hy/projects_1/django/django/db/models/base.py lines 204-207)": [
      "\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n",
      "\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n",
      "\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n",
      "\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n",
      "\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n",
      "\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n",
      "\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n",
      "\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n"
    ],
    "Location 4 (/root/hy/projects_1/django/django/db/models/fields/related_descriptors.py lines 313-316)": [
      "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n            return [\n                checks.Warning(\n                    f\"Auto-created primary key used when not defining a \"\n                    f\"primary key type, by default \"\n                    f\"'django.db.models.AutoField'.\",\n                    hint=(\n                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n                        f\"default_auto_field attribute to point to a subclass \"\n                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n                    ),\n                    obj=cls,\n                    id='models.W042',\n                )\n            ]\n        return []\n",
      "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n            return [\n                checks.Warning(\n                    f\"Auto-created primary key used when not defining a \"\n                    f\"primary key type, by default \"\n                    f\"'django.db.models.AutoField'.\",\n                    hint=(\n                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n                        f\"default_auto_field attribute to point to a subclass \"\n                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n                    ),\n                    obj=cls,\n                    id='models.W042',\n                )\n            ]\n        return []\n",
      "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n            return [\n                checks.Warning(\n                    f\"Auto-created primary key used when not defining a \"\n                    f\"primary key type, by default \"\n                    f\"'django.db.models.AutoField'.\",\n                    hint=(\n                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n                        f\"default_auto_field attribute to point to a subclass \"\n                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n                    ),\n                    obj=cls,\n                    id='models.W042',\n                )\n            ]\n        return []\n",
      "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n            return [\n                checks.Warning(\n                    f\"Auto-created primary key used when not defining a \"\n                    f\"primary key type, by default \"\n                    f\"'django.db.models.AutoField'.\",\n                    hint=(\n                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n                        f\"default_auto_field attribute to point to a subclass \"\n                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n                    ),\n                    obj=cls,\n                    id='models.W042',\n                )\n            ]\n        return []\n",
      "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n            return [\n                checks.Warning(\n                    f\"Auto-created primary key used when not defining a \"\n                    f\"primary key type, by default \"\n                    f\"'django.db.models.AutoField'.\",\n                    hint=(\n                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n                        f\"default_auto_field attribute to point to a subclass \"\n                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n                    ),\n                    obj=cls,\n                    id='models.W042',\n                )\n            ]\n        return []\n",
      "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n            return [\n                checks.Warning(\n                    f\"Auto-created primary key used when not defining a \"\n                    f\"primary key type, by default \"\n                    f\"'django.db.models.AutoField'.\",\n                    hint=(\n                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n                        f\"default_auto_field attribute to point to a subclass \"\n                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n                    ),\n                    obj=cls,\n                    id='models.W042',\n                )\n            ]\n        return []\n",
      "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n            return [\n                checks.Warning(\n                    f\"Auto-created primary key used when not defining a \"\n                    f\"primary key type, by default \"\n                    f\"'django.db.models.AutoField'.\",\n                    hint=(\n                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n                        f\"default_auto_field attribute to point to a subclass \"\n                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n                    ),\n                    obj=cls,\n                    id='models.W042',\n                )\n            ]\n        return []\n",
      "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n            return [\n                checks.Warning(\n                    f\"Auto-created primary key used when not defining a \"\n                    f\"primary key type, by default \"\n                    f\"'django.db.models.AutoField'.\",\n                    hint=(\n                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n                        f\"default_auto_field attribute to point to a subclass \"\n                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n                    ),\n                    obj=cls,\n                    id='models.W042',\n                )\n            ]\n        return []\n"
    ],
    "Location 5 (/root/hy/projects_1/django/django/db/models/fields/related.py lines 914-916)": [
      "\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n            return [\n                checks.Warning(\n                    f\"Auto-created primary key used when not defining a \"\n                    f\"primary key type, by default \"\n                    f\"'django.db.models.AutoField'.\",\n                    hint=(\n                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n                        f\"default_auto_field attribute to point to a subclass \"\n                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n                    ),\n                    obj=cls,\n                    id='models.W042',\n                )\n            ]\n        return []\n",
      "\n    @classmethod\n    def _check_default_pk(cls, **kwargs):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n            return [\n                checks.Warning(\n                    f\"Auto-created primary key used when not defining a \"\n                    f\"primary key type, by default \"\n                    f\"'django.db.models.AutoField'.\",\n                    hint=(\n                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n                        f\"default_auto_field attribute to point to a subclass \"\n                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n                    ),\n                    obj=cls,\n                    id='models.W042',\n                )\n            ]\n        return []\n",
      "\ndef _check_default_pk(cls, **kwargs):\n    if (\n        cls._meta.pk.auto_created and\n        not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n        not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n        not cls._meta.app_config._is_default_auto_field_overridden\n    ):\n        return [\n            checks.Warning(\n                f\"Auto-created primary key used when not defining a \"\n                f\"primary key type, by default \"\n                f\"'django.db.models.AutoField'.\",\n                hint=(\n                    f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n                    f\"{cls._meta.app_config.__class__.__qualname__}.\"\n                    f\"default_auto_field attribute to point to a subclass \"\n                    f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n                ),\n                obj=cls,\n                id='models.W042',\n            )\n        ]\n    return []\n",
      "\ndef _check_default_pk(cls, **kwargs):\n    if (\n        cls._meta.pk.auto_created and\n        not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n        not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n        not cls._meta.app_config._is_default_auto_field_overridden\n    ):\n        return [\n            checks.Warning(\n                f\"Auto-created primary key used when not defining a \"\n                f\"primary key type, by default \"\n                f\"'django.db.models.AutoField'.\",\n                hint=(\n                    f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n                    f\"{cls._meta.app_config.__class__.__qualname__}.default_auto_field \"\n                    f\"attribute to point to a subclass of AutoField, e.g. \"\n                    f\"'django.db.models.BigAutoField'.\"\n                ),\n                obj=cls,\n                id='models.W042',\n            )\n        ]\n    return []\n",
      "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n            return [\n                checks.Warning(\n                    f\"Auto-created primary key used when not defining a \"\n                    f\"primary key type, by default \"\n                    f\"'django.db.models.AutoField'.\",\n                    hint=(\n                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n                        f\"default_auto_field attribute to point to a subclass \"\n                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n                    ),\n                    obj=cls,\n                    id='models.W042',\n                )\n            ]\n        return []\n",
      "\n    @classmethod\n    def _check_default_pk(cls, **kwargs):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n            return [\n                checks.Warning(\n                    f\"Auto-created primary key used when not defining a \"\n                    f\"primary key type, by default \"\n                    f\"'django.db.models.AutoField'.\",\n                    hint=(\n                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n                        f\"default_auto_field attribute to point to a subclass \"\n                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n                    ),\n                    obj=cls,\n                    id='models.W042',\n                )\n            ]\n        return []\n",
      "\ndef _check_default_pk(cls, **kwargs):\n    if (\n        cls._meta.pk.auto_created and\n        not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n        not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n        not cls._meta.app_config._is_default_auto_field_overridden\n    ):\n        return [\n            checks.Warning(\n                f\"Auto-created primary key used when not defining a \"\n                f\"primary key type, by default \"\n                f\"'django.db.models.AutoField'.\",\n                hint=(\n                    f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n                    f\"{cls._meta.app_config.__class__.__qualname__}.\"\n                    f\"default_auto_field attribute to point to a subclass \"\n                    f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n                ),\n                obj=cls,\n                id='models.W042',\n            )\n        ]\n    return []\n",
      "\n    @classmethod\n    def _check_default_pk(cls):\n        if (\n            cls._meta.pk.auto_created and\n            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n            not cls._meta.app_config._is_default_auto_field_overridden\n        ):\n            return [\n                checks.Warning(\n                    f\"Auto-created primary key used when not defining a \"\n                    f\"primary key type, by default \"\n                    f\"'django.db.models.AutoField'.\",\n                    hint=(\n                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n                        f\"default_auto_field attribute to point to a subclass \"\n                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n                    ),\n                    obj=cls,\n                    id='models.W042',\n                )\n            ]\n        return []\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 4038859cfa..509e046c3e 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -201,6 +201,7 @@ class ModelBase(type):\n             if base != new_class and not base._meta.abstract:\n                 continue\n             # Locate OneToOneField instances.\n+\n             for field in base._meta.local_fields:\n                 if isinstance(field, OneToOneField) and field.remote_field.parent_link:\n                     related = resolve_relation(new_class, field.remote_field.model)\n@@ -240,6 +241,7 @@ class ModelBase(type):\n                     field = parent_links[base_key]\n                 elif not is_proxy:\n                     attr_name = '%s_ptr' % base._meta.model_name\n+\n                     field = OneToOneField(\n                         base,\n                         on_delete=CASCADE,\n@@ -1297,8 +1299,10 @@ class Model(metaclass=ModelBase):\n \n     @classmethod\n     def _check_default_pk(cls):\n+\n         if (\n             cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n             not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n             not cls._meta.app_config._is_default_auto_field_overridden\n         ):\ndiff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 899ae8efe8..0fd868d031 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -911,6 +911,7 @@ class ForeignKey(ForeignObject):\n         )]\n \n     def validate(self, value, model_instance):\n+\n         if self.remote_field.parent_link:\n             return\n         super().validate(value, model_instance)\ndiff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 872a4c98dc..db401f5ae0 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -310,6 +310,7 @@ class ForwardOneToOneDescriptor(ForwardManyToOneDescriptor):\n         super().__set__(instance, value)\n         # If the primary key is a link to a parent model and a parent instance\n         # is being set, update the value of the inherited pk(s).\n+\n         if self.field.primary_key and self.field.remote_field.parent_link:\n             opts = instance._meta\n             # Inherited primary key fields from this object's base classes.\n",
    "variant_0": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 4038859cfa..5a99c0fa52 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -201,10 +201,13 @@ class ModelBase(type):\n             if base != new_class and not base._meta.abstract:\n                 continue\n             # Locate OneToOneField instances.\n-            for field in base._meta.local_fields:\n-                if isinstance(field, OneToOneField) and field.remote_field.parent_link:\n-                    related = resolve_relation(new_class, field.remote_field.model)\n-                    parent_links[make_model_tuple(related)] = field\n+\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n \n         # Track fields inherited from base models.\n         inherited_attributes = set()\n@@ -240,13 +243,31 @@ class ModelBase(type):\n                     field = parent_links[base_key]\n                 elif not is_proxy:\n                     attr_name = '%s_ptr' % base._meta.model_name\n-                    field = OneToOneField(\n-                        base,\n-                        on_delete=CASCADE,\n-                        name=attr_name,\n-                        auto_created=True,\n-                        parent_link=True,\n-                    )\n+\n+    @classmethod\n+    def _check_default_pk(cls):\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n+            return [\n+                checks.Warning(\n+                    f\"Auto-created primary key used when not defining a \"\n+                    f\"primary key type, by default \"\n+                    f\"'django.db.models.AutoField'.\",\n+                    hint=(\n+                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n+                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n+                        f\"default_auto_field attribute to point to a subclass \"\n+                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n+                    ),\n+                    obj=cls,\n+                    id='models.W042',\n+                )\n+            ]\n+        return []\n \n                     if attr_name in field_names:\n                         raise FieldError(\n@@ -1295,10 +1316,14 @@ class Model(metaclass=ModelBase):\n \n         return errors\n \n+    @classmethod\n+    def _check_default_pk(cls):\n+\n     @classmethod\n     def _check_default_pk(cls):\n         if (\n             cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n             not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n             not cls._meta.app_config._is_default_auto_field_overridden\n         ):\ndiff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 899ae8efe8..1ecf04a7d4 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -911,9 +911,30 @@ class ForeignKey(ForeignObject):\n         )]\n \n     def validate(self, value, model_instance):\n-        if self.remote_field.parent_link:\n-            return\n-        super().validate(value, model_instance)\n+\n+def _check_default_pk(cls, **kwargs):\n+    if (\n+        cls._meta.pk.auto_created and\n+        not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+        not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+        not cls._meta.app_config._is_default_auto_field_overridden\n+    ):\n+        return [\n+            checks.Warning(\n+                f\"Auto-created primary key used when not defining a \"\n+                f\"primary key type, by default \"\n+                f\"'django.db.models.AutoField'.\",\n+                hint=(\n+                    f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n+                    f\"{cls._meta.app_config.__class__.__qualname__}.\"\n+                    f\"default_auto_field attribute to point to a subclass \"\n+                    f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n+                ),\n+                obj=cls,\n+                id='models.W042',\n+            )\n+        ]\n+    return []\n         if value is None:\n             return\n \ndiff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 872a4c98dc..f4c56f8434 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -310,10 +310,31 @@ class ForwardOneToOneDescriptor(ForwardManyToOneDescriptor):\n         super().__set__(instance, value)\n         # If the primary key is a link to a parent model and a parent instance\n         # is being set, update the value of the inherited pk(s).\n-        if self.field.primary_key and self.field.remote_field.parent_link:\n-            opts = instance._meta\n-            # Inherited primary key fields from this object's base classes.\n-            inherited_pk_fields = [\n+\n+    @classmethod\n+    def _check_default_pk(cls):\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n+            return [\n+                checks.Warning(\n+                    f\"Auto-created primary key used when not defining a \"\n+                    f\"primary key type, by default \"\n+                    f\"'django.db.models.AutoField'.\",\n+                    hint=(\n+                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n+                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n+                        f\"default_auto_field attribute to point to a subclass \"\n+                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n+                    ),\n+                    obj=cls,\n+                    id='models.W042',\n+                )\n+            ]\n+        return []\n                 field for field in opts.concrete_fields\n                 if field.primary_key and field.remote_field\n             ]\n",
    "variant_1": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 4038859cfa..ab907d3968 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -201,10 +201,13 @@ class ModelBase(type):\n             if base != new_class and not base._meta.abstract:\n                 continue\n             # Locate OneToOneField instances.\n-            for field in base._meta.local_fields:\n-                if isinstance(field, OneToOneField) and field.remote_field.parent_link:\n-                    related = resolve_relation(new_class, field.remote_field.model)\n-                    parent_links[make_model_tuple(related)] = field\n+\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n \n         # Track fields inherited from base models.\n         inherited_attributes = set()\n@@ -240,13 +243,13 @@ class ModelBase(type):\n                     field = parent_links[base_key]\n                 elif not is_proxy:\n                     attr_name = '%s_ptr' % base._meta.model_name\n-                    field = OneToOneField(\n-                        base,\n-                        on_delete=CASCADE,\n-                        name=attr_name,\n-                        auto_created=True,\n-                        parent_link=True,\n-                    )\n+\n+                if (\n+                    cls._meta.pk.auto_created and\n+                    not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+                    not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+                    not cls._meta.app_config._is_default_auto_field_overridden\n+                ):\n \n                     if attr_name in field_names:\n                         raise FieldError(\n@@ -1295,10 +1298,14 @@ class Model(metaclass=ModelBase):\n \n         return errors\n \n+    @classmethod\n+    def _check_default_pk(cls):\n+\n     @classmethod\n     def _check_default_pk(cls):\n         if (\n             cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n             not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n             not cls._meta.app_config._is_default_auto_field_overridden\n         ):\ndiff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 899ae8efe8..d487c1ddf7 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -911,9 +911,30 @@ class ForeignKey(ForeignObject):\n         )]\n \n     def validate(self, value, model_instance):\n-        if self.remote_field.parent_link:\n-            return\n-        super().validate(value, model_instance)\n+\n+    def _check_default_pk(cls):\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n+            return [\n+                checks.Warning(\n+                    f\"Auto-created primary key used when not defining a \"\n+                    f\"primary key type, by default \"\n+                    f\"'django.db.models.AutoField'.\",\n+                    hint=(\n+                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n+                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n+                        f\"default_auto_field attribute to point to a subclass \"\n+                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n+                    ),\n+                    obj=cls,\n+                    id='models.W042',\n+                )\n+            ]\n+        return []\n         if value is None:\n             return\n \ndiff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 872a4c98dc..f4c56f8434 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -310,10 +310,31 @@ class ForwardOneToOneDescriptor(ForwardManyToOneDescriptor):\n         super().__set__(instance, value)\n         # If the primary key is a link to a parent model and a parent instance\n         # is being set, update the value of the inherited pk(s).\n-        if self.field.primary_key and self.field.remote_field.parent_link:\n-            opts = instance._meta\n-            # Inherited primary key fields from this object's base classes.\n-            inherited_pk_fields = [\n+\n+    @classmethod\n+    def _check_default_pk(cls):\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n+            return [\n+                checks.Warning(\n+                    f\"Auto-created primary key used when not defining a \"\n+                    f\"primary key type, by default \"\n+                    f\"'django.db.models.AutoField'.\",\n+                    hint=(\n+                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n+                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n+                        f\"default_auto_field attribute to point to a subclass \"\n+                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n+                    ),\n+                    obj=cls,\n+                    id='models.W042',\n+                )\n+            ]\n+        return []\n                 field for field in opts.concrete_fields\n                 if field.primary_key and field.remote_field\n             ]\n",
    "variant_2": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 4038859cfa..5a99c0fa52 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -201,10 +201,13 @@ class ModelBase(type):\n             if base != new_class and not base._meta.abstract:\n                 continue\n             # Locate OneToOneField instances.\n-            for field in base._meta.local_fields:\n-                if isinstance(field, OneToOneField) and field.remote_field.parent_link:\n-                    related = resolve_relation(new_class, field.remote_field.model)\n-                    parent_links[make_model_tuple(related)] = field\n+\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n \n         # Track fields inherited from base models.\n         inherited_attributes = set()\n@@ -240,13 +243,31 @@ class ModelBase(type):\n                     field = parent_links[base_key]\n                 elif not is_proxy:\n                     attr_name = '%s_ptr' % base._meta.model_name\n-                    field = OneToOneField(\n-                        base,\n-                        on_delete=CASCADE,\n-                        name=attr_name,\n-                        auto_created=True,\n-                        parent_link=True,\n-                    )\n+\n+    @classmethod\n+    def _check_default_pk(cls):\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n+            return [\n+                checks.Warning(\n+                    f\"Auto-created primary key used when not defining a \"\n+                    f\"primary key type, by default \"\n+                    f\"'django.db.models.AutoField'.\",\n+                    hint=(\n+                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n+                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n+                        f\"default_auto_field attribute to point to a subclass \"\n+                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n+                    ),\n+                    obj=cls,\n+                    id='models.W042',\n+                )\n+            ]\n+        return []\n \n                     if attr_name in field_names:\n                         raise FieldError(\n@@ -1295,10 +1316,14 @@ class Model(metaclass=ModelBase):\n \n         return errors\n \n+    @classmethod\n+    def _check_default_pk(cls):\n+\n     @classmethod\n     def _check_default_pk(cls):\n         if (\n             cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n             not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n             not cls._meta.app_config._is_default_auto_field_overridden\n         ):\ndiff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 899ae8efe8..88c297b940 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -911,9 +911,31 @@ class ForeignKey(ForeignObject):\n         )]\n \n     def validate(self, value, model_instance):\n-        if self.remote_field.parent_link:\n-            return\n-        super().validate(value, model_instance)\n+\n+    @classmethod\n+    def _check_default_pk(cls, **kwargs):\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n+            return [\n+                checks.Warning(\n+                    f\"Auto-created primary key used when not defining a \"\n+                    f\"primary key type, by default \"\n+                    f\"'django.db.models.AutoField'.\",\n+                    hint=(\n+                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n+                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n+                        f\"default_auto_field attribute to point to a subclass \"\n+                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n+                    ),\n+                    obj=cls,\n+                    id='models.W042',\n+                )\n+            ]\n+        return []\n         if value is None:\n             return\n \ndiff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 872a4c98dc..f4c56f8434 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -310,10 +310,31 @@ class ForwardOneToOneDescriptor(ForwardManyToOneDescriptor):\n         super().__set__(instance, value)\n         # If the primary key is a link to a parent model and a parent instance\n         # is being set, update the value of the inherited pk(s).\n-        if self.field.primary_key and self.field.remote_field.parent_link:\n-            opts = instance._meta\n-            # Inherited primary key fields from this object's base classes.\n-            inherited_pk_fields = [\n+\n+    @classmethod\n+    def _check_default_pk(cls):\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n+            return [\n+                checks.Warning(\n+                    f\"Auto-created primary key used when not defining a \"\n+                    f\"primary key type, by default \"\n+                    f\"'django.db.models.AutoField'.\",\n+                    hint=(\n+                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n+                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n+                        f\"default_auto_field attribute to point to a subclass \"\n+                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n+                    ),\n+                    obj=cls,\n+                    id='models.W042',\n+                )\n+            ]\n+        return []\n                 field for field in opts.concrete_fields\n                 if field.primary_key and field.remote_field\n             ]\n",
    "variant_3": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 4038859cfa..3b7ed9b974 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -201,10 +201,13 @@ class ModelBase(type):\n             if base != new_class and not base._meta.abstract:\n                 continue\n             # Locate OneToOneField instances.\n-            for field in base._meta.local_fields:\n-                if isinstance(field, OneToOneField) and field.remote_field.parent_link:\n-                    related = resolve_relation(new_class, field.remote_field.model)\n-                    parent_links[make_model_tuple(related)] = field\n+\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n \n         # Track fields inherited from base models.\n         inherited_attributes = set()\n@@ -240,13 +243,13 @@ class ModelBase(type):\n                     field = parent_links[base_key]\n                 elif not is_proxy:\n                     attr_name = '%s_ptr' % base._meta.model_name\n-                    field = OneToOneField(\n-                        base,\n-                        on_delete=CASCADE,\n-                        name=attr_name,\n-                        auto_created=True,\n-                        parent_link=True,\n-                    )\n+\n+            if (\n+                cls._meta.pk.auto_created and\n+                not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+                not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+                not cls._meta.app_config._is_default_auto_field_overridden\n+            ):\n \n                     if attr_name in field_names:\n                         raise FieldError(\n@@ -1295,10 +1298,14 @@ class Model(metaclass=ModelBase):\n \n         return errors\n \n+    @classmethod\n+    def _check_default_pk(cls):\n+\n     @classmethod\n     def _check_default_pk(cls):\n         if (\n             cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n             not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n             not cls._meta.app_config._is_default_auto_field_overridden\n         ):\ndiff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 899ae8efe8..1ecf04a7d4 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -911,9 +911,30 @@ class ForeignKey(ForeignObject):\n         )]\n \n     def validate(self, value, model_instance):\n-        if self.remote_field.parent_link:\n-            return\n-        super().validate(value, model_instance)\n+\n+def _check_default_pk(cls, **kwargs):\n+    if (\n+        cls._meta.pk.auto_created and\n+        not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+        not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+        not cls._meta.app_config._is_default_auto_field_overridden\n+    ):\n+        return [\n+            checks.Warning(\n+                f\"Auto-created primary key used when not defining a \"\n+                f\"primary key type, by default \"\n+                f\"'django.db.models.AutoField'.\",\n+                hint=(\n+                    f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n+                    f\"{cls._meta.app_config.__class__.__qualname__}.\"\n+                    f\"default_auto_field attribute to point to a subclass \"\n+                    f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n+                ),\n+                obj=cls,\n+                id='models.W042',\n+            )\n+        ]\n+    return []\n         if value is None:\n             return\n \ndiff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 872a4c98dc..f4c56f8434 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -310,10 +310,31 @@ class ForwardOneToOneDescriptor(ForwardManyToOneDescriptor):\n         super().__set__(instance, value)\n         # If the primary key is a link to a parent model and a parent instance\n         # is being set, update the value of the inherited pk(s).\n-        if self.field.primary_key and self.field.remote_field.parent_link:\n-            opts = instance._meta\n-            # Inherited primary key fields from this object's base classes.\n-            inherited_pk_fields = [\n+\n+    @classmethod\n+    def _check_default_pk(cls):\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n+            return [\n+                checks.Warning(\n+                    f\"Auto-created primary key used when not defining a \"\n+                    f\"primary key type, by default \"\n+                    f\"'django.db.models.AutoField'.\",\n+                    hint=(\n+                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n+                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n+                        f\"default_auto_field attribute to point to a subclass \"\n+                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n+                    ),\n+                    obj=cls,\n+                    id='models.W042',\n+                )\n+            ]\n+        return []\n                 field for field in opts.concrete_fields\n                 if field.primary_key and field.remote_field\n             ]\n",
    "variant_4": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 4038859cfa..3b7ed9b974 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -201,10 +201,13 @@ class ModelBase(type):\n             if base != new_class and not base._meta.abstract:\n                 continue\n             # Locate OneToOneField instances.\n-            for field in base._meta.local_fields:\n-                if isinstance(field, OneToOneField) and field.remote_field.parent_link:\n-                    related = resolve_relation(new_class, field.remote_field.model)\n-                    parent_links[make_model_tuple(related)] = field\n+\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n \n         # Track fields inherited from base models.\n         inherited_attributes = set()\n@@ -240,13 +243,13 @@ class ModelBase(type):\n                     field = parent_links[base_key]\n                 elif not is_proxy:\n                     attr_name = '%s_ptr' % base._meta.model_name\n-                    field = OneToOneField(\n-                        base,\n-                        on_delete=CASCADE,\n-                        name=attr_name,\n-                        auto_created=True,\n-                        parent_link=True,\n-                    )\n+\n+            if (\n+                cls._meta.pk.auto_created and\n+                not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+                not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+                not cls._meta.app_config._is_default_auto_field_overridden\n+            ):\n \n                     if attr_name in field_names:\n                         raise FieldError(\n@@ -1295,10 +1298,14 @@ class Model(metaclass=ModelBase):\n \n         return errors\n \n+    @classmethod\n+    def _check_default_pk(cls):\n+\n     @classmethod\n     def _check_default_pk(cls):\n         if (\n             cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n             not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n             not cls._meta.app_config._is_default_auto_field_overridden\n         ):\ndiff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 899ae8efe8..7895e64ee5 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -911,9 +911,30 @@ class ForeignKey(ForeignObject):\n         )]\n \n     def validate(self, value, model_instance):\n-        if self.remote_field.parent_link:\n-            return\n-        super().validate(value, model_instance)\n+\n+def _check_default_pk(cls, **kwargs):\n+    if (\n+        cls._meta.pk.auto_created and\n+        not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+        not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+        not cls._meta.app_config._is_default_auto_field_overridden\n+    ):\n+        return [\n+            checks.Warning(\n+                f\"Auto-created primary key used when not defining a \"\n+                f\"primary key type, by default \"\n+                f\"'django.db.models.AutoField'.\",\n+                hint=(\n+                    f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n+                    f\"{cls._meta.app_config.__class__.__qualname__}.default_auto_field \"\n+                    f\"attribute to point to a subclass of AutoField, e.g. \"\n+                    f\"'django.db.models.BigAutoField'.\"\n+                ),\n+                obj=cls,\n+                id='models.W042',\n+            )\n+        ]\n+    return []\n         if value is None:\n             return\n \ndiff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 872a4c98dc..f4c56f8434 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -310,10 +310,31 @@ class ForwardOneToOneDescriptor(ForwardManyToOneDescriptor):\n         super().__set__(instance, value)\n         # If the primary key is a link to a parent model and a parent instance\n         # is being set, update the value of the inherited pk(s).\n-        if self.field.primary_key and self.field.remote_field.parent_link:\n-            opts = instance._meta\n-            # Inherited primary key fields from this object's base classes.\n-            inherited_pk_fields = [\n+\n+    @classmethod\n+    def _check_default_pk(cls):\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n+            return [\n+                checks.Warning(\n+                    f\"Auto-created primary key used when not defining a \"\n+                    f\"primary key type, by default \"\n+                    f\"'django.db.models.AutoField'.\",\n+                    hint=(\n+                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n+                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n+                        f\"default_auto_field attribute to point to a subclass \"\n+                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n+                    ),\n+                    obj=cls,\n+                    id='models.W042',\n+                )\n+            ]\n+        return []\n                 field for field in opts.concrete_fields\n                 if field.primary_key and field.remote_field\n             ]\n",
    "variant_5": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 4038859cfa..4c4b081183 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -201,10 +201,13 @@ class ModelBase(type):\n             if base != new_class and not base._meta.abstract:\n                 continue\n             # Locate OneToOneField instances.\n-            for field in base._meta.local_fields:\n-                if isinstance(field, OneToOneField) and field.remote_field.parent_link:\n-                    related = resolve_relation(new_class, field.remote_field.model)\n-                    parent_links[make_model_tuple(related)] = field\n+\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n \n         # Track fields inherited from base models.\n         inherited_attributes = set()\n@@ -240,13 +243,13 @@ class ModelBase(type):\n                     field = parent_links[base_key]\n                 elif not is_proxy:\n                     attr_name = '%s_ptr' % base._meta.model_name\n-                    field = OneToOneField(\n-                        base,\n-                        on_delete=CASCADE,\n-                        name=attr_name,\n-                        auto_created=True,\n-                        parent_link=True,\n-                    )\n+\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n \n                     if attr_name in field_names:\n                         raise FieldError(\n@@ -1295,10 +1298,14 @@ class Model(metaclass=ModelBase):\n \n         return errors\n \n+    @classmethod\n+    def _check_default_pk(cls):\n+\n     @classmethod\n     def _check_default_pk(cls):\n         if (\n             cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n             not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n             not cls._meta.app_config._is_default_auto_field_overridden\n         ):\ndiff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 899ae8efe8..dd707c25c8 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -911,9 +911,31 @@ class ForeignKey(ForeignObject):\n         )]\n \n     def validate(self, value, model_instance):\n-        if self.remote_field.parent_link:\n-            return\n-        super().validate(value, model_instance)\n+\n+    @classmethod\n+    def _check_default_pk(cls):\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n+            return [\n+                checks.Warning(\n+                    f\"Auto-created primary key used when not defining a \"\n+                    f\"primary key type, by default \"\n+                    f\"'django.db.models.AutoField'.\",\n+                    hint=(\n+                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n+                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n+                        f\"default_auto_field attribute to point to a subclass \"\n+                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n+                    ),\n+                    obj=cls,\n+                    id='models.W042',\n+                )\n+            ]\n+        return []\n         if value is None:\n             return\n \ndiff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 872a4c98dc..f4c56f8434 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -310,10 +310,31 @@ class ForwardOneToOneDescriptor(ForwardManyToOneDescriptor):\n         super().__set__(instance, value)\n         # If the primary key is a link to a parent model and a parent instance\n         # is being set, update the value of the inherited pk(s).\n-        if self.field.primary_key and self.field.remote_field.parent_link:\n-            opts = instance._meta\n-            # Inherited primary key fields from this object's base classes.\n-            inherited_pk_fields = [\n+\n+    @classmethod\n+    def _check_default_pk(cls):\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n+            return [\n+                checks.Warning(\n+                    f\"Auto-created primary key used when not defining a \"\n+                    f\"primary key type, by default \"\n+                    f\"'django.db.models.AutoField'.\",\n+                    hint=(\n+                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n+                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n+                        f\"default_auto_field attribute to point to a subclass \"\n+                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n+                    ),\n+                    obj=cls,\n+                    id='models.W042',\n+                )\n+            ]\n+        return []\n                 field for field in opts.concrete_fields\n                 if field.primary_key and field.remote_field\n             ]\n",
    "variant_6": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 4038859cfa..ab907d3968 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -201,10 +201,13 @@ class ModelBase(type):\n             if base != new_class and not base._meta.abstract:\n                 continue\n             # Locate OneToOneField instances.\n-            for field in base._meta.local_fields:\n-                if isinstance(field, OneToOneField) and field.remote_field.parent_link:\n-                    related = resolve_relation(new_class, field.remote_field.model)\n-                    parent_links[make_model_tuple(related)] = field\n+\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n \n         # Track fields inherited from base models.\n         inherited_attributes = set()\n@@ -240,13 +243,13 @@ class ModelBase(type):\n                     field = parent_links[base_key]\n                 elif not is_proxy:\n                     attr_name = '%s_ptr' % base._meta.model_name\n-                    field = OneToOneField(\n-                        base,\n-                        on_delete=CASCADE,\n-                        name=attr_name,\n-                        auto_created=True,\n-                        parent_link=True,\n-                    )\n+\n+                if (\n+                    cls._meta.pk.auto_created and\n+                    not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+                    not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+                    not cls._meta.app_config._is_default_auto_field_overridden\n+                ):\n \n                     if attr_name in field_names:\n                         raise FieldError(\n@@ -1295,10 +1298,14 @@ class Model(metaclass=ModelBase):\n \n         return errors\n \n+    @classmethod\n+    def _check_default_pk(cls):\n+\n     @classmethod\n     def _check_default_pk(cls):\n         if (\n             cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n             not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n             not cls._meta.app_config._is_default_auto_field_overridden\n         ):\ndiff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 899ae8efe8..88c297b940 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -911,9 +911,31 @@ class ForeignKey(ForeignObject):\n         )]\n \n     def validate(self, value, model_instance):\n-        if self.remote_field.parent_link:\n-            return\n-        super().validate(value, model_instance)\n+\n+    @classmethod\n+    def _check_default_pk(cls, **kwargs):\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n+            return [\n+                checks.Warning(\n+                    f\"Auto-created primary key used when not defining a \"\n+                    f\"primary key type, by default \"\n+                    f\"'django.db.models.AutoField'.\",\n+                    hint=(\n+                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n+                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n+                        f\"default_auto_field attribute to point to a subclass \"\n+                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n+                    ),\n+                    obj=cls,\n+                    id='models.W042',\n+                )\n+            ]\n+        return []\n         if value is None:\n             return\n \ndiff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 872a4c98dc..f4c56f8434 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -310,10 +310,31 @@ class ForwardOneToOneDescriptor(ForwardManyToOneDescriptor):\n         super().__set__(instance, value)\n         # If the primary key is a link to a parent model and a parent instance\n         # is being set, update the value of the inherited pk(s).\n-        if self.field.primary_key and self.field.remote_field.parent_link:\n-            opts = instance._meta\n-            # Inherited primary key fields from this object's base classes.\n-            inherited_pk_fields = [\n+\n+    @classmethod\n+    def _check_default_pk(cls):\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n+            return [\n+                checks.Warning(\n+                    f\"Auto-created primary key used when not defining a \"\n+                    f\"primary key type, by default \"\n+                    f\"'django.db.models.AutoField'.\",\n+                    hint=(\n+                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n+                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n+                        f\"default_auto_field attribute to point to a subclass \"\n+                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n+                    ),\n+                    obj=cls,\n+                    id='models.W042',\n+                )\n+            ]\n+        return []\n                 field for field in opts.concrete_fields\n                 if field.primary_key and field.remote_field\n             ]\n",
    "variant_7": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 4038859cfa..4c4b081183 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -201,10 +201,13 @@ class ModelBase(type):\n             if base != new_class and not base._meta.abstract:\n                 continue\n             # Locate OneToOneField instances.\n-            for field in base._meta.local_fields:\n-                if isinstance(field, OneToOneField) and field.remote_field.parent_link:\n-                    related = resolve_relation(new_class, field.remote_field.model)\n-                    parent_links[make_model_tuple(related)] = field\n+\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n \n         # Track fields inherited from base models.\n         inherited_attributes = set()\n@@ -240,13 +243,13 @@ class ModelBase(type):\n                     field = parent_links[base_key]\n                 elif not is_proxy:\n                     attr_name = '%s_ptr' % base._meta.model_name\n-                    field = OneToOneField(\n-                        base,\n-                        on_delete=CASCADE,\n-                        name=attr_name,\n-                        auto_created=True,\n-                        parent_link=True,\n-                    )\n+\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n \n                     if attr_name in field_names:\n                         raise FieldError(\n@@ -1295,10 +1298,14 @@ class Model(metaclass=ModelBase):\n \n         return errors\n \n+    @classmethod\n+    def _check_default_pk(cls):\n+\n     @classmethod\n     def _check_default_pk(cls):\n         if (\n             cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n             not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n             not cls._meta.app_config._is_default_auto_field_overridden\n         ):\ndiff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 899ae8efe8..1ecf04a7d4 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -911,9 +911,30 @@ class ForeignKey(ForeignObject):\n         )]\n \n     def validate(self, value, model_instance):\n-        if self.remote_field.parent_link:\n-            return\n-        super().validate(value, model_instance)\n+\n+def _check_default_pk(cls, **kwargs):\n+    if (\n+        cls._meta.pk.auto_created and\n+        not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+        not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+        not cls._meta.app_config._is_default_auto_field_overridden\n+    ):\n+        return [\n+            checks.Warning(\n+                f\"Auto-created primary key used when not defining a \"\n+                f\"primary key type, by default \"\n+                f\"'django.db.models.AutoField'.\",\n+                hint=(\n+                    f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n+                    f\"{cls._meta.app_config.__class__.__qualname__}.\"\n+                    f\"default_auto_field attribute to point to a subclass \"\n+                    f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n+                ),\n+                obj=cls,\n+                id='models.W042',\n+            )\n+        ]\n+    return []\n         if value is None:\n             return\n \ndiff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 872a4c98dc..f4c56f8434 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -310,10 +310,31 @@ class ForwardOneToOneDescriptor(ForwardManyToOneDescriptor):\n         super().__set__(instance, value)\n         # If the primary key is a link to a parent model and a parent instance\n         # is being set, update the value of the inherited pk(s).\n-        if self.field.primary_key and self.field.remote_field.parent_link:\n-            opts = instance._meta\n-            # Inherited primary key fields from this object's base classes.\n-            inherited_pk_fields = [\n+\n+    @classmethod\n+    def _check_default_pk(cls):\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n+            return [\n+                checks.Warning(\n+                    f\"Auto-created primary key used when not defining a \"\n+                    f\"primary key type, by default \"\n+                    f\"'django.db.models.AutoField'.\",\n+                    hint=(\n+                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n+                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n+                        f\"default_auto_field attribute to point to a subclass \"\n+                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n+                    ),\n+                    obj=cls,\n+                    id='models.W042',\n+                )\n+            ]\n+        return []\n                 field for field in opts.concrete_fields\n                 if field.primary_key and field.remote_field\n             ]\n",
    "variant_8": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 4038859cfa..ab907d3968 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -201,10 +201,13 @@ class ModelBase(type):\n             if base != new_class and not base._meta.abstract:\n                 continue\n             # Locate OneToOneField instances.\n-            for field in base._meta.local_fields:\n-                if isinstance(field, OneToOneField) and field.remote_field.parent_link:\n-                    related = resolve_relation(new_class, field.remote_field.model)\n-                    parent_links[make_model_tuple(related)] = field\n+\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n \n         # Track fields inherited from base models.\n         inherited_attributes = set()\n@@ -240,13 +243,13 @@ class ModelBase(type):\n                     field = parent_links[base_key]\n                 elif not is_proxy:\n                     attr_name = '%s_ptr' % base._meta.model_name\n-                    field = OneToOneField(\n-                        base,\n-                        on_delete=CASCADE,\n-                        name=attr_name,\n-                        auto_created=True,\n-                        parent_link=True,\n-                    )\n+\n+                if (\n+                    cls._meta.pk.auto_created and\n+                    not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+                    not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+                    not cls._meta.app_config._is_default_auto_field_overridden\n+                ):\n \n                     if attr_name in field_names:\n                         raise FieldError(\n@@ -1295,10 +1298,14 @@ class Model(metaclass=ModelBase):\n \n         return errors\n \n+    @classmethod\n+    def _check_default_pk(cls):\n+\n     @classmethod\n     def _check_default_pk(cls):\n         if (\n             cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n             not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n             not cls._meta.app_config._is_default_auto_field_overridden\n         ):\ndiff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 899ae8efe8..dd707c25c8 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -911,9 +911,31 @@ class ForeignKey(ForeignObject):\n         )]\n \n     def validate(self, value, model_instance):\n-        if self.remote_field.parent_link:\n-            return\n-        super().validate(value, model_instance)\n+\n+    @classmethod\n+    def _check_default_pk(cls):\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n+            return [\n+                checks.Warning(\n+                    f\"Auto-created primary key used when not defining a \"\n+                    f\"primary key type, by default \"\n+                    f\"'django.db.models.AutoField'.\",\n+                    hint=(\n+                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n+                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n+                        f\"default_auto_field attribute to point to a subclass \"\n+                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n+                    ),\n+                    obj=cls,\n+                    id='models.W042',\n+                )\n+            ]\n+        return []\n         if value is None:\n             return\n \ndiff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 872a4c98dc..f4c56f8434 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -310,10 +310,31 @@ class ForwardOneToOneDescriptor(ForwardManyToOneDescriptor):\n         super().__set__(instance, value)\n         # If the primary key is a link to a parent model and a parent instance\n         # is being set, update the value of the inherited pk(s).\n-        if self.field.primary_key and self.field.remote_field.parent_link:\n-            opts = instance._meta\n-            # Inherited primary key fields from this object's base classes.\n-            inherited_pk_fields = [\n+\n+    @classmethod\n+    def _check_default_pk(cls):\n+        if (\n+            cls._meta.pk.auto_created and\n+            not (hasattr(cls._meta.pk, 'remote_field') and cls._meta.pk.remote_field and cls._meta.pk.remote_field.parent_link) and\n+            not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n+            not cls._meta.app_config._is_default_auto_field_overridden\n+        ):\n+            return [\n+                checks.Warning(\n+                    f\"Auto-created primary key used when not defining a \"\n+                    f\"primary key type, by default \"\n+                    f\"'django.db.models.AutoField'.\",\n+                    hint=(\n+                        f\"Configure the DEFAULT_AUTO_FIELD setting or the \"\n+                        f\"{cls._meta.app_config.__class__.__qualname__}.\"\n+                        f\"default_auto_field attribute to point to a subclass \"\n+                        f\"of AutoField, e.g. 'django.db.models.BigAutoField'.\"\n+                    ),\n+                    obj=cls,\n+                    id='models.W042',\n+                )\n+            ]\n+        return []\n                 field for field in opts.concrete_fields\n                 if field.primary_key and field.remote_field\n             ]\n"
  }
}