{
  "zero_patches": {
    "Location 1 (/root/hy/projects_4/django/django/conf/global_settings.py lines 307-307)": "\nFILE_UPLOAD_PERMISSIONS = 0o644\n",
    "Location 2 (/root/hy/projects_4/django/django/core/files/storage.py lines 283-284)": "\n        if self.file_permissions_mode is not None:\n            os.chmod(full_path, self.file_permissions_mode)\n",
    "Location 3 (/root/hy/projects_4/django/django/core/files/move.py lines 70-77)": "\n# File upload permissions mode\nFILE_UPLOAD_PERMISSIONS = 0o644\n",
    "Location 4 (/root/hy/projects_4/django/django/core/files/storage.py lines 254-255)": "\n                # This file has a file path that we can move.\n                if hasattr(content, 'temporary_file_path'):\n                    file_move_safe(content.temporary_file_path(), full_path)\n",
    "Location 5 (/root/hy/projects_4/django/django/core/files/storage.py lines 258-274)": "\n                # This is a normal uploadedfile that we can stream.\n                else:\n                    # The current umask value is masked out by os.open!\n                    fd = os.open(full_path, self.OS_OPEN_FLAGS, 0o666)\n                    _file = None\n                    try:\n                        locks.lock(fd, locks.LOCK_EX)\n                        for chunk in content.chunks():\n                            if _file is None:\n                                mode = 'wb' if isinstance(chunk, bytes) else 'wt'\n                                _file = os.fdopen(fd, mode)\n                            _file.write(chunk)\n                    finally:\n                        locks.unlock(fd)\n                        if _file is not None:\n                            _file.close()\n                        else:\n                            os.close(fd)\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects_4/django/django/conf/global_settings.py lines 307-307)": [
      "\nFILE_UPLOAD_PERMISSIONS = 0o644\n",
      "\n# The numeric mode to set newly-uploaded files to. The value should be a mode\n# you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\nFILE_UPLOAD_PERMISSIONS = 0o644\n",
      "\n# The numeric mode to set newly-uploaded files to. The value should be a mode\n# you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\nFILE_UPLOAD_PERMISSIONS = 0o644\n",
      "\nFILE_UPLOAD_PERMISSIONS = 0o644\n",
      "\nFILE_UPLOAD_PERMISSIONS = 0o644\n",
      "\nFILE_UPLOAD_PERMISSIONS = 0o644\n",
      "\nFILE_UPLOAD_PERMISSIONS = 0o644\n",
      "\nFILE_UPLOAD_PERMISSIONS = 0o644\n"
    ],
    "Location 2 (/root/hy/projects_4/django/django/core/files/storage.py lines 283-284)": [
      "\n        if self.file_permissions_mode is not None:\n            os.chmod(full_path, self.file_permissions_mode)\n",
      "\n        if self.file_permissions_mode is not None:\n            os.chmod(full_path, self.file_permissions_mode)\n",
      "\n        if self.file_permissions_mode is not None:\n            os.chmod(full_path, self.file_permissions_mode)\n",
      "\n        if self.file_permissions_mode is not None:\n            os.chmod(full_path, self.file_permissions_mode)\n",
      "\n        if self.file_permissions_mode is not None:\n            os.chmod(full_path, self.file_permissions_mode)\n",
      "\n        if self.file_permissions_mode is not None:\n            os.chmod(full_path, self.file_permissions_mode)\n",
      "\n        if self.file_permissions_mode is not None:\n            os.chmod(full_path, self.file_permissions_mode)\n",
      "\n        if self.file_permissions_mode is not None:\n            os.chmod(full_path, self.file_permissions_mode)\n"
    ],
    "Location 3 (/root/hy/projects_4/django/django/core/files/move.py lines 70-77)": [
      "\n# File upload permissions mode\nFILE_UPLOAD_PERMISSIONS = 0o644\n",
      "\n# File uploads\nFILE_UPLOAD_MAX_MEMORY_SIZE = 2621440  # i.e. 2.5 MB\nFILE_UPLOAD_TEMP_DIR = None\nFILE_UPLOAD_PERMISSIONS = 0o644\nFILE_UPLOAD_DIRECTORY_PERMISSIONS = None\n",
      "\n# File upload permissions mode. None means don't set any permissions.\nFILE_UPLOAD_PERMISSIONS = 0o644\n",
      "\n# File upload permissions mode.\nFILE_UPLOAD_PERMISSIONS = 0o644\n",
      "\n# File upload permissions mode\nFILE_UPLOAD_PERMISSIONS = 0o644\n",
      "\n# File upload permissions mode.\nFILE_UPLOAD_PERMISSIONS = 0o644\n",
      "\n# File upload permissions mode\nFILE_UPLOAD_PERMISSIONS = 0o644\n",
      "\n# File and directory permissions\nFILE_UPLOAD_PERMISSIONS = 0o644\n"
    ],
    "Location 4 (/root/hy/projects_4/django/django/core/files/storage.py lines 254-255)": [
      "\n                # This file has a file path that we can move.\n                if hasattr(content, 'temporary_file_path'):\n                    file_move_safe(content.temporary_file_path(), full_path)\n",
      "\n                if hasattr(content, 'temporary_file_path'):\n                    file_move_safe(content.temporary_file_path(), full_path)\n",
      "\n                # This file has a file path that we can move.\n                if hasattr(content, 'temporary_file_path'):\n                    file_move_safe(content.temporary_file_path(), full_path)\n",
      "\n                # This file has a file path that we can move.\n                if hasattr(content, 'temporary_file_path'):\n                    file_move_safe(content.temporary_file_path(), full_path)\n",
      "\n                # This file has a file path that we can move.\n                if hasattr(content, 'temporary_file_path'):\n                    file_move_safe(content.temporary_file_path(), full_path)\n",
      "\n                # This file has a file path that we can move.\n                if hasattr(content, 'temporary_file_path'):\n                    file_move_safe(content.temporary_file_path(), full_path)\n",
      "\n                # This file has a file path that we can move.\n                if hasattr(content, 'temporary_file_path'):\n                    file_move_safe(content.temporary_file_path(), full_path)\n",
      "\n                # This file has a file path that we can move.\n                if hasattr(content, 'temporary_file_path'):\n                    file_move_safe(content.temporary_file_path(), full_path)\n"
    ],
    "Location 5 (/root/hy/projects_4/django/django/core/files/storage.py lines 258-274)": [
      "\n                # This is a normal uploadedfile that we can stream.\n                else:\n                    # The current umask value is masked out by os.open!\n                    fd = os.open(full_path, self.OS_OPEN_FLAGS, 0o666)\n                    _file = None\n                    try:\n                        locks.lock(fd, locks.LOCK_EX)\n                        for chunk in content.chunks():\n                            if _file is None:\n                                mode = 'wb' if isinstance(chunk, bytes) else 'wt'\n                                _file = os.fdopen(fd, mode)\n                            _file.write(chunk)\n                    finally:\n                        locks.unlock(fd)\n                        if _file is not None:\n                            _file.close()\n                        else:\n                            os.close(fd)\n",
      "\n                # This is a normal uploadedfile that we can stream.\n                else:\n                    # The current umask value is masked out by os.open!\n                    fd = os.open(full_path, self.OS_OPEN_FLAGS, 0o666)\n                    _file = None\n                    try:\n                        locks.lock(fd, locks.LOCK_EX)\n                        for chunk in content.chunks():\n                            if _file is None:\n                                mode = 'wb' if isinstance(chunk, bytes) else 'wt'\n                                _file = os.fdopen(fd, mode)\n                            _file.write(chunk)\n                    finally:\n                        locks.unlock(fd)\n                        if _file is not None:\n                            _file.close()\n                        else:\n                            os.close(fd)\n",
      "\n                else:\n                    # The current umask value is masked out by os.open!\n                    fd = os.open(full_path, self.OS_OPEN_FLAGS, 0o666)\n                    _file = None\n                    try:\n                        locks.lock(fd, locks.LOCK_EX)\n                        for chunk in content.chunks():\n                            if _file is None:\n                                mode = 'wb' if isinstance(chunk, bytes) else 'wt'\n                                _file = os.fdopen(fd, mode)\n                            _file.write(chunk)\n                    finally:\n                        locks.unlock(fd)\n                        if _file is not None:\n                            _file.close()\n                        else:\n                            os.close(fd)\n",
      "\n                # This is a normal uploadedfile that we can stream.\n                else:\n                    # The current umask value is masked out by os.open!\n                    fd = os.open(full_path, self.OS_OPEN_FLAGS, 0o666)\n                    _file = None\n                    try:\n                        locks.lock(fd, locks.LOCK_EX)\n                        for chunk in content.chunks():\n                            if _file is None:\n                                mode = 'wb' if isinstance(chunk, bytes) else 'wt'\n                                _file = os.fdopen(fd, mode)\n                            _file.write(chunk)\n                    finally:\n                        locks.unlock(fd)\n                        if _file is not None:\n                            _file.close()\n                        else:\n                            os.close(fd)\n",
      "\n                # This is a normal uploadedfile that we can stream.\n                else:\n                    # The current umask value is masked out by os.open!\n                    fd = os.open(full_path, self.OS_OPEN_FLAGS, 0o666)\n                    _file = None\n                    try:\n                        locks.lock(fd, locks.LOCK_EX)\n                        for chunk in content.chunks():\n                            if _file is None:\n                                mode = 'wb' if isinstance(chunk, bytes) else 'wt'\n                                _file = os.fdopen(fd, mode)\n                            _file.write(chunk)\n                    finally:\n                        locks.unlock(fd)\n                        if _file is not None:\n                            _file.close()\n                        else:\n                            os.close(fd)\n",
      "\n                # This is a normal uploadedfile that we can stream.\n                else:\n                    # The current umask value is masked out by os.open!\n                    fd = os.open(full_path, self.OS_OPEN_FLAGS, 0o666)\n                    _file = None\n                    try:\n                        locks.lock(fd, locks.LOCK_EX)\n                        for chunk in content.chunks():\n                            if _file is None:\n                                mode = 'wb' if isinstance(chunk, bytes) else 'wt'\n                                _file = os.fdopen(fd, mode)\n                            _file.write(chunk)\n                    finally:\n                        locks.unlock(fd)\n                        if _file is not None:\n                            _file.close()\n                        else:\n                            os.close(fd)\n",
      "\n                # This is a normal uploadedfile that we can stream.\n                else:\n                    # The current umask value is masked out by os.open!\n                    fd = os.open(full_path, self.OS_OPEN_FLAGS, 0o666)\n                    _file = None\n                    try:\n                        locks.lock(fd, locks.LOCK_EX)\n                        for chunk in content.chunks():\n                            if _file is None:\n                                mode = 'wb' if isinstance(chunk, bytes) else 'wt'\n                                _file = os.fdopen(fd, mode)\n                            _file.write(chunk)\n                    finally:\n                        locks.unlock(fd)\n                        if _file is not None:\n                            _file.close()\n                        else:\n                            os.close(fd)\n",
      "\n                # This is a normal uploadedfile that we can stream.\n                else:\n                    # The current umask value is masked out by os.open!\n                    fd = os.open(full_path, self.OS_OPEN_FLAGS, 0o666)\n                    _file = None\n                    try:\n                        locks.lock(fd, locks.LOCK_EX)\n                        for chunk in content.chunks():\n                            if _file is None:\n                                mode = 'wb' if isinstance(chunk, bytes) else 'wt'\n                                _file = os.fdopen(fd, mode)\n                            _file.write(chunk)\n                    finally:\n                        locks.unlock(fd)\n                        if _file is not None:\n                            _file.close()\n                        else:\n                            os.close(fd)\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py\nindex acee9887d2..a036f689c9 100644\n--- a/django/conf/global_settings.py\n+++ b/django/conf/global_settings.py\n@@ -304,7 +304,8 @@ FILE_UPLOAD_TEMP_DIR = None\n \n # The numeric mode to set newly-uploaded files to. The value should be a mode\n # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\n-FILE_UPLOAD_PERMISSIONS = None\n+\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n # The numeric mode to assign to newly-created directories, when uploading files.\n # The value should be a mode as you'd pass to os.chmod;\ndiff --git a/django/core/files/move.py b/django/core/files/move.py\nindex 2cce7848ca..6500c036a9 100644\n--- a/django/core/files/move.py\n+++ b/django/core/files/move.py\n@@ -67,6 +67,7 @@ def file_move_safe(old_file_name, new_file_name, chunk_size=1024 * 64, allow_ove\n             locks.unlock(fd)\n             os.close(fd)\n \n+\n     try:\n         copystat(old_file_name, new_file_name)\n     except PermissionError as e:\ndiff --git a/django/core/files/storage.py b/django/core/files/storage.py\nindex cbdab1de47..283507b855 100644\n--- a/django/core/files/storage.py\n+++ b/django/core/files/storage.py\n@@ -251,10 +251,12 @@ class FileSystemStorage(Storage):\n         while True:\n             try:\n                 # This file has a file path that we can move.\n+\n                 if hasattr(content, 'temporary_file_path'):\n                     file_move_safe(content.temporary_file_path(), full_path)\n \n                 # This is a normal uploadedfile that we can stream.\n+\n                 else:\n                     # The current umask value is masked out by os.open!\n                     fd = os.open(full_path, self.OS_OPEN_FLAGS, 0o666)\n@@ -280,6 +282,7 @@ class FileSystemStorage(Storage):\n                 # OK, the file save worked. Break out of the loop.\n                 break\n \n+\n         if self.file_permissions_mode is not None:\n             os.chmod(full_path, self.file_permissions_mode)\n \n",
    "variant_0": "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py\nindex acee9887d2..a036f689c9 100644\n--- a/django/conf/global_settings.py\n+++ b/django/conf/global_settings.py\n@@ -304,7 +304,8 @@ FILE_UPLOAD_TEMP_DIR = None\n \n # The numeric mode to set newly-uploaded files to. The value should be a mode\n # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\n-FILE_UPLOAD_PERMISSIONS = None\n+\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n # The numeric mode to assign to newly-created directories, when uploading files.\n # The value should be a mode as you'd pass to os.chmod;\ndiff --git a/django/core/files/move.py b/django/core/files/move.py\nindex 2cce7848ca..d72796f2dd 100644\n--- a/django/core/files/move.py\n+++ b/django/core/files/move.py\n@@ -67,14 +67,9 @@ def file_move_safe(old_file_name, new_file_name, chunk_size=1024 * 64, allow_ove\n             locks.unlock(fd)\n             os.close(fd)\n \n-    try:\n-        copystat(old_file_name, new_file_name)\n-    except PermissionError as e:\n-        # Certain filesystems (e.g. CIFS) fail to copy the file's metadata if\n-        # the type of the destination filesystem isn't the same as the source\n-        # filesystem; ignore that.\n-        if e.errno != errno.EPERM:\n-            raise\n+\n+# File upload permissions mode\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n     try:\n         os.remove(old_file_name)\ndiff --git a/django/core/files/storage.py b/django/core/files/storage.py\nindex cbdab1de47..e85c16daf9 100644\n--- a/django/core/files/storage.py\n+++ b/django/core/files/storage.py\n@@ -250,10 +250,14 @@ class FileSystemStorage(Storage):\n \n         while True:\n             try:\n+                # This file has a file path that we can move.\n+\n                 # This file has a file path that we can move.\n                 if hasattr(content, 'temporary_file_path'):\n                     file_move_safe(content.temporary_file_path(), full_path)\n \n+                # This is a normal uploadedfile that we can stream.\n+\n                 # This is a normal uploadedfile that we can stream.\n                 else:\n                     # The current umask value is masked out by os.open!\n@@ -280,6 +284,7 @@ class FileSystemStorage(Storage):\n                 # OK, the file save worked. Break out of the loop.\n                 break\n \n+\n         if self.file_permissions_mode is not None:\n             os.chmod(full_path, self.file_permissions_mode)\n \n",
    "variant_1": "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py\nindex acee9887d2..a036f689c9 100644\n--- a/django/conf/global_settings.py\n+++ b/django/conf/global_settings.py\n@@ -304,7 +304,8 @@ FILE_UPLOAD_TEMP_DIR = None\n \n # The numeric mode to set newly-uploaded files to. The value should be a mode\n # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\n-FILE_UPLOAD_PERMISSIONS = None\n+\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n # The numeric mode to assign to newly-created directories, when uploading files.\n # The value should be a mode as you'd pass to os.chmod;\ndiff --git a/django/core/files/move.py b/django/core/files/move.py\nindex 2cce7848ca..d72796f2dd 100644\n--- a/django/core/files/move.py\n+++ b/django/core/files/move.py\n@@ -67,14 +67,9 @@ def file_move_safe(old_file_name, new_file_name, chunk_size=1024 * 64, allow_ove\n             locks.unlock(fd)\n             os.close(fd)\n \n-    try:\n-        copystat(old_file_name, new_file_name)\n-    except PermissionError as e:\n-        # Certain filesystems (e.g. CIFS) fail to copy the file's metadata if\n-        # the type of the destination filesystem isn't the same as the source\n-        # filesystem; ignore that.\n-        if e.errno != errno.EPERM:\n-            raise\n+\n+# File upload permissions mode\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n     try:\n         os.remove(old_file_name)\ndiff --git a/django/core/files/storage.py b/django/core/files/storage.py\nindex cbdab1de47..e85c16daf9 100644\n--- a/django/core/files/storage.py\n+++ b/django/core/files/storage.py\n@@ -250,10 +250,14 @@ class FileSystemStorage(Storage):\n \n         while True:\n             try:\n+                # This file has a file path that we can move.\n+\n                 # This file has a file path that we can move.\n                 if hasattr(content, 'temporary_file_path'):\n                     file_move_safe(content.temporary_file_path(), full_path)\n \n+                # This is a normal uploadedfile that we can stream.\n+\n                 # This is a normal uploadedfile that we can stream.\n                 else:\n                     # The current umask value is masked out by os.open!\n@@ -280,6 +284,7 @@ class FileSystemStorage(Storage):\n                 # OK, the file save worked. Break out of the loop.\n                 break\n \n+\n         if self.file_permissions_mode is not None:\n             os.chmod(full_path, self.file_permissions_mode)\n \n",
    "variant_2": "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py\nindex acee9887d2..90a30239e9 100644\n--- a/django/conf/global_settings.py\n+++ b/django/conf/global_settings.py\n@@ -304,7 +304,10 @@ FILE_UPLOAD_TEMP_DIR = None\n \n # The numeric mode to set newly-uploaded files to. The value should be a mode\n # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\n-FILE_UPLOAD_PERMISSIONS = None\n+\n+# The numeric mode to set newly-uploaded files to. The value should be a mode\n+# you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n # The numeric mode to assign to newly-created directories, when uploading files.\n # The value should be a mode as you'd pass to os.chmod;\ndiff --git a/django/core/files/move.py b/django/core/files/move.py\nindex 2cce7848ca..2156102fee 100644\n--- a/django/core/files/move.py\n+++ b/django/core/files/move.py\n@@ -67,14 +67,12 @@ def file_move_safe(old_file_name, new_file_name, chunk_size=1024 * 64, allow_ove\n             locks.unlock(fd)\n             os.close(fd)\n \n-    try:\n-        copystat(old_file_name, new_file_name)\n-    except PermissionError as e:\n-        # Certain filesystems (e.g. CIFS) fail to copy the file's metadata if\n-        # the type of the destination filesystem isn't the same as the source\n-        # filesystem; ignore that.\n-        if e.errno != errno.EPERM:\n-            raise\n+\n+# File uploads\n+FILE_UPLOAD_MAX_MEMORY_SIZE = 2621440  # i.e. 2.5 MB\n+FILE_UPLOAD_TEMP_DIR = None\n+FILE_UPLOAD_PERMISSIONS = 0o644\n+FILE_UPLOAD_DIRECTORY_PERMISSIONS = None\n \n     try:\n         os.remove(old_file_name)\ndiff --git a/django/core/files/storage.py b/django/core/files/storage.py\nindex cbdab1de47..430691cddb 100644\n--- a/django/core/files/storage.py\n+++ b/django/core/files/storage.py\n@@ -251,9 +251,12 @@ class FileSystemStorage(Storage):\n         while True:\n             try:\n                 # This file has a file path that we can move.\n+\n                 if hasattr(content, 'temporary_file_path'):\n                     file_move_safe(content.temporary_file_path(), full_path)\n \n+                # This is a normal uploadedfile that we can stream.\n+\n                 # This is a normal uploadedfile that we can stream.\n                 else:\n                     # The current umask value is masked out by os.open!\n@@ -280,6 +283,7 @@ class FileSystemStorage(Storage):\n                 # OK, the file save worked. Break out of the loop.\n                 break\n \n+\n         if self.file_permissions_mode is not None:\n             os.chmod(full_path, self.file_permissions_mode)\n \n",
    "variant_3": "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py\nindex acee9887d2..90a30239e9 100644\n--- a/django/conf/global_settings.py\n+++ b/django/conf/global_settings.py\n@@ -304,7 +304,10 @@ FILE_UPLOAD_TEMP_DIR = None\n \n # The numeric mode to set newly-uploaded files to. The value should be a mode\n # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\n-FILE_UPLOAD_PERMISSIONS = None\n+\n+# The numeric mode to set newly-uploaded files to. The value should be a mode\n+# you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n # The numeric mode to assign to newly-created directories, when uploading files.\n # The value should be a mode as you'd pass to os.chmod;\ndiff --git a/django/core/files/move.py b/django/core/files/move.py\nindex 2cce7848ca..77e6036014 100644\n--- a/django/core/files/move.py\n+++ b/django/core/files/move.py\n@@ -67,14 +67,9 @@ def file_move_safe(old_file_name, new_file_name, chunk_size=1024 * 64, allow_ove\n             locks.unlock(fd)\n             os.close(fd)\n \n-    try:\n-        copystat(old_file_name, new_file_name)\n-    except PermissionError as e:\n-        # Certain filesystems (e.g. CIFS) fail to copy the file's metadata if\n-        # the type of the destination filesystem isn't the same as the source\n-        # filesystem; ignore that.\n-        if e.errno != errno.EPERM:\n-            raise\n+\n+# File upload permissions mode. None means don't set any permissions.\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n     try:\n         os.remove(old_file_name)\ndiff --git a/django/core/files/storage.py b/django/core/files/storage.py\nindex cbdab1de47..c447079357 100644\n--- a/django/core/files/storage.py\n+++ b/django/core/files/storage.py\n@@ -250,11 +250,14 @@ class FileSystemStorage(Storage):\n \n         while True:\n             try:\n+                # This file has a file path that we can move.\n+\n                 # This file has a file path that we can move.\n                 if hasattr(content, 'temporary_file_path'):\n                     file_move_safe(content.temporary_file_path(), full_path)\n \n                 # This is a normal uploadedfile that we can stream.\n+\n                 else:\n                     # The current umask value is masked out by os.open!\n                     fd = os.open(full_path, self.OS_OPEN_FLAGS, 0o666)\n@@ -280,6 +283,7 @@ class FileSystemStorage(Storage):\n                 # OK, the file save worked. Break out of the loop.\n                 break\n \n+\n         if self.file_permissions_mode is not None:\n             os.chmod(full_path, self.file_permissions_mode)\n \n",
    "variant_4": "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py\nindex acee9887d2..a036f689c9 100644\n--- a/django/conf/global_settings.py\n+++ b/django/conf/global_settings.py\n@@ -304,7 +304,8 @@ FILE_UPLOAD_TEMP_DIR = None\n \n # The numeric mode to set newly-uploaded files to. The value should be a mode\n # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\n-FILE_UPLOAD_PERMISSIONS = None\n+\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n # The numeric mode to assign to newly-created directories, when uploading files.\n # The value should be a mode as you'd pass to os.chmod;\ndiff --git a/django/core/files/move.py b/django/core/files/move.py\nindex 2cce7848ca..22a1d450a2 100644\n--- a/django/core/files/move.py\n+++ b/django/core/files/move.py\n@@ -67,14 +67,9 @@ def file_move_safe(old_file_name, new_file_name, chunk_size=1024 * 64, allow_ove\n             locks.unlock(fd)\n             os.close(fd)\n \n-    try:\n-        copystat(old_file_name, new_file_name)\n-    except PermissionError as e:\n-        # Certain filesystems (e.g. CIFS) fail to copy the file's metadata if\n-        # the type of the destination filesystem isn't the same as the source\n-        # filesystem; ignore that.\n-        if e.errno != errno.EPERM:\n-            raise\n+\n+# File upload permissions mode.\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n     try:\n         os.remove(old_file_name)\ndiff --git a/django/core/files/storage.py b/django/core/files/storage.py\nindex cbdab1de47..e85c16daf9 100644\n--- a/django/core/files/storage.py\n+++ b/django/core/files/storage.py\n@@ -250,10 +250,14 @@ class FileSystemStorage(Storage):\n \n         while True:\n             try:\n+                # This file has a file path that we can move.\n+\n                 # This file has a file path that we can move.\n                 if hasattr(content, 'temporary_file_path'):\n                     file_move_safe(content.temporary_file_path(), full_path)\n \n+                # This is a normal uploadedfile that we can stream.\n+\n                 # This is a normal uploadedfile that we can stream.\n                 else:\n                     # The current umask value is masked out by os.open!\n@@ -280,6 +284,7 @@ class FileSystemStorage(Storage):\n                 # OK, the file save worked. Break out of the loop.\n                 break\n \n+\n         if self.file_permissions_mode is not None:\n             os.chmod(full_path, self.file_permissions_mode)\n \n",
    "variant_5": "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py\nindex acee9887d2..a036f689c9 100644\n--- a/django/conf/global_settings.py\n+++ b/django/conf/global_settings.py\n@@ -304,7 +304,8 @@ FILE_UPLOAD_TEMP_DIR = None\n \n # The numeric mode to set newly-uploaded files to. The value should be a mode\n # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\n-FILE_UPLOAD_PERMISSIONS = None\n+\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n # The numeric mode to assign to newly-created directories, when uploading files.\n # The value should be a mode as you'd pass to os.chmod;\ndiff --git a/django/core/files/move.py b/django/core/files/move.py\nindex 2cce7848ca..d72796f2dd 100644\n--- a/django/core/files/move.py\n+++ b/django/core/files/move.py\n@@ -67,14 +67,9 @@ def file_move_safe(old_file_name, new_file_name, chunk_size=1024 * 64, allow_ove\n             locks.unlock(fd)\n             os.close(fd)\n \n-    try:\n-        copystat(old_file_name, new_file_name)\n-    except PermissionError as e:\n-        # Certain filesystems (e.g. CIFS) fail to copy the file's metadata if\n-        # the type of the destination filesystem isn't the same as the source\n-        # filesystem; ignore that.\n-        if e.errno != errno.EPERM:\n-            raise\n+\n+# File upload permissions mode\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n     try:\n         os.remove(old_file_name)\ndiff --git a/django/core/files/storage.py b/django/core/files/storage.py\nindex cbdab1de47..e85c16daf9 100644\n--- a/django/core/files/storage.py\n+++ b/django/core/files/storage.py\n@@ -250,10 +250,14 @@ class FileSystemStorage(Storage):\n \n         while True:\n             try:\n+                # This file has a file path that we can move.\n+\n                 # This file has a file path that we can move.\n                 if hasattr(content, 'temporary_file_path'):\n                     file_move_safe(content.temporary_file_path(), full_path)\n \n+                # This is a normal uploadedfile that we can stream.\n+\n                 # This is a normal uploadedfile that we can stream.\n                 else:\n                     # The current umask value is masked out by os.open!\n@@ -280,6 +284,7 @@ class FileSystemStorage(Storage):\n                 # OK, the file save worked. Break out of the loop.\n                 break\n \n+\n         if self.file_permissions_mode is not None:\n             os.chmod(full_path, self.file_permissions_mode)\n \n",
    "variant_6": "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py\nindex acee9887d2..a036f689c9 100644\n--- a/django/conf/global_settings.py\n+++ b/django/conf/global_settings.py\n@@ -304,7 +304,8 @@ FILE_UPLOAD_TEMP_DIR = None\n \n # The numeric mode to set newly-uploaded files to. The value should be a mode\n # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\n-FILE_UPLOAD_PERMISSIONS = None\n+\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n # The numeric mode to assign to newly-created directories, when uploading files.\n # The value should be a mode as you'd pass to os.chmod;\ndiff --git a/django/core/files/move.py b/django/core/files/move.py\nindex 2cce7848ca..22a1d450a2 100644\n--- a/django/core/files/move.py\n+++ b/django/core/files/move.py\n@@ -67,14 +67,9 @@ def file_move_safe(old_file_name, new_file_name, chunk_size=1024 * 64, allow_ove\n             locks.unlock(fd)\n             os.close(fd)\n \n-    try:\n-        copystat(old_file_name, new_file_name)\n-    except PermissionError as e:\n-        # Certain filesystems (e.g. CIFS) fail to copy the file's metadata if\n-        # the type of the destination filesystem isn't the same as the source\n-        # filesystem; ignore that.\n-        if e.errno != errno.EPERM:\n-            raise\n+\n+# File upload permissions mode.\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n     try:\n         os.remove(old_file_name)\ndiff --git a/django/core/files/storage.py b/django/core/files/storage.py\nindex cbdab1de47..e85c16daf9 100644\n--- a/django/core/files/storage.py\n+++ b/django/core/files/storage.py\n@@ -250,10 +250,14 @@ class FileSystemStorage(Storage):\n \n         while True:\n             try:\n+                # This file has a file path that we can move.\n+\n                 # This file has a file path that we can move.\n                 if hasattr(content, 'temporary_file_path'):\n                     file_move_safe(content.temporary_file_path(), full_path)\n \n+                # This is a normal uploadedfile that we can stream.\n+\n                 # This is a normal uploadedfile that we can stream.\n                 else:\n                     # The current umask value is masked out by os.open!\n@@ -280,6 +284,7 @@ class FileSystemStorage(Storage):\n                 # OK, the file save worked. Break out of the loop.\n                 break\n \n+\n         if self.file_permissions_mode is not None:\n             os.chmod(full_path, self.file_permissions_mode)\n \n",
    "variant_7": "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py\nindex acee9887d2..a036f689c9 100644\n--- a/django/conf/global_settings.py\n+++ b/django/conf/global_settings.py\n@@ -304,7 +304,8 @@ FILE_UPLOAD_TEMP_DIR = None\n \n # The numeric mode to set newly-uploaded files to. The value should be a mode\n # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\n-FILE_UPLOAD_PERMISSIONS = None\n+\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n # The numeric mode to assign to newly-created directories, when uploading files.\n # The value should be a mode as you'd pass to os.chmod;\ndiff --git a/django/core/files/move.py b/django/core/files/move.py\nindex 2cce7848ca..d72796f2dd 100644\n--- a/django/core/files/move.py\n+++ b/django/core/files/move.py\n@@ -67,14 +67,9 @@ def file_move_safe(old_file_name, new_file_name, chunk_size=1024 * 64, allow_ove\n             locks.unlock(fd)\n             os.close(fd)\n \n-    try:\n-        copystat(old_file_name, new_file_name)\n-    except PermissionError as e:\n-        # Certain filesystems (e.g. CIFS) fail to copy the file's metadata if\n-        # the type of the destination filesystem isn't the same as the source\n-        # filesystem; ignore that.\n-        if e.errno != errno.EPERM:\n-            raise\n+\n+# File upload permissions mode\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n     try:\n         os.remove(old_file_name)\ndiff --git a/django/core/files/storage.py b/django/core/files/storage.py\nindex cbdab1de47..e85c16daf9 100644\n--- a/django/core/files/storage.py\n+++ b/django/core/files/storage.py\n@@ -250,10 +250,14 @@ class FileSystemStorage(Storage):\n \n         while True:\n             try:\n+                # This file has a file path that we can move.\n+\n                 # This file has a file path that we can move.\n                 if hasattr(content, 'temporary_file_path'):\n                     file_move_safe(content.temporary_file_path(), full_path)\n \n+                # This is a normal uploadedfile that we can stream.\n+\n                 # This is a normal uploadedfile that we can stream.\n                 else:\n                     # The current umask value is masked out by os.open!\n@@ -280,6 +284,7 @@ class FileSystemStorage(Storage):\n                 # OK, the file save worked. Break out of the loop.\n                 break\n \n+\n         if self.file_permissions_mode is not None:\n             os.chmod(full_path, self.file_permissions_mode)\n \n",
    "variant_8": "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py\nindex acee9887d2..a036f689c9 100644\n--- a/django/conf/global_settings.py\n+++ b/django/conf/global_settings.py\n@@ -304,7 +304,8 @@ FILE_UPLOAD_TEMP_DIR = None\n \n # The numeric mode to set newly-uploaded files to. The value should be a mode\n # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.\n-FILE_UPLOAD_PERMISSIONS = None\n+\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n # The numeric mode to assign to newly-created directories, when uploading files.\n # The value should be a mode as you'd pass to os.chmod;\ndiff --git a/django/core/files/move.py b/django/core/files/move.py\nindex 2cce7848ca..28be4985e8 100644\n--- a/django/core/files/move.py\n+++ b/django/core/files/move.py\n@@ -67,14 +67,9 @@ def file_move_safe(old_file_name, new_file_name, chunk_size=1024 * 64, allow_ove\n             locks.unlock(fd)\n             os.close(fd)\n \n-    try:\n-        copystat(old_file_name, new_file_name)\n-    except PermissionError as e:\n-        # Certain filesystems (e.g. CIFS) fail to copy the file's metadata if\n-        # the type of the destination filesystem isn't the same as the source\n-        # filesystem; ignore that.\n-        if e.errno != errno.EPERM:\n-            raise\n+\n+# File and directory permissions\n+FILE_UPLOAD_PERMISSIONS = 0o644\n \n     try:\n         os.remove(old_file_name)\ndiff --git a/django/core/files/storage.py b/django/core/files/storage.py\nindex cbdab1de47..e85c16daf9 100644\n--- a/django/core/files/storage.py\n+++ b/django/core/files/storage.py\n@@ -250,10 +250,14 @@ class FileSystemStorage(Storage):\n \n         while True:\n             try:\n+                # This file has a file path that we can move.\n+\n                 # This file has a file path that we can move.\n                 if hasattr(content, 'temporary_file_path'):\n                     file_move_safe(content.temporary_file_path(), full_path)\n \n+                # This is a normal uploadedfile that we can stream.\n+\n                 # This is a normal uploadedfile that we can stream.\n                 else:\n                     # The current umask value is masked out by os.open!\n@@ -280,6 +284,7 @@ class FileSystemStorage(Storage):\n                 # OK, the file save worked. Break out of the loop.\n                 break\n \n+\n         if self.file_permissions_mode is not None:\n             os.chmod(full_path, self.file_permissions_mode)\n \n"
  }
}