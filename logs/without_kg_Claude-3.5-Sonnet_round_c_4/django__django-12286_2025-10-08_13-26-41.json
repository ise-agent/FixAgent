{
  "zero_patches": {
    "Location 1 (/root/hy/projects_4/django/django/core/checks/translation.py lines 56-61)": "\n@register(Tags.translation)\ndef check_language_settings_consistent(app_configs, **kwargs):\n    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n    from django.utils.translation.trans_real import get_supported_language_variant\n    try:\n        get_supported_language_variant(settings.LANGUAGE_CODE)\n    except LookupError:\n        return [E004]\n    return []\n",
    "Location 2 (/root/hy/projects_4/django/django/core/checks/translation.py lines 1-3)": "\nfrom django.conf import settings\nfrom django.utils.translation.trans_real import language_code_re, get_supported_language_variant\n",
    "Location 3 (/root/hy/projects_4/django/django/core/checks/translation.py lines 21-25)": "\nE004 = Error(\n    'You have provided a value for the LANGUAGE_CODE setting that is not in '\n    'the LANGUAGES setting.',\n    id='translation.E004',\n)\n",
    "Location 4 (/root/hy/projects_4/django/django/core/checks/translation.py lines 55-55)": "\n@register(Tags.translation)\ndef check_language_settings_consistent(app_configs, **kwargs):\n    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n    from django.utils.translation.trans_real import get_supported_language_variant\n    from django.core.exceptions import ImproperlyConfigured\n    \n    try:\n        get_supported_language_variant(settings.LANGUAGE_CODE)\n    except LookupError:\n        return [E004]\n    return []\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects_4/django/django/core/checks/translation.py lines 56-61)": [
      "\n@register(Tags.translation)\ndef check_language_settings_consistent(app_configs, **kwargs):\n    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n    from django.utils.translation.trans_real import get_supported_language_variant\n    try:\n        get_supported_language_variant(settings.LANGUAGE_CODE)\n    except LookupError:\n        return [E004]\n    return []\n",
      "\n@register(Tags.translation)\ndef check_language_settings_consistent(app_configs, **kwargs):\n    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n    from django.utils.translation.trans_real import get_supported_language_variant\n    try:\n        get_supported_language_variant(settings.LANGUAGE_CODE)\n    except LookupError:\n        return [E004]\n    return []\n",
      "\n@register(Tags.translation)\ndef check_language_settings_consistent(app_configs, **kwargs):\n    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n    from django.utils.translation.trans_real import get_supported_language_variant\n    \n    try:\n        get_supported_language_variant(settings.LANGUAGE_CODE)\n    except LookupError:\n        return [E004]\n    return []\n",
      "\n@register(Tags.translation)\ndef check_language_settings_consistent(app_configs, **kwargs):\n    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n    from django.utils.translation.trans_real import get_supported_language_variant\n    try:\n        get_supported_language_variant(settings.LANGUAGE_CODE)\n    except LookupError:\n        return [E004]\n    return []\n",
      "\n@register(Tags.translation)\ndef check_language_settings_consistent(app_configs, **kwargs):\n    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n    from django.utils.translation.trans_real import get_supported_language_variant\n    \n    try:\n        get_supported_language_variant(settings.LANGUAGE_CODE)\n    except LookupError:\n        return [E004]\n    return []\n",
      "\n@register(Tags.translation)\ndef check_language_settings_consistent(app_configs, **kwargs):\n    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n    from django.utils.translation.trans_real import get_supported_language_variant\n    from django.core.exceptions import ImproperlyConfigured\n    \n    try:\n        get_supported_language_variant(settings.LANGUAGE_CODE)\n    except LookupError:\n        return [E004]\n    return []\n",
      "\nfrom django.utils.translation.trans_real import get_supported_language_variant\n\n@register(Tags.translation)\ndef check_language_settings_consistent(app_configs, **kwargs):\n    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n    try:\n        get_supported_language_variant(settings.LANGUAGE_CODE)\n    except LookupError:\n        return [E004]\n    return []\n",
      "\nfrom django.utils.translation.trans_real import get_supported_language_variant\n\n@register(Tags.translation)\ndef check_language_settings_consistent(app_configs, **kwargs):\n    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n    try:\n        get_supported_language_variant(settings.LANGUAGE_CODE)\n    except LookupError:\n        return [E004]\n    return []\n"
    ],
    "Location 2 (/root/hy/projects_4/django/django/core/checks/translation.py lines 1-3)": [
      "\nfrom django.conf import settings\nfrom django.utils.translation.trans_real import language_code_re, get_supported_language_variant\n",
      "\nfrom django.conf import settings\nfrom django.utils.translation.trans_real import language_code_re, get_supported_language_variant\n\nfrom . import Error, Tags, register\n",
      "\nfrom django.conf import settings\nfrom django.utils.translation.trans_real import language_code_re, get_supported_language_variant\n",
      "\nfrom django.conf import settings\nfrom django.utils.translation.trans_real import language_code_re, get_supported_language_variant\n",
      "\nfrom django.conf import settings\nfrom django.utils.translation.trans_real import language_code_re, get_supported_language_variant\n",
      "\nfrom django.conf import settings\nfrom django.utils.translation.trans_real import language_code_re, get_supported_language_variant\n",
      "\nfrom django.conf import settings\nfrom django.utils.translation.trans_real import language_code_re, get_supported_language_variant\n",
      "\nfrom django.conf import settings\nfrom django.utils.translation.trans_real import language_code_re, get_supported_language_variant\n"
    ],
    "Location 3 (/root/hy/projects_4/django/django/core/checks/translation.py lines 21-25)": [
      "\nE004 = Error(\n    'You have provided a value for the LANGUAGE_CODE setting that is not in '\n    'the LANGUAGES setting.',\n    id='translation.E004',\n)\n",
      "\nE004 = Error(\n    'You have provided a value for the LANGUAGE_CODE setting that is not in '\n    'the LANGUAGES setting.',\n    id='translation.E004',\n)\n",
      "\nE004 = Error(\n    'You have provided a value for the LANGUAGE_CODE setting that is not in '\n    'the LANGUAGES setting.',\n    id='translation.E004',\n)\n",
      "\nE004 = Error(\n    'You have provided a value for the LANGUAGE_CODE setting that is not in '\n    'the LANGUAGES setting.',\n    id='translation.E004',\n)\n",
      "\nE004 = Error(\n    'You have provided a value for the LANGUAGE_CODE setting that is not in '\n    'the LANGUAGES setting.',\n    id='translation.E004',\n)\n",
      "\nE004 = Error(\n    'You have provided a value for the LANGUAGE_CODE setting that is not in '\n    'the LANGUAGES setting.',\n    id='translation.E004',\n)\n",
      "\nE004 = Error(\n    'You have provided a value for the LANGUAGE_CODE setting that is not in '\n    'the LANGUAGES setting and no base language variant is available.',\n    id='translation.E004',\n)\n",
      "\nE004 = Error(\n    'You have provided a value for the LANGUAGE_CODE setting that is not in '\n    'the LANGUAGES setting.',\n    id='translation.E004',\n)\n"
    ],
    "Location 4 (/root/hy/projects_4/django/django/core/checks/translation.py lines 55-55)": [
      "\n@register(Tags.translation)\ndef check_language_settings_consistent(app_configs, **kwargs):\n    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n    from django.utils.translation.trans_real import get_supported_language_variant\n    from django.core.exceptions import ImproperlyConfigured\n    \n    try:\n        get_supported_language_variant(settings.LANGUAGE_CODE)\n    except LookupError:\n        return [E004]\n    return []\n",
      "\n@register(Tags.translation)\ndef check_language_settings_consistent(app_configs, **kwargs):\n    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n    from django.utils.translation.trans_real import get_supported_language_variant\n    from django.core.exceptions import ImproperlyConfigured\n    \n    try:\n        get_supported_language_variant(settings.LANGUAGE_CODE)\n    except LookupError:\n        return [E004]\n    return []\n",
      "\n@register(Tags.translation)\ndef check_language_settings_consistent(app_configs, **kwargs):\n    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n    from django.utils.translation.trans_real import get_supported_language_variant\n    \n    try:\n        get_supported_language_variant(settings.LANGUAGE_CODE)\n    except LookupError:\n        return [E004]\n    return []\n",
      "\n@register(Tags.translation)\ndef check_language_settings_consistent(app_configs, **kwargs):\n    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n    from django.utils.translation.trans_real import get_supported_language_variant\n    from django.core.exceptions import ImproperlyConfigured\n    \n    try:\n        get_supported_language_variant(settings.LANGUAGE_CODE)\n    except LookupError:\n        return [E004]\n    return []\n",
      "\n@register(Tags.translation)\ndef check_language_settings_consistent(app_configs, **kwargs):\n    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n    from django.utils.translation.trans_real import get_supported_language_variant\n    from django.core.exceptions import LookupError as DjangoLookupError\n    \n    try:\n        get_supported_language_variant(settings.LANGUAGE_CODE)\n        return []\n    except (DjangoLookupError, LookupError):\n        return [E004]\n",
      "\n@register(Tags.translation)\ndef check_language_settings_consistent(app_configs, **kwargs):\n    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n    from django.utils.translation.trans_real import get_supported_language_variant\n    from django.core.exceptions import ImproperlyConfigured\n    \n    try:\n        get_supported_language_variant(settings.LANGUAGE_CODE)\n    except LookupError:\n        return [E004]\n    return []\n",
      "\n@register(Tags.translation)\ndef check_language_settings_consistent(app_configs, **kwargs):\n    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n    try:\n        from django.utils.translation.trans_real import get_supported_language_variant\n        get_supported_language_variant(settings.LANGUAGE_CODE)\n    except LookupError:\n        return [E004]\n    return []\n",
      "\n@register(Tags.translation)\ndef check_language_settings_consistent(app_configs, **kwargs):\n    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n    from django.utils.translation.trans_real import get_supported_language_variant\n    \n    try:\n        get_supported_language_variant(settings.LANGUAGE_CODE)\n    except LookupError:\n        return [E004]\n    return []\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/django/core/checks/translation.py b/django/core/checks/translation.py\nindex 138ed07ff8..3cc6bf7708 100644\n--- a/django/core/checks/translation.py\n+++ b/django/core/checks/translation.py\n@@ -1,3 +1,4 @@\n+\n from django.conf import settings\n from django.utils.translation.trans_real import language_code_re\n \n@@ -18,6 +19,7 @@ E003 = Error(\n     id='translation.E003',\n )\n \n+\n E004 = Error(\n     'You have provided a value for the LANGUAGE_CODE setting that is not in '\n     'the LANGUAGES setting.',\n@@ -52,10 +54,14 @@ def check_setting_languages_bidi(app_configs, **kwargs):\n     ]\n \n \n+\n @register(Tags.translation)\n+\n def check_language_settings_consistent(app_configs, **kwargs):\n     \"\"\"Error if language settings are not consistent with each other.\"\"\"\n-    available_tags = {i for i, _ in settings.LANGUAGES} | {'en-us'}\n-    if settings.LANGUAGE_CODE not in available_tags:\n+    from django.utils.translation.trans_real import get_supported_language_variant\n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n         return [E004]\n     return []\n",
    "variant_0": "diff --git a/django/core/checks/translation.py b/django/core/checks/translation.py\nindex 138ed07ff8..612029d012 100644\n--- a/django/core/checks/translation.py\n+++ b/django/core/checks/translation.py\n@@ -1,6 +1,6 @@\n-from django.conf import settings\n-from django.utils.translation.trans_real import language_code_re\n \n+from django.conf import settings\n+from django.utils.translation.trans_real import language_code_re, get_supported_language_variant\n from . import Error, Tags, register\n \n E001 = Error(\n@@ -18,6 +18,7 @@ E003 = Error(\n     id='translation.E003',\n )\n \n+\n E004 = Error(\n     'You have provided a value for the LANGUAGE_CODE setting that is not in '\n     'the LANGUAGES setting.',\n@@ -52,10 +53,25 @@ def check_setting_languages_bidi(app_configs, **kwargs):\n     ]\n \n \n+\n+@register(Tags.translation)\n+def check_language_settings_consistent(app_configs, **kwargs):\n+    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n+    from django.utils.translation.trans_real import get_supported_language_variant\n+    from django.core.exceptions import ImproperlyConfigured\n+    \n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n+        return [E004]\n+    return []\n+\n @register(Tags.translation)\n def check_language_settings_consistent(app_configs, **kwargs):\n     \"\"\"Error if language settings are not consistent with each other.\"\"\"\n-    available_tags = {i for i, _ in settings.LANGUAGES} | {'en-us'}\n-    if settings.LANGUAGE_CODE not in available_tags:\n+    from django.utils.translation.trans_real import get_supported_language_variant\n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n         return [E004]\n     return []\n",
    "variant_1": "diff --git a/django/core/checks/translation.py b/django/core/checks/translation.py\nindex 138ed07ff8..612029d012 100644\n--- a/django/core/checks/translation.py\n+++ b/django/core/checks/translation.py\n@@ -1,6 +1,6 @@\n-from django.conf import settings\n-from django.utils.translation.trans_real import language_code_re\n \n+from django.conf import settings\n+from django.utils.translation.trans_real import language_code_re, get_supported_language_variant\n from . import Error, Tags, register\n \n E001 = Error(\n@@ -18,6 +18,7 @@ E003 = Error(\n     id='translation.E003',\n )\n \n+\n E004 = Error(\n     'You have provided a value for the LANGUAGE_CODE setting that is not in '\n     'the LANGUAGES setting.',\n@@ -52,10 +53,25 @@ def check_setting_languages_bidi(app_configs, **kwargs):\n     ]\n \n \n+\n+@register(Tags.translation)\n+def check_language_settings_consistent(app_configs, **kwargs):\n+    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n+    from django.utils.translation.trans_real import get_supported_language_variant\n+    from django.core.exceptions import ImproperlyConfigured\n+    \n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n+        return [E004]\n+    return []\n+\n @register(Tags.translation)\n def check_language_settings_consistent(app_configs, **kwargs):\n     \"\"\"Error if language settings are not consistent with each other.\"\"\"\n-    available_tags = {i for i, _ in settings.LANGUAGES} | {'en-us'}\n-    if settings.LANGUAGE_CODE not in available_tags:\n+    from django.utils.translation.trans_real import get_supported_language_variant\n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n         return [E004]\n     return []\n",
    "variant_2": "diff --git a/django/core/checks/translation.py b/django/core/checks/translation.py\nindex 138ed07ff8..266bcbd9f3 100644\n--- a/django/core/checks/translation.py\n+++ b/django/core/checks/translation.py\n@@ -1,6 +1,8 @@\n+\n from django.conf import settings\n-from django.utils.translation.trans_real import language_code_re\n+from django.utils.translation.trans_real import language_code_re, get_supported_language_variant\n \n+from . import Error, Tags, register\n from . import Error, Tags, register\n \n E001 = Error(\n@@ -18,6 +20,7 @@ E003 = Error(\n     id='translation.E003',\n )\n \n+\n E004 = Error(\n     'You have provided a value for the LANGUAGE_CODE setting that is not in '\n     'the LANGUAGES setting.',\n@@ -52,10 +55,25 @@ def check_setting_languages_bidi(app_configs, **kwargs):\n     ]\n \n \n+\n+@register(Tags.translation)\n+def check_language_settings_consistent(app_configs, **kwargs):\n+    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n+    from django.utils.translation.trans_real import get_supported_language_variant\n+    from django.core.exceptions import ImproperlyConfigured\n+    \n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n+        return [E004]\n+    return []\n+\n @register(Tags.translation)\n def check_language_settings_consistent(app_configs, **kwargs):\n     \"\"\"Error if language settings are not consistent with each other.\"\"\"\n-    available_tags = {i for i, _ in settings.LANGUAGES} | {'en-us'}\n-    if settings.LANGUAGE_CODE not in available_tags:\n+    from django.utils.translation.trans_real import get_supported_language_variant\n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n         return [E004]\n     return []\n",
    "variant_3": "diff --git a/django/core/checks/translation.py b/django/core/checks/translation.py\nindex 138ed07ff8..d9d0e10634 100644\n--- a/django/core/checks/translation.py\n+++ b/django/core/checks/translation.py\n@@ -1,6 +1,6 @@\n-from django.conf import settings\n-from django.utils.translation.trans_real import language_code_re\n \n+from django.conf import settings\n+from django.utils.translation.trans_real import language_code_re, get_supported_language_variant\n from . import Error, Tags, register\n \n E001 = Error(\n@@ -18,6 +18,7 @@ E003 = Error(\n     id='translation.E003',\n )\n \n+\n E004 = Error(\n     'You have provided a value for the LANGUAGE_CODE setting that is not in '\n     'the LANGUAGES setting.',\n@@ -52,10 +53,25 @@ def check_setting_languages_bidi(app_configs, **kwargs):\n     ]\n \n \n+\n+@register(Tags.translation)\n+def check_language_settings_consistent(app_configs, **kwargs):\n+    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n+    from django.utils.translation.trans_real import get_supported_language_variant\n+    \n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n+        return [E004]\n+    return []\n+\n @register(Tags.translation)\n def check_language_settings_consistent(app_configs, **kwargs):\n     \"\"\"Error if language settings are not consistent with each other.\"\"\"\n-    available_tags = {i for i, _ in settings.LANGUAGES} | {'en-us'}\n-    if settings.LANGUAGE_CODE not in available_tags:\n+    from django.utils.translation.trans_real import get_supported_language_variant\n+    \n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n         return [E004]\n     return []\n",
    "variant_4": "diff --git a/django/core/checks/translation.py b/django/core/checks/translation.py\nindex 138ed07ff8..612029d012 100644\n--- a/django/core/checks/translation.py\n+++ b/django/core/checks/translation.py\n@@ -1,6 +1,6 @@\n-from django.conf import settings\n-from django.utils.translation.trans_real import language_code_re\n \n+from django.conf import settings\n+from django.utils.translation.trans_real import language_code_re, get_supported_language_variant\n from . import Error, Tags, register\n \n E001 = Error(\n@@ -18,6 +18,7 @@ E003 = Error(\n     id='translation.E003',\n )\n \n+\n E004 = Error(\n     'You have provided a value for the LANGUAGE_CODE setting that is not in '\n     'the LANGUAGES setting.',\n@@ -52,10 +53,25 @@ def check_setting_languages_bidi(app_configs, **kwargs):\n     ]\n \n \n+\n+@register(Tags.translation)\n+def check_language_settings_consistent(app_configs, **kwargs):\n+    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n+    from django.utils.translation.trans_real import get_supported_language_variant\n+    from django.core.exceptions import ImproperlyConfigured\n+    \n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n+        return [E004]\n+    return []\n+\n @register(Tags.translation)\n def check_language_settings_consistent(app_configs, **kwargs):\n     \"\"\"Error if language settings are not consistent with each other.\"\"\"\n-    available_tags = {i for i, _ in settings.LANGUAGES} | {'en-us'}\n-    if settings.LANGUAGE_CODE not in available_tags:\n+    from django.utils.translation.trans_real import get_supported_language_variant\n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n         return [E004]\n     return []\n",
    "variant_5": "diff --git a/django/core/checks/translation.py b/django/core/checks/translation.py\nindex 138ed07ff8..fed601bfbc 100644\n--- a/django/core/checks/translation.py\n+++ b/django/core/checks/translation.py\n@@ -1,6 +1,6 @@\n-from django.conf import settings\n-from django.utils.translation.trans_real import language_code_re\n \n+from django.conf import settings\n+from django.utils.translation.trans_real import language_code_re, get_supported_language_variant\n from . import Error, Tags, register\n \n E001 = Error(\n@@ -18,6 +18,7 @@ E003 = Error(\n     id='translation.E003',\n )\n \n+\n E004 = Error(\n     'You have provided a value for the LANGUAGE_CODE setting that is not in '\n     'the LANGUAGES setting.',\n@@ -52,10 +53,26 @@ def check_setting_languages_bidi(app_configs, **kwargs):\n     ]\n \n \n+\n+@register(Tags.translation)\n+def check_language_settings_consistent(app_configs, **kwargs):\n+    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n+    from django.utils.translation.trans_real import get_supported_language_variant\n+    from django.core.exceptions import LookupError as DjangoLookupError\n+    \n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+        return []\n+    except (DjangoLookupError, LookupError):\n+        return [E004]\n+\n @register(Tags.translation)\n def check_language_settings_consistent(app_configs, **kwargs):\n     \"\"\"Error if language settings are not consistent with each other.\"\"\"\n-    available_tags = {i for i, _ in settings.LANGUAGES} | {'en-us'}\n-    if settings.LANGUAGE_CODE not in available_tags:\n+    from django.utils.translation.trans_real import get_supported_language_variant\n+    \n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n         return [E004]\n     return []\n",
    "variant_6": "diff --git a/django/core/checks/translation.py b/django/core/checks/translation.py\nindex 138ed07ff8..c1f658ec95 100644\n--- a/django/core/checks/translation.py\n+++ b/django/core/checks/translation.py\n@@ -1,6 +1,6 @@\n-from django.conf import settings\n-from django.utils.translation.trans_real import language_code_re\n \n+from django.conf import settings\n+from django.utils.translation.trans_real import language_code_re, get_supported_language_variant\n from . import Error, Tags, register\n \n E001 = Error(\n@@ -18,6 +18,7 @@ E003 = Error(\n     id='translation.E003',\n )\n \n+\n E004 = Error(\n     'You have provided a value for the LANGUAGE_CODE setting that is not in '\n     'the LANGUAGES setting.',\n@@ -52,10 +53,27 @@ def check_setting_languages_bidi(app_configs, **kwargs):\n     ]\n \n \n+\n+@register(Tags.translation)\n+def check_language_settings_consistent(app_configs, **kwargs):\n+    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n+    from django.utils.translation.trans_real import get_supported_language_variant\n+    from django.core.exceptions import ImproperlyConfigured\n+    \n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n+        return [E004]\n+    return []\n+\n @register(Tags.translation)\n def check_language_settings_consistent(app_configs, **kwargs):\n     \"\"\"Error if language settings are not consistent with each other.\"\"\"\n-    available_tags = {i for i, _ in settings.LANGUAGES} | {'en-us'}\n-    if settings.LANGUAGE_CODE not in available_tags:\n+    from django.utils.translation.trans_real import get_supported_language_variant\n+    from django.core.exceptions import ImproperlyConfigured\n+    \n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n         return [E004]\n     return []\n",
    "variant_7": "diff --git a/django/core/checks/translation.py b/django/core/checks/translation.py\nindex 138ed07ff8..4fdddae4b6 100644\n--- a/django/core/checks/translation.py\n+++ b/django/core/checks/translation.py\n@@ -1,6 +1,6 @@\n-from django.conf import settings\n-from django.utils.translation.trans_real import language_code_re\n \n+from django.conf import settings\n+from django.utils.translation.trans_real import language_code_re, get_supported_language_variant\n from . import Error, Tags, register\n \n E001 = Error(\n@@ -18,9 +18,10 @@ E003 = Error(\n     id='translation.E003',\n )\n \n+\n E004 = Error(\n     'You have provided a value for the LANGUAGE_CODE setting that is not in '\n-    'the LANGUAGES setting.',\n+    'the LANGUAGES setting and no base language variant is available.',\n     id='translation.E004',\n )\n \n@@ -52,10 +53,24 @@ def check_setting_languages_bidi(app_configs, **kwargs):\n     ]\n \n \n+\n+@register(Tags.translation)\n+def check_language_settings_consistent(app_configs, **kwargs):\n+    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n+    try:\n+        from django.utils.translation.trans_real import get_supported_language_variant\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n+        return [E004]\n+    return []\n+\n+from django.utils.translation.trans_real import get_supported_language_variant\n+\n @register(Tags.translation)\n def check_language_settings_consistent(app_configs, **kwargs):\n     \"\"\"Error if language settings are not consistent with each other.\"\"\"\n-    available_tags = {i for i, _ in settings.LANGUAGES} | {'en-us'}\n-    if settings.LANGUAGE_CODE not in available_tags:\n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n         return [E004]\n     return []\n",
    "variant_8": "diff --git a/django/core/checks/translation.py b/django/core/checks/translation.py\nindex 138ed07ff8..9ea2e7de4d 100644\n--- a/django/core/checks/translation.py\n+++ b/django/core/checks/translation.py\n@@ -1,6 +1,6 @@\n-from django.conf import settings\n-from django.utils.translation.trans_real import language_code_re\n \n+from django.conf import settings\n+from django.utils.translation.trans_real import language_code_re, get_supported_language_variant\n from . import Error, Tags, register\n \n E001 = Error(\n@@ -18,6 +18,7 @@ E003 = Error(\n     id='translation.E003',\n )\n \n+\n E004 = Error(\n     'You have provided a value for the LANGUAGE_CODE setting that is not in '\n     'the LANGUAGES setting.',\n@@ -52,10 +53,25 @@ def check_setting_languages_bidi(app_configs, **kwargs):\n     ]\n \n \n+\n+@register(Tags.translation)\n+def check_language_settings_consistent(app_configs, **kwargs):\n+    \"\"\"Error if language settings are not consistent with each other.\"\"\"\n+    from django.utils.translation.trans_real import get_supported_language_variant\n+    \n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n+        return [E004]\n+    return []\n+\n+from django.utils.translation.trans_real import get_supported_language_variant\n+\n @register(Tags.translation)\n def check_language_settings_consistent(app_configs, **kwargs):\n     \"\"\"Error if language settings are not consistent with each other.\"\"\"\n-    available_tags = {i for i, _ in settings.LANGUAGES} | {'en-us'}\n-    if settings.LANGUAGE_CODE not in available_tags:\n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n         return [E004]\n     return []\n"
  }
}