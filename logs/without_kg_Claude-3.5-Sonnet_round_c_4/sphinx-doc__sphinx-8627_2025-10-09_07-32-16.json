{
  "zero_patches": {
    "Location 1 (/root/hy/projects_4/sphinx/sphinx/util/typing.py lines 327-328)": "\n    module = getattr(annotation, '__module__', None)\n    if module == 'typing':\n        if getattr(annotation, '_name', None):\n            qualname = annotation._name\n        elif getattr(annotation, '__qualname__', None):\n            qualname = annotation.__qualname__\n        elif getattr(annotation, '__forward_arg__', None):\n            qualname = annotation.__forward_arg__\n        else:\n            qualname = stringify(annotation.__origin__)  # ex. Union\n    elif module == '_struct' and getattr(annotation, '__qualname__', None) == 'Struct':\n        qualname = 'struct.Struct'\n    elif hasattr(annotation, '__qualname__'):\n        qualname = '%s.%s' % (module, annotation.__qualname__)\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects_4/sphinx/sphinx/util/typing.py lines 327-328)": [
      "\n    module = getattr(annotation, '__module__', None)\n    if module == 'typing':\n        if getattr(annotation, '_name', None):\n            qualname = annotation._name\n        elif getattr(annotation, '__qualname__', None):\n            qualname = annotation.__qualname__\n        elif getattr(annotation, '__forward_arg__', None):\n            qualname = annotation.__forward_arg__\n        else:\n            qualname = stringify(annotation.__origin__)  # ex. Union\n    elif module == '_struct' and getattr(annotation, '__qualname__', None) == 'Struct':\n        qualname = 'struct.Struct'\n    elif hasattr(annotation, '__qualname__'):\n        qualname = '%s.%s' % (module, annotation.__qualname__)\n",
      "\n    module = getattr(annotation, '__module__', None)\n    if module == 'typing':\n        if getattr(annotation, '_name', None):\n            qualname = annotation._name\n        elif getattr(annotation, '__qualname__', None):\n            qualname = annotation.__qualname__\n        elif getattr(annotation, '__forward_arg__', None):\n            qualname = annotation.__forward_arg__\n        else:\n            qualname = stringify(annotation.__origin__)  # ex. Union\n    elif module == '_struct' and getattr(annotation, '__qualname__', None) == 'Struct':\n        qualname = 'struct.Struct'\n    elif hasattr(annotation, '__qualname__'):\n        qualname = '%s.%s' % (module, annotation.__qualname__)\n",
      "\n    module = getattr(annotation, '__module__', None)\n    if module == 'typing':\n        if getattr(annotation, '_name', None):\n            qualname = annotation._name\n        elif getattr(annotation, '__qualname__', None):\n            qualname = annotation.__qualname__\n        elif getattr(annotation, '__forward_arg__', None):\n            qualname = annotation.__forward_arg__\n        else:\n            qualname = stringify(annotation.__origin__)  # ex. Union\n    elif module == '_struct' and getattr(annotation, '__qualname__', None) == 'Struct':\n        qualname = 'struct.Struct'\n    elif hasattr(annotation, '__qualname__'):\n        qualname = '%s.%s' % (module, annotation.__qualname__)\n",
      "\n    module = getattr(annotation, '__module__', None)\n    if module == 'typing':\n        if getattr(annotation, '_name', None):\n            qualname = annotation._name\n        elif getattr(annotation, '__qualname__', None):\n            qualname = annotation.__qualname__\n        elif getattr(annotation, '__forward_arg__', None):\n            qualname = annotation.__forward_arg__\n        else:\n            qualname = stringify(annotation.__origin__)  # ex. Union\n    elif module == '_struct' and getattr(annotation, '__qualname__', None) == 'Struct':\n        qualname = 'struct.Struct'\n    elif hasattr(annotation, '__qualname__'):\n        qualname = '%s.%s' % (module, annotation.__qualname__)\n",
      "\n    module = getattr(annotation, '__module__', None)\n    if module == 'typing':\n        if getattr(annotation, '_name', None):\n            qualname = annotation._name\n        elif getattr(annotation, '__qualname__', None):\n            qualname = annotation.__qualname__\n        elif getattr(annotation, '__forward_arg__', None):\n            qualname = annotation.__forward_arg__\n        else:\n            qualname = stringify(annotation.__origin__)  # ex. Union\n    elif module == '_struct' and getattr(annotation, '__qualname__', None) == 'Struct':\n        qualname = 'struct.Struct'\n    elif hasattr(annotation, '__qualname__'):\n        qualname = '%s.%s' % (module, annotation.__qualname__)\n",
      "\n    module = getattr(annotation, '__module__', None)\n    if module == 'typing':\n        if getattr(annotation, '_name', None):\n            qualname = annotation._name\n        elif getattr(annotation, '__qualname__', None):\n            qualname = annotation.__qualname__\n        elif getattr(annotation, '__forward_arg__', None):\n            qualname = annotation.__forward_arg__\n        else:\n            qualname = stringify(annotation.__origin__)  # ex. Union\n    elif module == '_struct' and getattr(annotation, '__qualname__', None) == 'Struct':\n        qualname = 'struct.Struct'\n    elif hasattr(annotation, '__qualname__'):\n        qualname = '%s.%s' % (module, annotation.__qualname__)\n",
      "\n    module = getattr(annotation, '__module__', None)\n    if module == 'typing':\n        if getattr(annotation, '_name', None):\n            qualname = annotation._name\n        elif getattr(annotation, '__qualname__', None):\n            qualname = annotation.__qualname__\n        elif getattr(annotation, '__forward_arg__', None):\n            qualname = annotation.__forward_arg__\n        else:\n            qualname = stringify(annotation.__origin__)  # ex. Union\n    elif module == '_struct' and getattr(annotation, '__qualname__', None) == 'Struct':\n        qualname = 'struct.Struct'\n    elif hasattr(annotation, '__qualname__'):\n        qualname = '%s.%s' % (module, annotation.__qualname__)\n",
      "\n    module = getattr(annotation, '__module__', None)\n    if module == 'typing':\n        if getattr(annotation, '_name', None):\n            qualname = annotation._name\n        elif getattr(annotation, '__qualname__', None):\n            qualname = annotation.__qualname__\n        elif getattr(annotation, '__forward_arg__', None):\n            qualname = annotation.__forward_arg__\n        else:\n            qualname = stringify(annotation.__origin__)  # ex. Union\n    elif module == '_struct' and getattr(annotation, '__qualname__', None) == 'Struct':\n        qualname = 'struct.Struct'\n    elif hasattr(annotation, '__qualname__'):\n        qualname = '%s.%s' % (module, annotation.__qualname__)\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/sphinx/util/typing.py b/sphinx/util/typing.py\nindex 2d4f67bba..f88c6e4cb 100644\n--- a/sphinx/util/typing.py\n+++ b/sphinx/util/typing.py\n@@ -324,6 +324,9 @@ def _stringify_py37(annotation: Any) -> str:\n             qualname = annotation.__forward_arg__\n         else:\n             qualname = stringify(annotation.__origin__)  # ex. Union\n+\n+    elif module == '_struct' and getattr(annotation, '__qualname__', None) == 'Struct':\n+        qualname = 'struct.Struct'\n     elif hasattr(annotation, '__qualname__'):\n         qualname = '%s.%s' % (module, annotation.__qualname__)\n     elif hasattr(annotation, '__origin__'):\n",
    "variant_0": "diff --git a/sphinx/util/typing.py b/sphinx/util/typing.py\nindex 2d4f67bba..3fcd53e7c 100644\n--- a/sphinx/util/typing.py\n+++ b/sphinx/util/typing.py\n@@ -324,6 +324,19 @@ def _stringify_py37(annotation: Any) -> str:\n             qualname = annotation.__forward_arg__\n         else:\n             qualname = stringify(annotation.__origin__)  # ex. Union\n+\n+    module = getattr(annotation, '__module__', None)\n+    if module == 'typing':\n+        if getattr(annotation, '_name', None):\n+            qualname = annotation._name\n+        elif getattr(annotation, '__qualname__', None):\n+            qualname = annotation.__qualname__\n+        elif getattr(annotation, '__forward_arg__', None):\n+            qualname = annotation.__forward_arg__\n+        else:\n+            qualname = stringify(annotation.__origin__)  # ex. Union\n+    elif module == '_struct' and getattr(annotation, '__qualname__', None) == 'Struct':\n+        qualname = 'struct.Struct'\n     elif hasattr(annotation, '__qualname__'):\n         qualname = '%s.%s' % (module, annotation.__qualname__)\n     elif hasattr(annotation, '__origin__'):\n",
    "variant_1": "diff --git a/sphinx/util/typing.py b/sphinx/util/typing.py\nindex 2d4f67bba..3fcd53e7c 100644\n--- a/sphinx/util/typing.py\n+++ b/sphinx/util/typing.py\n@@ -324,6 +324,19 @@ def _stringify_py37(annotation: Any) -> str:\n             qualname = annotation.__forward_arg__\n         else:\n             qualname = stringify(annotation.__origin__)  # ex. Union\n+\n+    module = getattr(annotation, '__module__', None)\n+    if module == 'typing':\n+        if getattr(annotation, '_name', None):\n+            qualname = annotation._name\n+        elif getattr(annotation, '__qualname__', None):\n+            qualname = annotation.__qualname__\n+        elif getattr(annotation, '__forward_arg__', None):\n+            qualname = annotation.__forward_arg__\n+        else:\n+            qualname = stringify(annotation.__origin__)  # ex. Union\n+    elif module == '_struct' and getattr(annotation, '__qualname__', None) == 'Struct':\n+        qualname = 'struct.Struct'\n     elif hasattr(annotation, '__qualname__'):\n         qualname = '%s.%s' % (module, annotation.__qualname__)\n     elif hasattr(annotation, '__origin__'):\n",
    "variant_2": "diff --git a/sphinx/util/typing.py b/sphinx/util/typing.py\nindex 2d4f67bba..3fcd53e7c 100644\n--- a/sphinx/util/typing.py\n+++ b/sphinx/util/typing.py\n@@ -324,6 +324,19 @@ def _stringify_py37(annotation: Any) -> str:\n             qualname = annotation.__forward_arg__\n         else:\n             qualname = stringify(annotation.__origin__)  # ex. Union\n+\n+    module = getattr(annotation, '__module__', None)\n+    if module == 'typing':\n+        if getattr(annotation, '_name', None):\n+            qualname = annotation._name\n+        elif getattr(annotation, '__qualname__', None):\n+            qualname = annotation.__qualname__\n+        elif getattr(annotation, '__forward_arg__', None):\n+            qualname = annotation.__forward_arg__\n+        else:\n+            qualname = stringify(annotation.__origin__)  # ex. Union\n+    elif module == '_struct' and getattr(annotation, '__qualname__', None) == 'Struct':\n+        qualname = 'struct.Struct'\n     elif hasattr(annotation, '__qualname__'):\n         qualname = '%s.%s' % (module, annotation.__qualname__)\n     elif hasattr(annotation, '__origin__'):\n",
    "variant_3": "diff --git a/sphinx/util/typing.py b/sphinx/util/typing.py\nindex 2d4f67bba..3fcd53e7c 100644\n--- a/sphinx/util/typing.py\n+++ b/sphinx/util/typing.py\n@@ -324,6 +324,19 @@ def _stringify_py37(annotation: Any) -> str:\n             qualname = annotation.__forward_arg__\n         else:\n             qualname = stringify(annotation.__origin__)  # ex. Union\n+\n+    module = getattr(annotation, '__module__', None)\n+    if module == 'typing':\n+        if getattr(annotation, '_name', None):\n+            qualname = annotation._name\n+        elif getattr(annotation, '__qualname__', None):\n+            qualname = annotation.__qualname__\n+        elif getattr(annotation, '__forward_arg__', None):\n+            qualname = annotation.__forward_arg__\n+        else:\n+            qualname = stringify(annotation.__origin__)  # ex. Union\n+    elif module == '_struct' and getattr(annotation, '__qualname__', None) == 'Struct':\n+        qualname = 'struct.Struct'\n     elif hasattr(annotation, '__qualname__'):\n         qualname = '%s.%s' % (module, annotation.__qualname__)\n     elif hasattr(annotation, '__origin__'):\n",
    "variant_4": "diff --git a/sphinx/util/typing.py b/sphinx/util/typing.py\nindex 2d4f67bba..3fcd53e7c 100644\n--- a/sphinx/util/typing.py\n+++ b/sphinx/util/typing.py\n@@ -324,6 +324,19 @@ def _stringify_py37(annotation: Any) -> str:\n             qualname = annotation.__forward_arg__\n         else:\n             qualname = stringify(annotation.__origin__)  # ex. Union\n+\n+    module = getattr(annotation, '__module__', None)\n+    if module == 'typing':\n+        if getattr(annotation, '_name', None):\n+            qualname = annotation._name\n+        elif getattr(annotation, '__qualname__', None):\n+            qualname = annotation.__qualname__\n+        elif getattr(annotation, '__forward_arg__', None):\n+            qualname = annotation.__forward_arg__\n+        else:\n+            qualname = stringify(annotation.__origin__)  # ex. Union\n+    elif module == '_struct' and getattr(annotation, '__qualname__', None) == 'Struct':\n+        qualname = 'struct.Struct'\n     elif hasattr(annotation, '__qualname__'):\n         qualname = '%s.%s' % (module, annotation.__qualname__)\n     elif hasattr(annotation, '__origin__'):\n",
    "variant_5": "diff --git a/sphinx/util/typing.py b/sphinx/util/typing.py\nindex 2d4f67bba..3fcd53e7c 100644\n--- a/sphinx/util/typing.py\n+++ b/sphinx/util/typing.py\n@@ -324,6 +324,19 @@ def _stringify_py37(annotation: Any) -> str:\n             qualname = annotation.__forward_arg__\n         else:\n             qualname = stringify(annotation.__origin__)  # ex. Union\n+\n+    module = getattr(annotation, '__module__', None)\n+    if module == 'typing':\n+        if getattr(annotation, '_name', None):\n+            qualname = annotation._name\n+        elif getattr(annotation, '__qualname__', None):\n+            qualname = annotation.__qualname__\n+        elif getattr(annotation, '__forward_arg__', None):\n+            qualname = annotation.__forward_arg__\n+        else:\n+            qualname = stringify(annotation.__origin__)  # ex. Union\n+    elif module == '_struct' and getattr(annotation, '__qualname__', None) == 'Struct':\n+        qualname = 'struct.Struct'\n     elif hasattr(annotation, '__qualname__'):\n         qualname = '%s.%s' % (module, annotation.__qualname__)\n     elif hasattr(annotation, '__origin__'):\n",
    "variant_6": "diff --git a/sphinx/util/typing.py b/sphinx/util/typing.py\nindex 2d4f67bba..3fcd53e7c 100644\n--- a/sphinx/util/typing.py\n+++ b/sphinx/util/typing.py\n@@ -324,6 +324,19 @@ def _stringify_py37(annotation: Any) -> str:\n             qualname = annotation.__forward_arg__\n         else:\n             qualname = stringify(annotation.__origin__)  # ex. Union\n+\n+    module = getattr(annotation, '__module__', None)\n+    if module == 'typing':\n+        if getattr(annotation, '_name', None):\n+            qualname = annotation._name\n+        elif getattr(annotation, '__qualname__', None):\n+            qualname = annotation.__qualname__\n+        elif getattr(annotation, '__forward_arg__', None):\n+            qualname = annotation.__forward_arg__\n+        else:\n+            qualname = stringify(annotation.__origin__)  # ex. Union\n+    elif module == '_struct' and getattr(annotation, '__qualname__', None) == 'Struct':\n+        qualname = 'struct.Struct'\n     elif hasattr(annotation, '__qualname__'):\n         qualname = '%s.%s' % (module, annotation.__qualname__)\n     elif hasattr(annotation, '__origin__'):\n",
    "variant_7": "diff --git a/sphinx/util/typing.py b/sphinx/util/typing.py\nindex 2d4f67bba..3fcd53e7c 100644\n--- a/sphinx/util/typing.py\n+++ b/sphinx/util/typing.py\n@@ -324,6 +324,19 @@ def _stringify_py37(annotation: Any) -> str:\n             qualname = annotation.__forward_arg__\n         else:\n             qualname = stringify(annotation.__origin__)  # ex. Union\n+\n+    module = getattr(annotation, '__module__', None)\n+    if module == 'typing':\n+        if getattr(annotation, '_name', None):\n+            qualname = annotation._name\n+        elif getattr(annotation, '__qualname__', None):\n+            qualname = annotation.__qualname__\n+        elif getattr(annotation, '__forward_arg__', None):\n+            qualname = annotation.__forward_arg__\n+        else:\n+            qualname = stringify(annotation.__origin__)  # ex. Union\n+    elif module == '_struct' and getattr(annotation, '__qualname__', None) == 'Struct':\n+        qualname = 'struct.Struct'\n     elif hasattr(annotation, '__qualname__'):\n         qualname = '%s.%s' % (module, annotation.__qualname__)\n     elif hasattr(annotation, '__origin__'):\n",
    "variant_8": "diff --git a/sphinx/util/typing.py b/sphinx/util/typing.py\nindex 2d4f67bba..3fcd53e7c 100644\n--- a/sphinx/util/typing.py\n+++ b/sphinx/util/typing.py\n@@ -324,6 +324,19 @@ def _stringify_py37(annotation: Any) -> str:\n             qualname = annotation.__forward_arg__\n         else:\n             qualname = stringify(annotation.__origin__)  # ex. Union\n+\n+    module = getattr(annotation, '__module__', None)\n+    if module == 'typing':\n+        if getattr(annotation, '_name', None):\n+            qualname = annotation._name\n+        elif getattr(annotation, '__qualname__', None):\n+            qualname = annotation.__qualname__\n+        elif getattr(annotation, '__forward_arg__', None):\n+            qualname = annotation.__forward_arg__\n+        else:\n+            qualname = stringify(annotation.__origin__)  # ex. Union\n+    elif module == '_struct' and getattr(annotation, '__qualname__', None) == 'Struct':\n+        qualname = 'struct.Struct'\n     elif hasattr(annotation, '__qualname__'):\n         qualname = '%s.%s' % (module, annotation.__qualname__)\n     elif hasattr(annotation, '__origin__'):\n"
  }
}