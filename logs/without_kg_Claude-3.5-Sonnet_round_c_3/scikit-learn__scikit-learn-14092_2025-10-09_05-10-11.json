{
  "zero_patches": {
    "Location 1 (/root/hy/projects_3/scikit-learn/sklearn/neighbors/nca.py lines 302-302)": "\n            check_scalar(self.n_components, 'n_components', numbers.Integral, 1)\n",
    "Location 2 (/root/hy/projects_3/scikit-learn/sklearn/neighbors/nca.py lines 322-322)": "\n        check_scalar(self.tol, 'tol', numbers.Real, 0.)\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects_3/scikit-learn/sklearn/neighbors/nca.py lines 302-302)": [
      "\n# Check the preferred dimensionality of the projected space\nif self.n_components is not None:\n    check_scalar(self.n_components, 'n_components', numbers.Integral, 1)\n\n    if self.n_components > X.shape[1]:\n        raise ValueError('The preferred dimensionality of the '\n                         'projected space `n_components` ({}) cannot '\n                         'be greater than the given data '\n                         'dimensionality ({})!'\n                         .format(self.n_components, X.shape[1]))\n",
      "\n        # Check the preferred dimensionality of the projected space\n        if self.n_components is not None:\n            check_scalar(self.n_components, 'n_components', numbers.Integral, 1)\n\n            if self.n_components > X.shape[1]:\n                raise ValueError('The preferred dimensionality of the '\n                                 'projected space `n_components` ({}) cannot '\n                                 'be greater than the given data '\n                                 'dimensionality ({})!'\n                                 .format(self.n_components, X.shape[1]))\n",
      "\n            check_scalar(self.n_components, 'n_components', numbers.Integral, 1)\n",
      "\n            check_scalar(self.n_components, 'n_components', numbers.Integral, 1)\n",
      "\n            check_scalar(self.n_components, 'n_components', numbers.Integral, 1)\n",
      "\n        # Check the preferred dimensionality of the projected space\n        if self.n_components is not None:\n            check_scalar(self.n_components, 'n_components', numbers.Integral, 1)\n\n            if self.n_components > X.shape[1]:\n                raise ValueError('The preferred dimensionality of the '\n                                 'projected space `n_components` ({}) cannot '\n                                 'be greater than the given data '\n                                 'dimensionality ({})!'\n                                 .format(self.n_components, X.shape[1]))\n",
      "\n            check_scalar(self.n_components, 'n_components', numbers.Integral, 1)\n",
      "\n        # Check the preferred dimensionality of the projected space\n        if self.n_components is not None:\n            check_scalar(self.n_components, 'n_components', numbers.Integral, 1)\n\n            if self.n_components > X.shape[1]:\n                raise ValueError('The preferred dimensionality of the '\n                                 'projected space `n_components` ({}) cannot '\n                                 'be greater than the given data '\n                                 'dimensionality ({})!'\n                                 .format(self.n_components, X.shape[1]))\n"
    ],
    "Location 2 (/root/hy/projects_3/scikit-learn/sklearn/neighbors/nca.py lines 322-322)": [
      "\n        check_scalar(self.tol, 'tol', numbers.Real, 0.)\n",
      "\n        check_scalar(self.tol, 'tol', numbers.Real, 0.)\n",
      "\n        check_scalar(self.tol, 'tol', numbers.Real, 0.)\n",
      "\n        check_scalar(self.tol, 'tol', numbers.Real, 0.)\n",
      "\n        check_scalar(self.tol, 'tol', numbers.Real, 0.)\n",
      "\n        check_scalar(self.tol, 'tol', numbers.Real, 0.)\n",
      "\n        check_scalar(self.tol, 'tol', numbers.Real, 0.)\n",
      "\n        check_scalar(self.tol, 'tol', numbers.Real, 0.)\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/sklearn/neighbors/nca.py b/sklearn/neighbors/nca.py\nindex 1d278b6e1..77bbf917c 100644\n--- a/sklearn/neighbors/nca.py\n+++ b/sklearn/neighbors/nca.py\n@@ -299,7 +299,8 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n \n         # Check the preferred dimensionality of the projected space\n         if self.n_components is not None:\n-            check_scalar(self.n_components, 'n_components', int, 1)\n+\n+import numbers\n \n             if self.n_components > X.shape[1]:\n                 raise ValueError('The preferred dimensionality of the '\n@@ -319,7 +320,8 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n                                          self.components_.shape[1]))\n \n         check_scalar(self.max_iter, 'max_iter', int, 1)\n-        check_scalar(self.tol, 'tol', float, 0.)\n+\n+            check_scalar(self.n_components, 'n_components', numbers.Integral, 1)\n         check_scalar(self.verbose, 'verbose', int, 0)\n \n         if self.callback is not None:\n",
    "variant_0": "diff --git a/sklearn/neighbors/nca.py b/sklearn/neighbors/nca.py\nindex 1d278b6e1..0aaf547be 100644\n--- a/sklearn/neighbors/nca.py\n+++ b/sklearn/neighbors/nca.py\n@@ -299,7 +299,8 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n \n         # Check the preferred dimensionality of the projected space\n         if self.n_components is not None:\n-            check_scalar(self.n_components, 'n_components', int, 1)\n+\n+            check_scalar(self.n_components, 'n_components', numbers.Integral, 1)\n \n             if self.n_components > X.shape[1]:\n                 raise ValueError('The preferred dimensionality of the '\n@@ -319,7 +320,8 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n                                          self.components_.shape[1]))\n \n         check_scalar(self.max_iter, 'max_iter', int, 1)\n-        check_scalar(self.tol, 'tol', float, 0.)\n+\n+        check_scalar(self.tol, 'tol', numbers.Real, 0.)\n         check_scalar(self.verbose, 'verbose', int, 0)\n \n         if self.callback is not None:\n",
    "variant_1": "diff --git a/sklearn/neighbors/nca.py b/sklearn/neighbors/nca.py\nindex 1d278b6e1..1fb4d641d 100644\n--- a/sklearn/neighbors/nca.py\n+++ b/sklearn/neighbors/nca.py\n@@ -299,7 +299,17 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n \n         # Check the preferred dimensionality of the projected space\n         if self.n_components is not None:\n-            check_scalar(self.n_components, 'n_components', int, 1)\n+\n+# Check the preferred dimensionality of the projected space\n+if self.n_components is not None:\n+    check_scalar(self.n_components, 'n_components', numbers.Integral, 1)\n+\n+    if self.n_components > X.shape[1]:\n+        raise ValueError('The preferred dimensionality of the '\n+                         'projected space `n_components` ({}) cannot '\n+                         'be greater than the given data '\n+                         'dimensionality ({})!'\n+                         .format(self.n_components, X.shape[1]))\n \n             if self.n_components > X.shape[1]:\n                 raise ValueError('The preferred dimensionality of the '\n@@ -319,7 +329,8 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n                                          self.components_.shape[1]))\n \n         check_scalar(self.max_iter, 'max_iter', int, 1)\n-        check_scalar(self.tol, 'tol', float, 0.)\n+\n+        check_scalar(self.tol, 'tol', numbers.Real, 0.)\n         check_scalar(self.verbose, 'verbose', int, 0)\n \n         if self.callback is not None:\n",
    "variant_2": "diff --git a/sklearn/neighbors/nca.py b/sklearn/neighbors/nca.py\nindex 1d278b6e1..4ea0657e5 100644\n--- a/sklearn/neighbors/nca.py\n+++ b/sklearn/neighbors/nca.py\n@@ -299,7 +299,17 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n \n         # Check the preferred dimensionality of the projected space\n         if self.n_components is not None:\n-            check_scalar(self.n_components, 'n_components', int, 1)\n+\n+        # Check the preferred dimensionality of the projected space\n+        if self.n_components is not None:\n+            check_scalar(self.n_components, 'n_components', numbers.Integral, 1)\n+\n+            if self.n_components > X.shape[1]:\n+                raise ValueError('The preferred dimensionality of the '\n+                                 'projected space `n_components` ({}) cannot '\n+                                 'be greater than the given data '\n+                                 'dimensionality ({})!'\n+                                 .format(self.n_components, X.shape[1]))\n \n             if self.n_components > X.shape[1]:\n                 raise ValueError('The preferred dimensionality of the '\n@@ -319,7 +329,8 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n                                          self.components_.shape[1]))\n \n         check_scalar(self.max_iter, 'max_iter', int, 1)\n-        check_scalar(self.tol, 'tol', float, 0.)\n+\n+        check_scalar(self.tol, 'tol', numbers.Real, 0.)\n         check_scalar(self.verbose, 'verbose', int, 0)\n \n         if self.callback is not None:\n",
    "variant_3": "diff --git a/sklearn/neighbors/nca.py b/sklearn/neighbors/nca.py\nindex 1d278b6e1..0aaf547be 100644\n--- a/sklearn/neighbors/nca.py\n+++ b/sklearn/neighbors/nca.py\n@@ -299,7 +299,8 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n \n         # Check the preferred dimensionality of the projected space\n         if self.n_components is not None:\n-            check_scalar(self.n_components, 'n_components', int, 1)\n+\n+            check_scalar(self.n_components, 'n_components', numbers.Integral, 1)\n \n             if self.n_components > X.shape[1]:\n                 raise ValueError('The preferred dimensionality of the '\n@@ -319,7 +320,8 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n                                          self.components_.shape[1]))\n \n         check_scalar(self.max_iter, 'max_iter', int, 1)\n-        check_scalar(self.tol, 'tol', float, 0.)\n+\n+        check_scalar(self.tol, 'tol', numbers.Real, 0.)\n         check_scalar(self.verbose, 'verbose', int, 0)\n \n         if self.callback is not None:\n",
    "variant_4": "diff --git a/sklearn/neighbors/nca.py b/sklearn/neighbors/nca.py\nindex 1d278b6e1..0aaf547be 100644\n--- a/sklearn/neighbors/nca.py\n+++ b/sklearn/neighbors/nca.py\n@@ -299,7 +299,8 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n \n         # Check the preferred dimensionality of the projected space\n         if self.n_components is not None:\n-            check_scalar(self.n_components, 'n_components', int, 1)\n+\n+            check_scalar(self.n_components, 'n_components', numbers.Integral, 1)\n \n             if self.n_components > X.shape[1]:\n                 raise ValueError('The preferred dimensionality of the '\n@@ -319,7 +320,8 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n                                          self.components_.shape[1]))\n \n         check_scalar(self.max_iter, 'max_iter', int, 1)\n-        check_scalar(self.tol, 'tol', float, 0.)\n+\n+        check_scalar(self.tol, 'tol', numbers.Real, 0.)\n         check_scalar(self.verbose, 'verbose', int, 0)\n \n         if self.callback is not None:\n",
    "variant_5": "diff --git a/sklearn/neighbors/nca.py b/sklearn/neighbors/nca.py\nindex 1d278b6e1..0aaf547be 100644\n--- a/sklearn/neighbors/nca.py\n+++ b/sklearn/neighbors/nca.py\n@@ -299,7 +299,8 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n \n         # Check the preferred dimensionality of the projected space\n         if self.n_components is not None:\n-            check_scalar(self.n_components, 'n_components', int, 1)\n+\n+            check_scalar(self.n_components, 'n_components', numbers.Integral, 1)\n \n             if self.n_components > X.shape[1]:\n                 raise ValueError('The preferred dimensionality of the '\n@@ -319,7 +320,8 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n                                          self.components_.shape[1]))\n \n         check_scalar(self.max_iter, 'max_iter', int, 1)\n-        check_scalar(self.tol, 'tol', float, 0.)\n+\n+        check_scalar(self.tol, 'tol', numbers.Real, 0.)\n         check_scalar(self.verbose, 'verbose', int, 0)\n \n         if self.callback is not None:\n",
    "variant_6": "diff --git a/sklearn/neighbors/nca.py b/sklearn/neighbors/nca.py\nindex 1d278b6e1..4ea0657e5 100644\n--- a/sklearn/neighbors/nca.py\n+++ b/sklearn/neighbors/nca.py\n@@ -299,7 +299,17 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n \n         # Check the preferred dimensionality of the projected space\n         if self.n_components is not None:\n-            check_scalar(self.n_components, 'n_components', int, 1)\n+\n+        # Check the preferred dimensionality of the projected space\n+        if self.n_components is not None:\n+            check_scalar(self.n_components, 'n_components', numbers.Integral, 1)\n+\n+            if self.n_components > X.shape[1]:\n+                raise ValueError('The preferred dimensionality of the '\n+                                 'projected space `n_components` ({}) cannot '\n+                                 'be greater than the given data '\n+                                 'dimensionality ({})!'\n+                                 .format(self.n_components, X.shape[1]))\n \n             if self.n_components > X.shape[1]:\n                 raise ValueError('The preferred dimensionality of the '\n@@ -319,7 +329,8 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n                                          self.components_.shape[1]))\n \n         check_scalar(self.max_iter, 'max_iter', int, 1)\n-        check_scalar(self.tol, 'tol', float, 0.)\n+\n+        check_scalar(self.tol, 'tol', numbers.Real, 0.)\n         check_scalar(self.verbose, 'verbose', int, 0)\n \n         if self.callback is not None:\n",
    "variant_7": "diff --git a/sklearn/neighbors/nca.py b/sklearn/neighbors/nca.py\nindex 1d278b6e1..0aaf547be 100644\n--- a/sklearn/neighbors/nca.py\n+++ b/sklearn/neighbors/nca.py\n@@ -299,7 +299,8 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n \n         # Check the preferred dimensionality of the projected space\n         if self.n_components is not None:\n-            check_scalar(self.n_components, 'n_components', int, 1)\n+\n+            check_scalar(self.n_components, 'n_components', numbers.Integral, 1)\n \n             if self.n_components > X.shape[1]:\n                 raise ValueError('The preferred dimensionality of the '\n@@ -319,7 +320,8 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n                                          self.components_.shape[1]))\n \n         check_scalar(self.max_iter, 'max_iter', int, 1)\n-        check_scalar(self.tol, 'tol', float, 0.)\n+\n+        check_scalar(self.tol, 'tol', numbers.Real, 0.)\n         check_scalar(self.verbose, 'verbose', int, 0)\n \n         if self.callback is not None:\n",
    "variant_8": "diff --git a/sklearn/neighbors/nca.py b/sklearn/neighbors/nca.py\nindex 1d278b6e1..4ea0657e5 100644\n--- a/sklearn/neighbors/nca.py\n+++ b/sklearn/neighbors/nca.py\n@@ -299,7 +299,17 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n \n         # Check the preferred dimensionality of the projected space\n         if self.n_components is not None:\n-            check_scalar(self.n_components, 'n_components', int, 1)\n+\n+        # Check the preferred dimensionality of the projected space\n+        if self.n_components is not None:\n+            check_scalar(self.n_components, 'n_components', numbers.Integral, 1)\n+\n+            if self.n_components > X.shape[1]:\n+                raise ValueError('The preferred dimensionality of the '\n+                                 'projected space `n_components` ({}) cannot '\n+                                 'be greater than the given data '\n+                                 'dimensionality ({})!'\n+                                 .format(self.n_components, X.shape[1]))\n \n             if self.n_components > X.shape[1]:\n                 raise ValueError('The preferred dimensionality of the '\n@@ -319,7 +329,8 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n                                          self.components_.shape[1]))\n \n         check_scalar(self.max_iter, 'max_iter', int, 1)\n-        check_scalar(self.tol, 'tol', float, 0.)\n+\n+        check_scalar(self.tol, 'tol', numbers.Real, 0.)\n         check_scalar(self.verbose, 'verbose', int, 0)\n \n         if self.callback is not None:\n"
  }
}