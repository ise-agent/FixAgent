{
  "zero_patches": {
    "Location 1 (/root/hy/projects_3/matplotlib/lib/matplotlib/style/core.py lines 254-261)": "\ndef reload_library():\n    \"\"\"Reload the style library.\"\"\"\n    global library\n    library = update_user_library(_base_library)\n    \n    # Add deprecated seaborn style name aliases\n    deprecated_seaborn_names = [\n        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n        'seaborn-white', 'seaborn-whitegrid'\n    ]\n    \n    for deprecated_name in deprecated_seaborn_names:\n        if deprecated_name == 'seaborn':\n            new_name = 'seaborn-v0_8'\n        else:\n            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-')\n        \n        if new_name in library:\n            library[deprecated_name] = library[new_name]\n    \n    available[:] = sorted(library.keys())\n\n\nreload_library()\n",
    "Location 2 (/root/hy/projects_3/matplotlib/lib/matplotlib/style/core.py lines 113-141)": "\ndef fix_style(s):\n    if isinstance(s, str):\n        s = style_alias.get(s, s)\n        if s in [\n            \"seaborn\",\n            \"seaborn-bright\",\n            \"seaborn-colorblind\",\n            \"seaborn-dark\",\n            \"seaborn-darkgrid\",\n            \"seaborn-dark-palette\",\n            \"seaborn-deep\",\n            \"seaborn-muted\",\n            \"seaborn-notebook\",\n            \"seaborn-paper\",\n            \"seaborn-pastel\",\n            \"seaborn-poster\",\n            \"seaborn-talk\",\n            \"seaborn-ticks\",\n            \"seaborn-white\",\n            \"seaborn-whitegrid\",\n        ]:\n            _api.warn_deprecated(\n                \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n                \"are deprecated since %(since)s, as they no longer \"\n                \"correspond to the styles shipped by seaborn. However, \"\n                \"they will remain available as 'seaborn-v0_8-<style>'. \"\n                \"Alternatively, directly use the seaborn API instead.\")\n            s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n    return s\n",
    "Location 3 (/root/hy/projects_3/matplotlib/lib/matplotlib/style/core.py lines 249-253)": "\ndef reload_library():\n    \"\"\"Reload the style library.\"\"\"\n    global library\n    library = update_user_library(_base_library)\n    \n    # Add deprecated seaborn style name aliases\n    deprecated_seaborn_names = [\n        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n        'seaborn-white', 'seaborn-whitegrid'\n    ]\n    \n    for deprecated_name in deprecated_seaborn_names:\n        if deprecated_name == 'seaborn':\n            new_name = 'seaborn-v0_8'\n        else:\n            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-', 1)\n        \n        if new_name in library:\n            library[deprecated_name] = library[new_name]\n    \n    available[:] = sorted(library.keys())\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects_3/matplotlib/lib/matplotlib/style/core.py lines 254-261)": [
      "\ndef reload_library():\n    \"\"\"Reload the style library.\"\"\"\n    global library\n    library = update_user_library(_base_library)\n    \n    # Add deprecated seaborn style name aliases for backward compatibility\n    deprecated_seaborn_names = [\n        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n        'seaborn-white', 'seaborn-whitegrid'\n    ]\n    \n    for deprecated_name in deprecated_seaborn_names:\n        if deprecated_name == 'seaborn':\n            new_name = 'seaborn-v0_8'\n        else:\n            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-', 1)\n        \n        if new_name in library:\n            library[deprecated_name] = library[new_name]\n    \n    available[:] = sorted(library.keys())\n\n\nreload_library()\n",
      "\ndef reload_library():\n    \"\"\"Reload the style library.\"\"\"\n    global library\n    library = update_user_library(_base_library)\n    \n    # Add deprecated seaborn style name aliases for direct library access\n    deprecated_seaborn_names = [\n        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n        'seaborn-white', 'seaborn-whitegrid'\n    ]\n    \n    for deprecated_name in deprecated_seaborn_names:\n        if deprecated_name == 'seaborn':\n            v0_8_name = 'seaborn-v0_8'\n        else:\n            v0_8_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-', 1)\n        \n        if v0_8_name in library:\n            library[deprecated_name] = library[v0_8_name]\n    \n    available[:] = sorted(library.keys())\n\n\nreload_library()\n",
      "\ndef reload_library():\n    \"\"\"Reload the style library.\"\"\"\n    global library\n    library = update_user_library(_base_library)\n    \n    # Add deprecated seaborn style name aliases\n    deprecated_seaborn_names = [\n        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n        'seaborn-white', 'seaborn-whitegrid'\n    ]\n    \n    for deprecated_name in deprecated_seaborn_names:\n        if deprecated_name == 'seaborn':\n            new_name = 'seaborn-v0_8'\n        else:\n            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-')\n        \n        if new_name in library:\n            library[deprecated_name] = library[new_name]\n    \n    available[:] = sorted(library.keys())\n\n\nreload_library()\n",
      "\ndef reload_library():\n    \"\"\"Reload the style library.\"\"\"\n    global library\n    library = update_user_library(_base_library)\n    \n    # Add deprecated seaborn style name aliases for backward compatibility\n    deprecated_seaborn_names = [\n        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n        'seaborn-white', 'seaborn-whitegrid'\n    ]\n    \n    for deprecated_name in deprecated_seaborn_names:\n        if deprecated_name == 'seaborn':\n            new_name = 'seaborn-v0_8'\n        else:\n            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-')\n        \n        if new_name in library:\n            library[deprecated_name] = library[new_name]\n    \n    available[:] = sorted(library.keys())\n\n\nreload_library()\n",
      "\ndef reload_library():\n    \"\"\"Reload the style library.\"\"\"\n    global library\n    library = update_user_library(_base_library)\n    \n    # Add deprecated seaborn style name aliases\n    deprecated_seaborn_names = [\n        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n        'seaborn-white', 'seaborn-whitegrid'\n    ]\n    \n    for deprecated_name in deprecated_seaborn_names:\n        if deprecated_name == 'seaborn':\n            new_name = 'seaborn-v0_8'\n        else:\n            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-')\n        \n        if new_name in library:\n            library[deprecated_name] = library[new_name]\n    \n    available[:] = sorted(library.keys())\n\n\nreload_library()\n",
      "\ndef reload_library():\n    \"\"\"Reload the style library.\"\"\"\n    global library\n    library = update_user_library(_base_library)\n    \n    # Add deprecated seaborn style name aliases\n    deprecated_seaborn_names = [\n        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n        'seaborn-white', 'seaborn-whitegrid'\n    ]\n    \n    for old_name in deprecated_seaborn_names:\n        if old_name == 'seaborn':\n            new_name = 'seaborn-v0_8'\n        else:\n            new_name = old_name.replace('seaborn-', 'seaborn-v0_8-')\n        \n        if new_name in library:\n            library[old_name] = library[new_name]\n    \n    available[:] = sorted(library.keys())\n\n\nreload_library()\n",
      "\ndef reload_library():\n    \"\"\"Reload the style library.\"\"\"\n    global library\n    library = update_user_library(_base_library)\n    \n    # Add deprecated seaborn style name aliases\n    deprecated_seaborn_names = [\n        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk',\n        'seaborn-ticks', 'seaborn-white', 'seaborn-whitegrid'\n    ]\n    \n    for deprecated_name in deprecated_seaborn_names:\n        if deprecated_name == 'seaborn':\n            new_name = 'seaborn-v0_8'\n        else:\n            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-')\n        \n        if new_name in library:\n            library[deprecated_name] = library[new_name]\n    \n    available[:] = sorted(library.keys())\n\n\nreload_library()\n",
      "\ndef reload_library():\n    \"\"\"Reload the style library.\"\"\"\n    global library\n    library = update_user_library(_base_library)\n    \n    # Add deprecated seaborn style name aliases\n    deprecated_seaborn_names = [\n        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk',\n        'seaborn-ticks', 'seaborn-white', 'seaborn-whitegrid'\n    ]\n    \n    for deprecated_name in deprecated_seaborn_names:\n        if deprecated_name == 'seaborn':\n            new_name = 'seaborn-v0_8'\n        else:\n            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-', 1)\n        \n        if new_name in library:\n            library[deprecated_name] = library[new_name]\n    \n    available[:] = sorted(library.keys())\n\n\nreload_library()\n"
    ],
    "Location 2 (/root/hy/projects_3/matplotlib/lib/matplotlib/style/core.py lines 113-141)": [
      "\ndef fix_style(s):\n    if isinstance(s, str):\n        s = style_alias.get(s, s)\n        if s in [\n            \"seaborn\",\n            \"seaborn-bright\",\n            \"seaborn-colorblind\",\n            \"seaborn-dark\",\n            \"seaborn-darkgrid\",\n            \"seaborn-dark-palette\",\n            \"seaborn-deep\",\n            \"seaborn-muted\",\n            \"seaborn-notebook\",\n            \"seaborn-paper\",\n            \"seaborn-pastel\",\n            \"seaborn-poster\",\n            \"seaborn-talk\",\n            \"seaborn-ticks\",\n            \"seaborn-white\",\n            \"seaborn-whitegrid\",\n        ]:\n            _api.warn_deprecated(\n                \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n                \"are deprecated since %(since)s, as they no longer \"\n                \"correspond to the styles shipped by seaborn. However, \"\n                \"they will remain available as 'seaborn-v0_8-<style>'. \"\n                \"Alternatively, directly use the seaborn API instead.\")\n            s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n    return s\n\n\n# Extract deprecated seaborn styles for reuse\n_deprecated_seaborn_styles = [\n    \"seaborn\",\n    \"seaborn-bright\",\n    \"seaborn-colorblind\",\n    \"seaborn-dark\",\n    \"seaborn-darkgrid\",\n    \"seaborn-dark-palette\",\n    \"seaborn-deep\",\n    \"seaborn-muted\",\n    \"seaborn-notebook\",\n    \"seaborn-paper\",\n    \"seaborn-pastel\",\n    \"seaborn-poster\",\n    \"seaborn-talk\",\n    \"seaborn-ticks\",\n    \"seaborn-white\",\n    \"seaborn-whitegrid\",\n]\n",
      "\ndef fix_style(s):\n    if isinstance(s, str):\n        s = style_alias.get(s, s)\n        if s in [\n            \"seaborn\",\n            \"seaborn-bright\",\n            \"seaborn-colorblind\",\n            \"seaborn-dark\",\n            \"seaborn-darkgrid\",\n            \"seaborn-dark-palette\",\n            \"seaborn-deep\",\n            \"seaborn-muted\",\n            \"seaborn-notebook\",\n            \"seaborn-paper\",\n            \"seaborn-pastel\",\n            \"seaborn-poster\",\n            \"seaborn-talk\",\n            \"seaborn-ticks\",\n            \"seaborn-white\",\n            \"seaborn-whitegrid\",\n        ]:\n            _api.warn_deprecated(\n                \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n                \"are deprecated since %(since)s, as they no longer \"\n                \"correspond to the styles shipped by seaborn. However, \"\n                \"they will remain available as 'seaborn-v0_8-<style>'. \"\n                \"Alternatively, directly use the seaborn API instead.\")\n            s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n    return s\n",
      "\ndef fix_style(s):\n    if isinstance(s, str):\n        s = style_alias.get(s, s)\n        if s in [\n            \"seaborn\",\n            \"seaborn-bright\",\n            \"seaborn-colorblind\",\n            \"seaborn-dark\",\n            \"seaborn-darkgrid\",\n            \"seaborn-dark-palette\",\n            \"seaborn-deep\",\n            \"seaborn-muted\",\n            \"seaborn-notebook\",\n            \"seaborn-paper\",\n            \"seaborn-pastel\",\n            \"seaborn-poster\",\n            \"seaborn-talk\",\n            \"seaborn-ticks\",\n            \"seaborn-white\",\n            \"seaborn-whitegrid\",\n        ]:\n            _api.warn_deprecated(\n                \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n                \"are deprecated since %(since)s, as they no longer \"\n                \"correspond to the styles shipped by seaborn. However, \"\n                \"they will remain available as 'seaborn-v0_8-<style>'. \"\n                \"Alternatively, directly use the seaborn API instead.\")\n            s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n    return s\n",
      "\ndef fix_style(s):\n    if isinstance(s, str):\n        s = style_alias.get(s, s)\n        if s in [\n            \"seaborn\",\n            \"seaborn-bright\",\n            \"seaborn-colorblind\",\n            \"seaborn-dark\",\n            \"seaborn-darkgrid\",\n            \"seaborn-dark-palette\",\n            \"seaborn-deep\",\n            \"seaborn-muted\",\n            \"seaborn-notebook\",\n            \"seaborn-paper\",\n            \"seaborn-pastel\",\n            \"seaborn-poster\",\n            \"seaborn-talk\",\n            \"seaborn-ticks\",\n            \"seaborn-white\",\n            \"seaborn-whitegrid\",\n        ]:\n            _api.warn_deprecated(\n                \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n                \"are deprecated since %(since)s, as they no longer \"\n                \"correspond to the styles shipped by seaborn. However, \"\n                \"they will remain available as 'seaborn-v0_8-<style>'. \"\n                \"Alternatively, directly use the seaborn API instead.\")\n            s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n    return s\n",
      "\ndef fix_style(s):\n    if isinstance(s, str):\n        s = style_alias.get(s, s)\n        if s in [\n            \"seaborn\",\n            \"seaborn-bright\",\n            \"seaborn-colorblind\",\n            \"seaborn-dark\",\n            \"seaborn-darkgrid\",\n            \"seaborn-dark-palette\",\n            \"seaborn-deep\",\n            \"seaborn-muted\",\n            \"seaborn-notebook\",\n            \"seaborn-paper\",\n            \"seaborn-pastel\",\n            \"seaborn-poster\",\n            \"seaborn-talk\",\n            \"seaborn-ticks\",\n            \"seaborn-white\",\n            \"seaborn-whitegrid\",\n        ]:\n            _api.warn_deprecated(\n                \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n                \"are deprecated since %(since)s, as they no longer \"\n                \"correspond to the styles shipped by seaborn. However, \"\n                \"they will remain available as 'seaborn-v0_8-<style>'. \"\n                \"Alternatively, directly use the seaborn API instead.\")\n            s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n    return s\n",
      "\ndef fix_style(s):\n    if isinstance(s, str):\n        s = style_alias.get(s, s)\n        if s in [\n            \"seaborn\",\n            \"seaborn-bright\",\n            \"seaborn-colorblind\",\n            \"seaborn-dark\",\n            \"seaborn-darkgrid\",\n            \"seaborn-dark-palette\",\n            \"seaborn-deep\",\n            \"seaborn-muted\",\n            \"seaborn-notebook\",\n            \"seaborn-paper\",\n            \"seaborn-pastel\",\n            \"seaborn-poster\",\n            \"seaborn-talk\",\n            \"seaborn-ticks\",\n            \"seaborn-white\",\n            \"seaborn-whitegrid\",\n        ]:\n            _api.warn_deprecated(\n                \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n                \"are deprecated since %(since)s, as they no longer \"\n                \"correspond to the styles shipped by seaborn. However, \"\n                \"they will remain available as 'seaborn-v0_8-<style>'. \"\n                \"Alternatively, directly use the seaborn API instead.\")\n            s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n    return s\n",
      "\ndef fix_style(s):\n    if isinstance(s, str):\n        s = style_alias.get(s, s)\n        if s in [\n            \"seaborn\",\n            \"seaborn-bright\",\n            \"seaborn-colorblind\",\n            \"seaborn-dark\",\n            \"seaborn-darkgrid\",\n            \"seaborn-dark-palette\",\n            \"seaborn-deep\",\n            \"seaborn-muted\",\n            \"seaborn-notebook\",\n            \"seaborn-paper\",\n            \"seaborn-pastel\",\n            \"seaborn-poster\",\n            \"seaborn-talk\",\n            \"seaborn-ticks\",\n            \"seaborn-white\",\n            \"seaborn-whitegrid\",\n        ]:\n            _api.warn_deprecated(\n                \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n                \"are deprecated since %(since)s, as they no longer \"\n                \"correspond to the styles shipped by seaborn. However, \"\n                \"they will remain available as 'seaborn-v0_8-<style>'. \"\n                \"Alternatively, directly use the seaborn API instead.\")\n            s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n    return s\n",
      "\ndef fix_style(s):\n    if isinstance(s, str):\n        s = style_alias.get(s, s)\n        if s in [\n            \"seaborn\",\n            \"seaborn-bright\",\n            \"seaborn-colorblind\",\n            \"seaborn-dark\",\n            \"seaborn-darkgrid\",\n            \"seaborn-dark-palette\",\n            \"seaborn-deep\",\n            \"seaborn-muted\",\n            \"seaborn-notebook\",\n            \"seaborn-paper\",\n            \"seaborn-pastel\",\n            \"seaborn-poster\",\n            \"seaborn-talk\",\n            \"seaborn-ticks\",\n            \"seaborn-white\",\n            \"seaborn-whitegrid\",\n        ]:\n            _api.warn_deprecated(\n                \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n                \"are deprecated since %(since)s, as they no longer \"\n                \"correspond to the styles shipped by seaborn. However, \"\n                \"they will remain available as 'seaborn-v0_8-<style>'. \"\n                \"Alternatively, directly use the seaborn API instead.\")\n            s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n    return s\n"
    ],
    "Location 3 (/root/hy/projects_3/matplotlib/lib/matplotlib/style/core.py lines 249-253)": [
      "\n_base_library = read_style_directory(BASE_LIBRARY_PATH)\nlibrary = None\navailable = []\n\n# Deprecated seaborn style names for library aliases\n_DEPRECATED_SEABORN_STYLES = {\n    'seaborn': 'seaborn-v0_8',\n    'seaborn-bright': 'seaborn-v0_8-bright',\n    'seaborn-colorblind': 'seaborn-v0_8-colorblind',\n    'seaborn-dark': 'seaborn-v0_8-dark',\n    'seaborn-darkgrid': 'seaborn-v0_8-darkgrid',\n    'seaborn-dark-palette': 'seaborn-v0_8-dark-palette',\n    'seaborn-deep': 'seaborn-v0_8-deep',\n    'seaborn-muted': 'seaborn-v0_8-muted',\n    'seaborn-notebook': 'seaborn-v0_8-notebook',\n    'seaborn-paper': 'seaborn-v0_8-paper',\n    'seaborn-pastel': 'seaborn-v0_8-pastel',\n    'seaborn-poster': 'seaborn-v0_8-poster',\n    'seaborn-talk': 'seaborn-v0_8-talk',\n    'seaborn-ticks': 'seaborn-v0_8-ticks',\n    'seaborn-white': 'seaborn-v0_8-white',\n    'seaborn-whitegrid': 'seaborn-v0_8-whitegrid',\n}\n",
      "\n_base_library = read_style_directory(BASE_LIBRARY_PATH)\nlibrary = None\navailable = []\n\n# Deprecated seaborn style names mapping\n_DEPRECATED_SEABORN_STYLES = {\n    'seaborn': 'seaborn-v0_8',\n    'seaborn-bright': 'seaborn-v0_8-bright',\n    'seaborn-colorblind': 'seaborn-v0_8-colorblind',\n    'seaborn-dark': 'seaborn-v0_8-dark',\n    'seaborn-darkgrid': 'seaborn-v0_8-darkgrid',\n    'seaborn-dark-palette': 'seaborn-v0_8-dark-palette',\n    'seaborn-deep': 'seaborn-v0_8-deep',\n    'seaborn-muted': 'seaborn-v0_8-muted',\n    'seaborn-notebook': 'seaborn-v0_8-notebook',\n    'seaborn-paper': 'seaborn-v0_8-paper',\n    'seaborn-pastel': 'seaborn-v0_8-pastel',\n    'seaborn-poster': 'seaborn-v0_8-poster',\n    'seaborn-talk': 'seaborn-v0_8-talk',\n    'seaborn-ticks': 'seaborn-v0_8-ticks',\n    'seaborn-white': 'seaborn-v0_8-white',\n    'seaborn-whitegrid': 'seaborn-v0_8-whitegrid'\n}\n",
      "\ndef reload_library():\n    \"\"\"Reload the style library.\"\"\"\n    global library\n    library = update_user_library(_base_library)\n    \n    # Add deprecated seaborn style name aliases for direct library access\n    deprecated_seaborn_names = [\n        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n        'seaborn-white', 'seaborn-whitegrid'\n    ]\n    \n    for deprecated_name in deprecated_seaborn_names:\n        if deprecated_name == 'seaborn':\n            new_name = 'seaborn-v0_8'\n        else:\n            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-')\n        \n        # Only add alias if the new style exists in library\n        if new_name in library:\n            library[deprecated_name] = library[new_name]\n    \n    available[:] = sorted(library.keys())\n",
      "\ndef reload_library():\n    \"\"\"Reload the style library.\"\"\"\n    global library\n    library = update_user_library(_base_library)\n    \n    # Add deprecated seaborn style name aliases for direct library access\n    deprecated_seaborn_names = [\n        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n        'seaborn-white', 'seaborn-whitegrid'\n    ]\n    \n    for deprecated_name in deprecated_seaborn_names:\n        if deprecated_name == 'seaborn':\n            new_name = 'seaborn-v0_8'\n        else:\n            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-')\n        \n        if new_name in library:\n            library[deprecated_name] = library[new_name]\n    \n    available[:] = sorted(library.keys())\n",
      "\ndef reload_library():\n    \"\"\"Reload the style library.\"\"\"\n    global library\n    library = update_user_library(_base_library)\n    \n    # Add deprecated seaborn style name aliases for direct library access\n    deprecated_seaborn_names = [\n        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n        'seaborn-white', 'seaborn-whitegrid'\n    ]\n    \n    for deprecated_name in deprecated_seaborn_names:\n        if deprecated_name == 'seaborn':\n            new_name = 'seaborn-v0_8'\n        else:\n            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-', 1)\n        \n        if new_name in library and deprecated_name not in library:\n            library[deprecated_name] = library[new_name]\n    \n    available[:] = sorted(library.keys())\n",
      "\ndef reload_library():\n    \"\"\"Reload the style library.\"\"\"\n    global library\n    library = update_user_library(_base_library)\n    \n    # Add deprecated seaborn style name aliases for direct library access\n    deprecated_seaborn_names = [\n        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n        'seaborn-white', 'seaborn-whitegrid'\n    ]\n    \n    for deprecated_name in deprecated_seaborn_names:\n        if deprecated_name == 'seaborn':\n            new_name = 'seaborn-v0_8'\n        else:\n            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-')\n        \n        if new_name in library:\n            library[deprecated_name] = library[new_name]\n    \n    available[:] = sorted(library.keys())\n",
      "\ndef reload_library():\n    \"\"\"Reload the style library.\"\"\"\n    global library\n    library = update_user_library(_base_library)\n    \n    # Add deprecated seaborn style aliases for backward compatibility\n    deprecated_seaborn_names = [\n        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk',\n        'seaborn-ticks', 'seaborn-white', 'seaborn-whitegrid'\n    ]\n    \n    for deprecated_name in deprecated_seaborn_names:\n        if deprecated_name == 'seaborn':\n            new_name = 'seaborn-v0_8'\n        else:\n            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-')\n        \n        if new_name in library:\n            library[deprecated_name] = library[new_name]\n    \n    available[:] = sorted(library.keys())\n",
      "\ndef reload_library():\n    \"\"\"Reload the style library.\"\"\"\n    global library\n    library = update_user_library(_base_library)\n    \n    # Add deprecated seaborn style name aliases\n    deprecated_seaborn_names = [\n        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n        'seaborn-white', 'seaborn-whitegrid'\n    ]\n    \n    for deprecated_name in deprecated_seaborn_names:\n        if deprecated_name == 'seaborn':\n            new_name = 'seaborn-v0_8'\n        else:\n            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-')\n        \n        if new_name in library:\n            library[deprecated_name] = library[new_name]\n    \n    available[:] = sorted(library.keys())\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/lib/matplotlib/style/core.py b/lib/matplotlib/style/core.py\nindex fb0a5426e6..70fdd08167 100644\n--- a/lib/matplotlib/style/core.py\n+++ b/lib/matplotlib/style/core.py\n@@ -110,6 +110,7 @@ def use(style):\n \n     style_alias = {'mpl20': 'default', 'mpl15': 'classic'}\n \n+\n     def fix_style(s):\n         if isinstance(s, str):\n             s = style_alias.get(s, s)\n@@ -246,15 +247,43 @@ def update_nested_dict(main_dict, new_dict):\n \n # Load style library\n # ==================\n+\n _base_library = read_style_directory(BASE_LIBRARY_PATH)\n library = None\n available = []\n \n \n+\n def reload_library():\n     \"\"\"Reload the style library.\"\"\"\n     global library\n     library = update_user_library(_base_library)\n+    \n+    # Add deprecated seaborn style aliases to maintain backward compatibility\n+    deprecated_seaborn_styles = [\n+        \"seaborn\",\n+        \"seaborn-bright\", \n+        \"seaborn-colorblind\",\n+        \"seaborn-dark\",\n+        \"seaborn-darkgrid\",\n+        \"seaborn-dark-palette\",\n+        \"seaborn-deep\",\n+        \"seaborn-muted\",\n+        \"seaborn-notebook\",\n+        \"seaborn-paper\",\n+        \"seaborn-pastel\",\n+        \"seaborn-poster\",\n+        \"seaborn-talk\",\n+        \"seaborn-ticks\",\n+        \"seaborn-white\",\n+        \"seaborn-whitegrid\",\n+    ]\n+    \n+    for deprecated_name in deprecated_seaborn_styles:\n+        new_name = deprecated_name.replace(\"seaborn\", \"seaborn-v0_8\")\n+        if new_name in library:\n+            library[deprecated_name] = library[new_name]\n+    \n     available[:] = sorted(library.keys())\n \n \n",
    "variant_0": "diff --git a/lib/matplotlib/style/core.py b/lib/matplotlib/style/core.py\nindex fb0a5426e6..5c258ec49d 100644\n--- a/lib/matplotlib/style/core.py\n+++ b/lib/matplotlib/style/core.py\n@@ -110,35 +110,36 @@ def use(style):\n \n     style_alias = {'mpl20': 'default', 'mpl15': 'classic'}\n \n-    def fix_style(s):\n-        if isinstance(s, str):\n-            s = style_alias.get(s, s)\n-            if s in [\n-                \"seaborn\",\n-                \"seaborn-bright\",\n-                \"seaborn-colorblind\",\n-                \"seaborn-dark\",\n-                \"seaborn-darkgrid\",\n-                \"seaborn-dark-palette\",\n-                \"seaborn-deep\",\n-                \"seaborn-muted\",\n-                \"seaborn-notebook\",\n-                \"seaborn-paper\",\n-                \"seaborn-pastel\",\n-                \"seaborn-poster\",\n-                \"seaborn-talk\",\n-                \"seaborn-ticks\",\n-                \"seaborn-white\",\n-                \"seaborn-whitegrid\",\n-            ]:\n-                _api.warn_deprecated(\n-                    \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n-                    \"are deprecated since %(since)s, as they no longer \"\n-                    \"correspond to the styles shipped by seaborn. However, \"\n-                    \"they will remain available as 'seaborn-v0_8-<style>'. \"\n-                    \"Alternatively, directly use the seaborn API instead.\")\n-                s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n-        return s\n+\n+def fix_style(s):\n+    if isinstance(s, str):\n+        s = style_alias.get(s, s)\n+        if s in [\n+            \"seaborn\",\n+            \"seaborn-bright\",\n+            \"seaborn-colorblind\",\n+            \"seaborn-dark\",\n+            \"seaborn-darkgrid\",\n+            \"seaborn-dark-palette\",\n+            \"seaborn-deep\",\n+            \"seaborn-muted\",\n+            \"seaborn-notebook\",\n+            \"seaborn-paper\",\n+            \"seaborn-pastel\",\n+            \"seaborn-poster\",\n+            \"seaborn-talk\",\n+            \"seaborn-ticks\",\n+            \"seaborn-white\",\n+            \"seaborn-whitegrid\",\n+        ]:\n+            _api.warn_deprecated(\n+                \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n+                \"are deprecated since %(since)s, as they no longer \"\n+                \"correspond to the styles shipped by seaborn. However, \"\n+                \"they will remain available as 'seaborn-v0_8-<style>'. \"\n+                \"Alternatively, directly use the seaborn API instead.\")\n+            s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n+    return s\n \n     for style in map(fix_style, styles):\n         if not isinstance(style, (str, Path)):\n@@ -246,15 +247,55 @@ def update_nested_dict(main_dict, new_dict):\n \n # Load style library\n # ==================\n-_base_library = read_style_directory(BASE_LIBRARY_PATH)\n-library = None\n-available = []\n \n+def reload_library():\n+    \"\"\"Reload the style library.\"\"\"\n+    global library\n+    library = update_user_library(_base_library)\n+    \n+    # Add deprecated seaborn style name aliases\n+    deprecated_seaborn_names = [\n+        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n+        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n+        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n+        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n+        'seaborn-white', 'seaborn-whitegrid'\n+    ]\n+    \n+    for deprecated_name in deprecated_seaborn_names:\n+        if deprecated_name == 'seaborn':\n+            new_name = 'seaborn-v0_8'\n+        else:\n+            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-', 1)\n+        \n+        if new_name in library:\n+            library[deprecated_name] = library[new_name]\n+    \n+    available[:] = sorted(library.keys())\n \n def reload_library():\n     \"\"\"Reload the style library.\"\"\"\n     global library\n     library = update_user_library(_base_library)\n+    \n+    # Add deprecated seaborn style name aliases\n+    deprecated_seaborn_names = [\n+        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n+        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n+        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n+        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n+        'seaborn-white', 'seaborn-whitegrid'\n+    ]\n+    \n+    for deprecated_name in deprecated_seaborn_names:\n+        if deprecated_name == 'seaborn':\n+            new_name = 'seaborn-v0_8'\n+        else:\n+            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-')\n+        \n+        if new_name in library:\n+            library[deprecated_name] = library[new_name]\n+    \n     available[:] = sorted(library.keys())\n \n \n",
    "variant_1": "diff --git a/lib/matplotlib/style/core.py b/lib/matplotlib/style/core.py\nindex fb0a5426e6..afa5d23bdb 100644\n--- a/lib/matplotlib/style/core.py\n+++ b/lib/matplotlib/style/core.py\n@@ -110,35 +110,57 @@ def use(style):\n \n     style_alias = {'mpl20': 'default', 'mpl15': 'classic'}\n \n-    def fix_style(s):\n-        if isinstance(s, str):\n-            s = style_alias.get(s, s)\n-            if s in [\n-                \"seaborn\",\n-                \"seaborn-bright\",\n-                \"seaborn-colorblind\",\n-                \"seaborn-dark\",\n-                \"seaborn-darkgrid\",\n-                \"seaborn-dark-palette\",\n-                \"seaborn-deep\",\n-                \"seaborn-muted\",\n-                \"seaborn-notebook\",\n-                \"seaborn-paper\",\n-                \"seaborn-pastel\",\n-                \"seaborn-poster\",\n-                \"seaborn-talk\",\n-                \"seaborn-ticks\",\n-                \"seaborn-white\",\n-                \"seaborn-whitegrid\",\n-            ]:\n-                _api.warn_deprecated(\n-                    \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n-                    \"are deprecated since %(since)s, as they no longer \"\n-                    \"correspond to the styles shipped by seaborn. However, \"\n-                    \"they will remain available as 'seaborn-v0_8-<style>'. \"\n-                    \"Alternatively, directly use the seaborn API instead.\")\n-                s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n-        return s\n+\n+def fix_style(s):\n+    if isinstance(s, str):\n+        s = style_alias.get(s, s)\n+        if s in [\n+            \"seaborn\",\n+            \"seaborn-bright\",\n+            \"seaborn-colorblind\",\n+            \"seaborn-dark\",\n+            \"seaborn-darkgrid\",\n+            \"seaborn-dark-palette\",\n+            \"seaborn-deep\",\n+            \"seaborn-muted\",\n+            \"seaborn-notebook\",\n+            \"seaborn-paper\",\n+            \"seaborn-pastel\",\n+            \"seaborn-poster\",\n+            \"seaborn-talk\",\n+            \"seaborn-ticks\",\n+            \"seaborn-white\",\n+            \"seaborn-whitegrid\",\n+        ]:\n+            _api.warn_deprecated(\n+                \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n+                \"are deprecated since %(since)s, as they no longer \"\n+                \"correspond to the styles shipped by seaborn. However, \"\n+                \"they will remain available as 'seaborn-v0_8-<style>'. \"\n+                \"Alternatively, directly use the seaborn API instead.\")\n+            s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n+    return s\n+\n+\n+# Extract deprecated seaborn styles for reuse\n+_deprecated_seaborn_styles = [\n+    \"seaborn\",\n+    \"seaborn-bright\",\n+    \"seaborn-colorblind\",\n+    \"seaborn-dark\",\n+    \"seaborn-darkgrid\",\n+    \"seaborn-dark-palette\",\n+    \"seaborn-deep\",\n+    \"seaborn-muted\",\n+    \"seaborn-notebook\",\n+    \"seaborn-paper\",\n+    \"seaborn-pastel\",\n+    \"seaborn-poster\",\n+    \"seaborn-talk\",\n+    \"seaborn-ticks\",\n+    \"seaborn-white\",\n+    \"seaborn-whitegrid\",\n+]\n \n     for style in map(fix_style, styles):\n         if not isinstance(style, (str, Path)):\n@@ -246,15 +268,54 @@ def update_nested_dict(main_dict, new_dict):\n \n # Load style library\n # ==================\n+\n _base_library = read_style_directory(BASE_LIBRARY_PATH)\n library = None\n available = []\n \n+# Deprecated seaborn style names for library aliases\n+_DEPRECATED_SEABORN_STYLES = {\n+    'seaborn': 'seaborn-v0_8',\n+    'seaborn-bright': 'seaborn-v0_8-bright',\n+    'seaborn-colorblind': 'seaborn-v0_8-colorblind',\n+    'seaborn-dark': 'seaborn-v0_8-dark',\n+    'seaborn-darkgrid': 'seaborn-v0_8-darkgrid',\n+    'seaborn-dark-palette': 'seaborn-v0_8-dark-palette',\n+    'seaborn-deep': 'seaborn-v0_8-deep',\n+    'seaborn-muted': 'seaborn-v0_8-muted',\n+    'seaborn-notebook': 'seaborn-v0_8-notebook',\n+    'seaborn-paper': 'seaborn-v0_8-paper',\n+    'seaborn-pastel': 'seaborn-v0_8-pastel',\n+    'seaborn-poster': 'seaborn-v0_8-poster',\n+    'seaborn-talk': 'seaborn-v0_8-talk',\n+    'seaborn-ticks': 'seaborn-v0_8-ticks',\n+    'seaborn-white': 'seaborn-v0_8-white',\n+    'seaborn-whitegrid': 'seaborn-v0_8-whitegrid',\n+}\n \n def reload_library():\n     \"\"\"Reload the style library.\"\"\"\n     global library\n     library = update_user_library(_base_library)\n+    \n+    # Add deprecated seaborn style name aliases for backward compatibility\n+    deprecated_seaborn_names = [\n+        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n+        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n+        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n+        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n+        'seaborn-white', 'seaborn-whitegrid'\n+    ]\n+    \n+    for deprecated_name in deprecated_seaborn_names:\n+        if deprecated_name == 'seaborn':\n+            new_name = 'seaborn-v0_8'\n+        else:\n+            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-', 1)\n+        \n+        if new_name in library:\n+            library[deprecated_name] = library[new_name]\n+    \n     available[:] = sorted(library.keys())\n \n \n",
    "variant_2": "diff --git a/lib/matplotlib/style/core.py b/lib/matplotlib/style/core.py\nindex fb0a5426e6..a05aeab067 100644\n--- a/lib/matplotlib/style/core.py\n+++ b/lib/matplotlib/style/core.py\n@@ -110,35 +110,36 @@ def use(style):\n \n     style_alias = {'mpl20': 'default', 'mpl15': 'classic'}\n \n-    def fix_style(s):\n-        if isinstance(s, str):\n-            s = style_alias.get(s, s)\n-            if s in [\n-                \"seaborn\",\n-                \"seaborn-bright\",\n-                \"seaborn-colorblind\",\n-                \"seaborn-dark\",\n-                \"seaborn-darkgrid\",\n-                \"seaborn-dark-palette\",\n-                \"seaborn-deep\",\n-                \"seaborn-muted\",\n-                \"seaborn-notebook\",\n-                \"seaborn-paper\",\n-                \"seaborn-pastel\",\n-                \"seaborn-poster\",\n-                \"seaborn-talk\",\n-                \"seaborn-ticks\",\n-                \"seaborn-white\",\n-                \"seaborn-whitegrid\",\n-            ]:\n-                _api.warn_deprecated(\n-                    \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n-                    \"are deprecated since %(since)s, as they no longer \"\n-                    \"correspond to the styles shipped by seaborn. However, \"\n-                    \"they will remain available as 'seaborn-v0_8-<style>'. \"\n-                    \"Alternatively, directly use the seaborn API instead.\")\n-                s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n-        return s\n+\n+def fix_style(s):\n+    if isinstance(s, str):\n+        s = style_alias.get(s, s)\n+        if s in [\n+            \"seaborn\",\n+            \"seaborn-bright\",\n+            \"seaborn-colorblind\",\n+            \"seaborn-dark\",\n+            \"seaborn-darkgrid\",\n+            \"seaborn-dark-palette\",\n+            \"seaborn-deep\",\n+            \"seaborn-muted\",\n+            \"seaborn-notebook\",\n+            \"seaborn-paper\",\n+            \"seaborn-pastel\",\n+            \"seaborn-poster\",\n+            \"seaborn-talk\",\n+            \"seaborn-ticks\",\n+            \"seaborn-white\",\n+            \"seaborn-whitegrid\",\n+        ]:\n+            _api.warn_deprecated(\n+                \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n+                \"are deprecated since %(since)s, as they no longer \"\n+                \"correspond to the styles shipped by seaborn. However, \"\n+                \"they will remain available as 'seaborn-v0_8-<style>'. \"\n+                \"Alternatively, directly use the seaborn API instead.\")\n+            s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n+    return s\n \n     for style in map(fix_style, styles):\n         if not isinstance(style, (str, Path)):\n@@ -246,15 +247,54 @@ def update_nested_dict(main_dict, new_dict):\n \n # Load style library\n # ==================\n+\n _base_library = read_style_directory(BASE_LIBRARY_PATH)\n library = None\n available = []\n \n+# Deprecated seaborn style names mapping\n+_DEPRECATED_SEABORN_STYLES = {\n+    'seaborn': 'seaborn-v0_8',\n+    'seaborn-bright': 'seaborn-v0_8-bright',\n+    'seaborn-colorblind': 'seaborn-v0_8-colorblind',\n+    'seaborn-dark': 'seaborn-v0_8-dark',\n+    'seaborn-darkgrid': 'seaborn-v0_8-darkgrid',\n+    'seaborn-dark-palette': 'seaborn-v0_8-dark-palette',\n+    'seaborn-deep': 'seaborn-v0_8-deep',\n+    'seaborn-muted': 'seaborn-v0_8-muted',\n+    'seaborn-notebook': 'seaborn-v0_8-notebook',\n+    'seaborn-paper': 'seaborn-v0_8-paper',\n+    'seaborn-pastel': 'seaborn-v0_8-pastel',\n+    'seaborn-poster': 'seaborn-v0_8-poster',\n+    'seaborn-talk': 'seaborn-v0_8-talk',\n+    'seaborn-ticks': 'seaborn-v0_8-ticks',\n+    'seaborn-white': 'seaborn-v0_8-white',\n+    'seaborn-whitegrid': 'seaborn-v0_8-whitegrid'\n+}\n \n def reload_library():\n     \"\"\"Reload the style library.\"\"\"\n     global library\n     library = update_user_library(_base_library)\n+    \n+    # Add deprecated seaborn style name aliases for direct library access\n+    deprecated_seaborn_names = [\n+        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n+        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n+        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n+        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n+        'seaborn-white', 'seaborn-whitegrid'\n+    ]\n+    \n+    for deprecated_name in deprecated_seaborn_names:\n+        if deprecated_name == 'seaborn':\n+            v0_8_name = 'seaborn-v0_8'\n+        else:\n+            v0_8_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-', 1)\n+        \n+        if v0_8_name in library:\n+            library[deprecated_name] = library[v0_8_name]\n+    \n     available[:] = sorted(library.keys())\n \n \n",
    "variant_3": "diff --git a/lib/matplotlib/style/core.py b/lib/matplotlib/style/core.py\nindex fb0a5426e6..de9592d6de 100644\n--- a/lib/matplotlib/style/core.py\n+++ b/lib/matplotlib/style/core.py\n@@ -110,35 +110,36 @@ def use(style):\n \n     style_alias = {'mpl20': 'default', 'mpl15': 'classic'}\n \n-    def fix_style(s):\n-        if isinstance(s, str):\n-            s = style_alias.get(s, s)\n-            if s in [\n-                \"seaborn\",\n-                \"seaborn-bright\",\n-                \"seaborn-colorblind\",\n-                \"seaborn-dark\",\n-                \"seaborn-darkgrid\",\n-                \"seaborn-dark-palette\",\n-                \"seaborn-deep\",\n-                \"seaborn-muted\",\n-                \"seaborn-notebook\",\n-                \"seaborn-paper\",\n-                \"seaborn-pastel\",\n-                \"seaborn-poster\",\n-                \"seaborn-talk\",\n-                \"seaborn-ticks\",\n-                \"seaborn-white\",\n-                \"seaborn-whitegrid\",\n-            ]:\n-                _api.warn_deprecated(\n-                    \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n-                    \"are deprecated since %(since)s, as they no longer \"\n-                    \"correspond to the styles shipped by seaborn. However, \"\n-                    \"they will remain available as 'seaborn-v0_8-<style>'. \"\n-                    \"Alternatively, directly use the seaborn API instead.\")\n-                s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n-        return s\n+\n+def fix_style(s):\n+    if isinstance(s, str):\n+        s = style_alias.get(s, s)\n+        if s in [\n+            \"seaborn\",\n+            \"seaborn-bright\",\n+            \"seaborn-colorblind\",\n+            \"seaborn-dark\",\n+            \"seaborn-darkgrid\",\n+            \"seaborn-dark-palette\",\n+            \"seaborn-deep\",\n+            \"seaborn-muted\",\n+            \"seaborn-notebook\",\n+            \"seaborn-paper\",\n+            \"seaborn-pastel\",\n+            \"seaborn-poster\",\n+            \"seaborn-talk\",\n+            \"seaborn-ticks\",\n+            \"seaborn-white\",\n+            \"seaborn-whitegrid\",\n+        ]:\n+            _api.warn_deprecated(\n+                \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n+                \"are deprecated since %(since)s, as they no longer \"\n+                \"correspond to the styles shipped by seaborn. However, \"\n+                \"they will remain available as 'seaborn-v0_8-<style>'. \"\n+                \"Alternatively, directly use the seaborn API instead.\")\n+            s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n+    return s\n \n     for style in map(fix_style, styles):\n         if not isinstance(style, (str, Path)):\n@@ -246,15 +247,56 @@ def update_nested_dict(main_dict, new_dict):\n \n # Load style library\n # ==================\n-_base_library = read_style_directory(BASE_LIBRARY_PATH)\n-library = None\n-available = []\n \n+def reload_library():\n+    \"\"\"Reload the style library.\"\"\"\n+    global library\n+    library = update_user_library(_base_library)\n+    \n+    # Add deprecated seaborn style name aliases for direct library access\n+    deprecated_seaborn_names = [\n+        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n+        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n+        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n+        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n+        'seaborn-white', 'seaborn-whitegrid'\n+    ]\n+    \n+    for deprecated_name in deprecated_seaborn_names:\n+        if deprecated_name == 'seaborn':\n+            new_name = 'seaborn-v0_8'\n+        else:\n+            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-')\n+        \n+        # Only add alias if the new style exists in library\n+        if new_name in library:\n+            library[deprecated_name] = library[new_name]\n+    \n+    available[:] = sorted(library.keys())\n \n def reload_library():\n     \"\"\"Reload the style library.\"\"\"\n     global library\n     library = update_user_library(_base_library)\n+    \n+    # Add deprecated seaborn style name aliases\n+    deprecated_seaborn_names = [\n+        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n+        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n+        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n+        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n+        'seaborn-white', 'seaborn-whitegrid'\n+    ]\n+    \n+    for deprecated_name in deprecated_seaborn_names:\n+        if deprecated_name == 'seaborn':\n+            new_name = 'seaborn-v0_8'\n+        else:\n+            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-')\n+        \n+        if new_name in library:\n+            library[deprecated_name] = library[new_name]\n+    \n     available[:] = sorted(library.keys())\n \n \n",
    "variant_4": "diff --git a/lib/matplotlib/style/core.py b/lib/matplotlib/style/core.py\nindex fb0a5426e6..4e5d220e8f 100644\n--- a/lib/matplotlib/style/core.py\n+++ b/lib/matplotlib/style/core.py\n@@ -110,35 +110,36 @@ def use(style):\n \n     style_alias = {'mpl20': 'default', 'mpl15': 'classic'}\n \n-    def fix_style(s):\n-        if isinstance(s, str):\n-            s = style_alias.get(s, s)\n-            if s in [\n-                \"seaborn\",\n-                \"seaborn-bright\",\n-                \"seaborn-colorblind\",\n-                \"seaborn-dark\",\n-                \"seaborn-darkgrid\",\n-                \"seaborn-dark-palette\",\n-                \"seaborn-deep\",\n-                \"seaborn-muted\",\n-                \"seaborn-notebook\",\n-                \"seaborn-paper\",\n-                \"seaborn-pastel\",\n-                \"seaborn-poster\",\n-                \"seaborn-talk\",\n-                \"seaborn-ticks\",\n-                \"seaborn-white\",\n-                \"seaborn-whitegrid\",\n-            ]:\n-                _api.warn_deprecated(\n-                    \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n-                    \"are deprecated since %(since)s, as they no longer \"\n-                    \"correspond to the styles shipped by seaborn. However, \"\n-                    \"they will remain available as 'seaborn-v0_8-<style>'. \"\n-                    \"Alternatively, directly use the seaborn API instead.\")\n-                s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n-        return s\n+\n+def fix_style(s):\n+    if isinstance(s, str):\n+        s = style_alias.get(s, s)\n+        if s in [\n+            \"seaborn\",\n+            \"seaborn-bright\",\n+            \"seaborn-colorblind\",\n+            \"seaborn-dark\",\n+            \"seaborn-darkgrid\",\n+            \"seaborn-dark-palette\",\n+            \"seaborn-deep\",\n+            \"seaborn-muted\",\n+            \"seaborn-notebook\",\n+            \"seaborn-paper\",\n+            \"seaborn-pastel\",\n+            \"seaborn-poster\",\n+            \"seaborn-talk\",\n+            \"seaborn-ticks\",\n+            \"seaborn-white\",\n+            \"seaborn-whitegrid\",\n+        ]:\n+            _api.warn_deprecated(\n+                \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n+                \"are deprecated since %(since)s, as they no longer \"\n+                \"correspond to the styles shipped by seaborn. However, \"\n+                \"they will remain available as 'seaborn-v0_8-<style>'. \"\n+                \"Alternatively, directly use the seaborn API instead.\")\n+            s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n+    return s\n \n     for style in map(fix_style, styles):\n         if not isinstance(style, (str, Path)):\n@@ -246,15 +247,55 @@ def update_nested_dict(main_dict, new_dict):\n \n # Load style library\n # ==================\n-_base_library = read_style_directory(BASE_LIBRARY_PATH)\n-library = None\n-available = []\n \n+def reload_library():\n+    \"\"\"Reload the style library.\"\"\"\n+    global library\n+    library = update_user_library(_base_library)\n+    \n+    # Add deprecated seaborn style name aliases for direct library access\n+    deprecated_seaborn_names = [\n+        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n+        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n+        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n+        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n+        'seaborn-white', 'seaborn-whitegrid'\n+    ]\n+    \n+    for deprecated_name in deprecated_seaborn_names:\n+        if deprecated_name == 'seaborn':\n+            new_name = 'seaborn-v0_8'\n+        else:\n+            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-')\n+        \n+        if new_name in library:\n+            library[deprecated_name] = library[new_name]\n+    \n+    available[:] = sorted(library.keys())\n \n def reload_library():\n     \"\"\"Reload the style library.\"\"\"\n     global library\n     library = update_user_library(_base_library)\n+    \n+    # Add deprecated seaborn style name aliases for backward compatibility\n+    deprecated_seaborn_names = [\n+        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n+        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n+        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n+        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n+        'seaborn-white', 'seaborn-whitegrid'\n+    ]\n+    \n+    for deprecated_name in deprecated_seaborn_names:\n+        if deprecated_name == 'seaborn':\n+            new_name = 'seaborn-v0_8'\n+        else:\n+            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-')\n+        \n+        if new_name in library:\n+            library[deprecated_name] = library[new_name]\n+    \n     available[:] = sorted(library.keys())\n \n \n",
    "variant_5": "diff --git a/lib/matplotlib/style/core.py b/lib/matplotlib/style/core.py\nindex fb0a5426e6..1e0231aab8 100644\n--- a/lib/matplotlib/style/core.py\n+++ b/lib/matplotlib/style/core.py\n@@ -110,35 +110,36 @@ def use(style):\n \n     style_alias = {'mpl20': 'default', 'mpl15': 'classic'}\n \n-    def fix_style(s):\n-        if isinstance(s, str):\n-            s = style_alias.get(s, s)\n-            if s in [\n-                \"seaborn\",\n-                \"seaborn-bright\",\n-                \"seaborn-colorblind\",\n-                \"seaborn-dark\",\n-                \"seaborn-darkgrid\",\n-                \"seaborn-dark-palette\",\n-                \"seaborn-deep\",\n-                \"seaborn-muted\",\n-                \"seaborn-notebook\",\n-                \"seaborn-paper\",\n-                \"seaborn-pastel\",\n-                \"seaborn-poster\",\n-                \"seaborn-talk\",\n-                \"seaborn-ticks\",\n-                \"seaborn-white\",\n-                \"seaborn-whitegrid\",\n-            ]:\n-                _api.warn_deprecated(\n-                    \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n-                    \"are deprecated since %(since)s, as they no longer \"\n-                    \"correspond to the styles shipped by seaborn. However, \"\n-                    \"they will remain available as 'seaborn-v0_8-<style>'. \"\n-                    \"Alternatively, directly use the seaborn API instead.\")\n-                s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n-        return s\n+\n+def fix_style(s):\n+    if isinstance(s, str):\n+        s = style_alias.get(s, s)\n+        if s in [\n+            \"seaborn\",\n+            \"seaborn-bright\",\n+            \"seaborn-colorblind\",\n+            \"seaborn-dark\",\n+            \"seaborn-darkgrid\",\n+            \"seaborn-dark-palette\",\n+            \"seaborn-deep\",\n+            \"seaborn-muted\",\n+            \"seaborn-notebook\",\n+            \"seaborn-paper\",\n+            \"seaborn-pastel\",\n+            \"seaborn-poster\",\n+            \"seaborn-talk\",\n+            \"seaborn-ticks\",\n+            \"seaborn-white\",\n+            \"seaborn-whitegrid\",\n+        ]:\n+            _api.warn_deprecated(\n+                \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n+                \"are deprecated since %(since)s, as they no longer \"\n+                \"correspond to the styles shipped by seaborn. However, \"\n+                \"they will remain available as 'seaborn-v0_8-<style>'. \"\n+                \"Alternatively, directly use the seaborn API instead.\")\n+            s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n+    return s\n \n     for style in map(fix_style, styles):\n         if not isinstance(style, (str, Path)):\n@@ -246,15 +247,55 @@ def update_nested_dict(main_dict, new_dict):\n \n # Load style library\n # ==================\n-_base_library = read_style_directory(BASE_LIBRARY_PATH)\n-library = None\n-available = []\n \n+def reload_library():\n+    \"\"\"Reload the style library.\"\"\"\n+    global library\n+    library = update_user_library(_base_library)\n+    \n+    # Add deprecated seaborn style name aliases for direct library access\n+    deprecated_seaborn_names = [\n+        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n+        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n+        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n+        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n+        'seaborn-white', 'seaborn-whitegrid'\n+    ]\n+    \n+    for deprecated_name in deprecated_seaborn_names:\n+        if deprecated_name == 'seaborn':\n+            new_name = 'seaborn-v0_8'\n+        else:\n+            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-', 1)\n+        \n+        if new_name in library and deprecated_name not in library:\n+            library[deprecated_name] = library[new_name]\n+    \n+    available[:] = sorted(library.keys())\n \n def reload_library():\n     \"\"\"Reload the style library.\"\"\"\n     global library\n     library = update_user_library(_base_library)\n+    \n+    # Add deprecated seaborn style name aliases\n+    deprecated_seaborn_names = [\n+        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n+        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n+        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n+        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n+        'seaborn-white', 'seaborn-whitegrid'\n+    ]\n+    \n+    for deprecated_name in deprecated_seaborn_names:\n+        if deprecated_name == 'seaborn':\n+            new_name = 'seaborn-v0_8'\n+        else:\n+            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-')\n+        \n+        if new_name in library:\n+            library[deprecated_name] = library[new_name]\n+    \n     available[:] = sorted(library.keys())\n \n \n",
    "variant_6": "diff --git a/lib/matplotlib/style/core.py b/lib/matplotlib/style/core.py\nindex fb0a5426e6..ec20e13146 100644\n--- a/lib/matplotlib/style/core.py\n+++ b/lib/matplotlib/style/core.py\n@@ -110,35 +110,36 @@ def use(style):\n \n     style_alias = {'mpl20': 'default', 'mpl15': 'classic'}\n \n-    def fix_style(s):\n-        if isinstance(s, str):\n-            s = style_alias.get(s, s)\n-            if s in [\n-                \"seaborn\",\n-                \"seaborn-bright\",\n-                \"seaborn-colorblind\",\n-                \"seaborn-dark\",\n-                \"seaborn-darkgrid\",\n-                \"seaborn-dark-palette\",\n-                \"seaborn-deep\",\n-                \"seaborn-muted\",\n-                \"seaborn-notebook\",\n-                \"seaborn-paper\",\n-                \"seaborn-pastel\",\n-                \"seaborn-poster\",\n-                \"seaborn-talk\",\n-                \"seaborn-ticks\",\n-                \"seaborn-white\",\n-                \"seaborn-whitegrid\",\n-            ]:\n-                _api.warn_deprecated(\n-                    \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n-                    \"are deprecated since %(since)s, as they no longer \"\n-                    \"correspond to the styles shipped by seaborn. However, \"\n-                    \"they will remain available as 'seaborn-v0_8-<style>'. \"\n-                    \"Alternatively, directly use the seaborn API instead.\")\n-                s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n-        return s\n+\n+def fix_style(s):\n+    if isinstance(s, str):\n+        s = style_alias.get(s, s)\n+        if s in [\n+            \"seaborn\",\n+            \"seaborn-bright\",\n+            \"seaborn-colorblind\",\n+            \"seaborn-dark\",\n+            \"seaborn-darkgrid\",\n+            \"seaborn-dark-palette\",\n+            \"seaborn-deep\",\n+            \"seaborn-muted\",\n+            \"seaborn-notebook\",\n+            \"seaborn-paper\",\n+            \"seaborn-pastel\",\n+            \"seaborn-poster\",\n+            \"seaborn-talk\",\n+            \"seaborn-ticks\",\n+            \"seaborn-white\",\n+            \"seaborn-whitegrid\",\n+        ]:\n+            _api.warn_deprecated(\n+                \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n+                \"are deprecated since %(since)s, as they no longer \"\n+                \"correspond to the styles shipped by seaborn. However, \"\n+                \"they will remain available as 'seaborn-v0_8-<style>'. \"\n+                \"Alternatively, directly use the seaborn API instead.\")\n+            s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n+    return s\n \n     for style in map(fix_style, styles):\n         if not isinstance(style, (str, Path)):\n@@ -246,15 +247,55 @@ def update_nested_dict(main_dict, new_dict):\n \n # Load style library\n # ==================\n-_base_library = read_style_directory(BASE_LIBRARY_PATH)\n-library = None\n-available = []\n \n+def reload_library():\n+    \"\"\"Reload the style library.\"\"\"\n+    global library\n+    library = update_user_library(_base_library)\n+    \n+    # Add deprecated seaborn style name aliases for direct library access\n+    deprecated_seaborn_names = [\n+        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n+        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n+        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n+        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n+        'seaborn-white', 'seaborn-whitegrid'\n+    ]\n+    \n+    for deprecated_name in deprecated_seaborn_names:\n+        if deprecated_name == 'seaborn':\n+            new_name = 'seaborn-v0_8'\n+        else:\n+            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-')\n+        \n+        if new_name in library:\n+            library[deprecated_name] = library[new_name]\n+    \n+    available[:] = sorted(library.keys())\n \n def reload_library():\n     \"\"\"Reload the style library.\"\"\"\n     global library\n     library = update_user_library(_base_library)\n+    \n+    # Add deprecated seaborn style name aliases\n+    deprecated_seaborn_names = [\n+        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n+        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n+        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n+        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n+        'seaborn-white', 'seaborn-whitegrid'\n+    ]\n+    \n+    for old_name in deprecated_seaborn_names:\n+        if old_name == 'seaborn':\n+            new_name = 'seaborn-v0_8'\n+        else:\n+            new_name = old_name.replace('seaborn-', 'seaborn-v0_8-')\n+        \n+        if new_name in library:\n+            library[old_name] = library[new_name]\n+    \n     available[:] = sorted(library.keys())\n \n \n",
    "variant_7": "diff --git a/lib/matplotlib/style/core.py b/lib/matplotlib/style/core.py\nindex fb0a5426e6..d51d06b70e 100644\n--- a/lib/matplotlib/style/core.py\n+++ b/lib/matplotlib/style/core.py\n@@ -110,35 +110,36 @@ def use(style):\n \n     style_alias = {'mpl20': 'default', 'mpl15': 'classic'}\n \n-    def fix_style(s):\n-        if isinstance(s, str):\n-            s = style_alias.get(s, s)\n-            if s in [\n-                \"seaborn\",\n-                \"seaborn-bright\",\n-                \"seaborn-colorblind\",\n-                \"seaborn-dark\",\n-                \"seaborn-darkgrid\",\n-                \"seaborn-dark-palette\",\n-                \"seaborn-deep\",\n-                \"seaborn-muted\",\n-                \"seaborn-notebook\",\n-                \"seaborn-paper\",\n-                \"seaborn-pastel\",\n-                \"seaborn-poster\",\n-                \"seaborn-talk\",\n-                \"seaborn-ticks\",\n-                \"seaborn-white\",\n-                \"seaborn-whitegrid\",\n-            ]:\n-                _api.warn_deprecated(\n-                    \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n-                    \"are deprecated since %(since)s, as they no longer \"\n-                    \"correspond to the styles shipped by seaborn. However, \"\n-                    \"they will remain available as 'seaborn-v0_8-<style>'. \"\n-                    \"Alternatively, directly use the seaborn API instead.\")\n-                s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n-        return s\n+\n+def fix_style(s):\n+    if isinstance(s, str):\n+        s = style_alias.get(s, s)\n+        if s in [\n+            \"seaborn\",\n+            \"seaborn-bright\",\n+            \"seaborn-colorblind\",\n+            \"seaborn-dark\",\n+            \"seaborn-darkgrid\",\n+            \"seaborn-dark-palette\",\n+            \"seaborn-deep\",\n+            \"seaborn-muted\",\n+            \"seaborn-notebook\",\n+            \"seaborn-paper\",\n+            \"seaborn-pastel\",\n+            \"seaborn-poster\",\n+            \"seaborn-talk\",\n+            \"seaborn-ticks\",\n+            \"seaborn-white\",\n+            \"seaborn-whitegrid\",\n+        ]:\n+            _api.warn_deprecated(\n+                \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n+                \"are deprecated since %(since)s, as they no longer \"\n+                \"correspond to the styles shipped by seaborn. However, \"\n+                \"they will remain available as 'seaborn-v0_8-<style>'. \"\n+                \"Alternatively, directly use the seaborn API instead.\")\n+            s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n+    return s\n \n     for style in map(fix_style, styles):\n         if not isinstance(style, (str, Path)):\n@@ -246,15 +247,55 @@ def update_nested_dict(main_dict, new_dict):\n \n # Load style library\n # ==================\n-_base_library = read_style_directory(BASE_LIBRARY_PATH)\n-library = None\n-available = []\n \n+def reload_library():\n+    \"\"\"Reload the style library.\"\"\"\n+    global library\n+    library = update_user_library(_base_library)\n+    \n+    # Add deprecated seaborn style aliases for backward compatibility\n+    deprecated_seaborn_names = [\n+        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n+        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n+        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n+        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk',\n+        'seaborn-ticks', 'seaborn-white', 'seaborn-whitegrid'\n+    ]\n+    \n+    for deprecated_name in deprecated_seaborn_names:\n+        if deprecated_name == 'seaborn':\n+            new_name = 'seaborn-v0_8'\n+        else:\n+            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-')\n+        \n+        if new_name in library:\n+            library[deprecated_name] = library[new_name]\n+    \n+    available[:] = sorted(library.keys())\n \n def reload_library():\n     \"\"\"Reload the style library.\"\"\"\n     global library\n     library = update_user_library(_base_library)\n+    \n+    # Add deprecated seaborn style name aliases\n+    deprecated_seaborn_names = [\n+        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n+        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n+        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n+        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk',\n+        'seaborn-ticks', 'seaborn-white', 'seaborn-whitegrid'\n+    ]\n+    \n+    for deprecated_name in deprecated_seaborn_names:\n+        if deprecated_name == 'seaborn':\n+            new_name = 'seaborn-v0_8'\n+        else:\n+            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-')\n+        \n+        if new_name in library:\n+            library[deprecated_name] = library[new_name]\n+    \n     available[:] = sorted(library.keys())\n \n \n",
    "variant_8": "diff --git a/lib/matplotlib/style/core.py b/lib/matplotlib/style/core.py\nindex fb0a5426e6..9fe3d25891 100644\n--- a/lib/matplotlib/style/core.py\n+++ b/lib/matplotlib/style/core.py\n@@ -110,35 +110,36 @@ def use(style):\n \n     style_alias = {'mpl20': 'default', 'mpl15': 'classic'}\n \n-    def fix_style(s):\n-        if isinstance(s, str):\n-            s = style_alias.get(s, s)\n-            if s in [\n-                \"seaborn\",\n-                \"seaborn-bright\",\n-                \"seaborn-colorblind\",\n-                \"seaborn-dark\",\n-                \"seaborn-darkgrid\",\n-                \"seaborn-dark-palette\",\n-                \"seaborn-deep\",\n-                \"seaborn-muted\",\n-                \"seaborn-notebook\",\n-                \"seaborn-paper\",\n-                \"seaborn-pastel\",\n-                \"seaborn-poster\",\n-                \"seaborn-talk\",\n-                \"seaborn-ticks\",\n-                \"seaborn-white\",\n-                \"seaborn-whitegrid\",\n-            ]:\n-                _api.warn_deprecated(\n-                    \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n-                    \"are deprecated since %(since)s, as they no longer \"\n-                    \"correspond to the styles shipped by seaborn. However, \"\n-                    \"they will remain available as 'seaborn-v0_8-<style>'. \"\n-                    \"Alternatively, directly use the seaborn API instead.\")\n-                s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n-        return s\n+\n+def fix_style(s):\n+    if isinstance(s, str):\n+        s = style_alias.get(s, s)\n+        if s in [\n+            \"seaborn\",\n+            \"seaborn-bright\",\n+            \"seaborn-colorblind\",\n+            \"seaborn-dark\",\n+            \"seaborn-darkgrid\",\n+            \"seaborn-dark-palette\",\n+            \"seaborn-deep\",\n+            \"seaborn-muted\",\n+            \"seaborn-notebook\",\n+            \"seaborn-paper\",\n+            \"seaborn-pastel\",\n+            \"seaborn-poster\",\n+            \"seaborn-talk\",\n+            \"seaborn-ticks\",\n+            \"seaborn-white\",\n+            \"seaborn-whitegrid\",\n+        ]:\n+            _api.warn_deprecated(\n+                \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n+                \"are deprecated since %(since)s, as they no longer \"\n+                \"correspond to the styles shipped by seaborn. However, \"\n+                \"they will remain available as 'seaborn-v0_8-<style>'. \"\n+                \"Alternatively, directly use the seaborn API instead.\")\n+            s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n+    return s\n \n     for style in map(fix_style, styles):\n         if not isinstance(style, (str, Path)):\n@@ -246,15 +247,55 @@ def update_nested_dict(main_dict, new_dict):\n \n # Load style library\n # ==================\n-_base_library = read_style_directory(BASE_LIBRARY_PATH)\n-library = None\n-available = []\n \n+def reload_library():\n+    \"\"\"Reload the style library.\"\"\"\n+    global library\n+    library = update_user_library(_base_library)\n+    \n+    # Add deprecated seaborn style name aliases\n+    deprecated_seaborn_names = [\n+        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n+        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n+        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n+        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk', 'seaborn-ticks',\n+        'seaborn-white', 'seaborn-whitegrid'\n+    ]\n+    \n+    for deprecated_name in deprecated_seaborn_names:\n+        if deprecated_name == 'seaborn':\n+            new_name = 'seaborn-v0_8'\n+        else:\n+            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-')\n+        \n+        if new_name in library:\n+            library[deprecated_name] = library[new_name]\n+    \n+    available[:] = sorted(library.keys())\n \n def reload_library():\n     \"\"\"Reload the style library.\"\"\"\n     global library\n     library = update_user_library(_base_library)\n+    \n+    # Add deprecated seaborn style name aliases\n+    deprecated_seaborn_names = [\n+        'seaborn', 'seaborn-bright', 'seaborn-colorblind', 'seaborn-dark',\n+        'seaborn-darkgrid', 'seaborn-dark-palette', 'seaborn-deep',\n+        'seaborn-muted', 'seaborn-notebook', 'seaborn-paper',\n+        'seaborn-pastel', 'seaborn-poster', 'seaborn-talk',\n+        'seaborn-ticks', 'seaborn-white', 'seaborn-whitegrid'\n+    ]\n+    \n+    for deprecated_name in deprecated_seaborn_names:\n+        if deprecated_name == 'seaborn':\n+            new_name = 'seaborn-v0_8'\n+        else:\n+            new_name = deprecated_name.replace('seaborn-', 'seaborn-v0_8-', 1)\n+        \n+        if new_name in library:\n+            library[deprecated_name] = library[new_name]\n+    \n     available[:] = sorted(library.keys())\n \n \n"
  }
}