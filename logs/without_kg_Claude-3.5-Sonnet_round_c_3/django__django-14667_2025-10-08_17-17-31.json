{
  "zero_patches": {
    "Location 1 (/root/hy/projects_3/django/django/db/models/sql/query.py lines 2088-2089)": "\n        else:\n            # Remove names from the set of any existing \"immediate load\" names.\n            remaining_fields = existing.difference(field_names)\n            if remaining_fields:\n                # Still have fields for immediate loading\n                self.deferred_loading = remaining_fields, False\n            else:\n                # No immediate loading fields remain, switch to defer mode\n                # Empty set with defer=True means load only primary key\n                self.deferred_loading = frozenset(), True\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects_3/django/django/db/models/sql/query.py lines 2088-2089)": [
      "\n        else:\n            # Remove names from the set of any existing \"immediate load\" names.\n            remaining_fields = existing.difference(field_names)\n            if remaining_fields:\n                # Still have fields for immediate loading\n                self.deferred_loading = remaining_fields, False\n            else:\n                # No immediate loading fields remain, switch to defer mode\n                # Empty set with defer=True means load only primary key\n                self.deferred_loading = frozenset(), True\n",
      "\n        else:\n            # Remove names from the set of any existing \"immediate load\" names.\n            remaining_fields = existing.difference(field_names)\n            if remaining_fields:\n                # Still have fields for immediate loading\n                self.deferred_loading = remaining_fields, False\n            else:\n                # No immediate loading fields remain, switch to defer mode\n                # Empty set with defer=True means load only primary key\n                self.deferred_loading = frozenset(), True\n",
      "\n        else:\n            # Remove names from the set of any existing \"immediate load\" names.\n            remaining_fields = existing.difference(field_names)\n            if remaining_fields:\n                # Still have fields for immediate loading\n                self.deferred_loading = remaining_fields, False\n            else:\n                # No immediate loading fields remain, switch to defer mode\n                # Empty set with defer=True means load only primary key\n                self.deferred_loading = frozenset(), True\n",
      "\n        else:\n            # Remove names from the set of any existing \"immediate load\" names.\n            remaining_fields = existing.difference(field_names)\n            if remaining_fields:\n                # Still have fields for immediate loading\n                self.deferred_loading = remaining_fields, False\n            else:\n                # No immediate loading fields remain, switch to defer mode\n                # Empty set with defer=True means load only primary key\n                self.deferred_loading = frozenset(), True\n",
      "\n        else:\n            # Remove names from the set of any existing \"immediate load\" names.\n            remaining_fields = existing.difference(field_names)\n            if remaining_fields:\n                # Still have fields for immediate loading\n                self.deferred_loading = remaining_fields, False\n            else:\n                # No immediate loading fields remain, switch to defer mode\n                # Empty set with defer=True means load only primary key\n                self.deferred_loading = frozenset(), True\n",
      "\n        else:\n            # Remove names from the set of any existing \"immediate load\" names.\n            remaining_fields = existing.difference(field_names)\n            if remaining_fields:\n                # Still have fields for immediate loading\n                self.deferred_loading = remaining_fields, False\n            else:\n                # No immediate loading fields remain, switch to defer mode\n                # Empty set with defer=True means load only primary key\n                self.deferred_loading = frozenset(), True\n",
      "\n        else:\n            # Remove names from the set of any existing \"immediate load\" names.\n            remaining_fields = existing.difference(field_names)\n            if remaining_fields:\n                # Still have fields for immediate loading\n                self.deferred_loading = remaining_fields, False\n            else:\n                # No immediate loading fields remain, switch to defer mode\n                # Empty set with defer=True means load only primary key\n                self.deferred_loading = frozenset(), True\n",
      "\n        else:\n            # Remove names from the set of any existing \"immediate load\" names.\n            remaining_fields = existing.difference(field_names)\n            if remaining_fields:\n                # Still have fields for immediate loading\n                self.deferred_loading = remaining_fields, False\n            else:\n                # No immediate loading fields remain, switch to defer mode\n                # Empty set with defer=True means load only primary key\n                self.deferred_loading = frozenset(), True\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 8837881579..a9a9fc39b4 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2085,8 +2085,9 @@ class Query(BaseExpression):\n             # Add to existing deferred names.\n             self.deferred_loading = existing.union(field_names), True\n         else:\n-            # Remove names from the set of any existing \"immediate load\" names.\n-            self.deferred_loading = existing.difference(field_names), False\n+\n+# Remove names from the set of any existing \"immediate load\" names.\n+self.deferred_loading = existing.difference(field_names), False\n \n     def add_immediate_loading(self, field_names):\n         \"\"\"\n",
    "variant_0": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 8837881579..c79303df3a 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2084,9 +2084,18 @@ class Query(BaseExpression):\n         if defer:\n             # Add to existing deferred names.\n             self.deferred_loading = existing.union(field_names), True\n+        else:\n+\n         else:\n             # Remove names from the set of any existing \"immediate load\" names.\n-            self.deferred_loading = existing.difference(field_names), False\n+            remaining_fields = existing.difference(field_names)\n+            if remaining_fields:\n+                # Still have fields for immediate loading\n+                self.deferred_loading = remaining_fields, False\n+            else:\n+                # No immediate loading fields remain, switch to defer mode\n+                # Empty set with defer=True means load only primary key\n+                self.deferred_loading = frozenset(), True\n \n     def add_immediate_loading(self, field_names):\n         \"\"\"\n",
    "variant_1": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 8837881579..c79303df3a 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2084,9 +2084,18 @@ class Query(BaseExpression):\n         if defer:\n             # Add to existing deferred names.\n             self.deferred_loading = existing.union(field_names), True\n+        else:\n+\n         else:\n             # Remove names from the set of any existing \"immediate load\" names.\n-            self.deferred_loading = existing.difference(field_names), False\n+            remaining_fields = existing.difference(field_names)\n+            if remaining_fields:\n+                # Still have fields for immediate loading\n+                self.deferred_loading = remaining_fields, False\n+            else:\n+                # No immediate loading fields remain, switch to defer mode\n+                # Empty set with defer=True means load only primary key\n+                self.deferred_loading = frozenset(), True\n \n     def add_immediate_loading(self, field_names):\n         \"\"\"\n",
    "variant_2": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 8837881579..c79303df3a 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2084,9 +2084,18 @@ class Query(BaseExpression):\n         if defer:\n             # Add to existing deferred names.\n             self.deferred_loading = existing.union(field_names), True\n+        else:\n+\n         else:\n             # Remove names from the set of any existing \"immediate load\" names.\n-            self.deferred_loading = existing.difference(field_names), False\n+            remaining_fields = existing.difference(field_names)\n+            if remaining_fields:\n+                # Still have fields for immediate loading\n+                self.deferred_loading = remaining_fields, False\n+            else:\n+                # No immediate loading fields remain, switch to defer mode\n+                # Empty set with defer=True means load only primary key\n+                self.deferred_loading = frozenset(), True\n \n     def add_immediate_loading(self, field_names):\n         \"\"\"\n",
    "variant_3": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 8837881579..c79303df3a 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2084,9 +2084,18 @@ class Query(BaseExpression):\n         if defer:\n             # Add to existing deferred names.\n             self.deferred_loading = existing.union(field_names), True\n+        else:\n+\n         else:\n             # Remove names from the set of any existing \"immediate load\" names.\n-            self.deferred_loading = existing.difference(field_names), False\n+            remaining_fields = existing.difference(field_names)\n+            if remaining_fields:\n+                # Still have fields for immediate loading\n+                self.deferred_loading = remaining_fields, False\n+            else:\n+                # No immediate loading fields remain, switch to defer mode\n+                # Empty set with defer=True means load only primary key\n+                self.deferred_loading = frozenset(), True\n \n     def add_immediate_loading(self, field_names):\n         \"\"\"\n",
    "variant_4": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 8837881579..c79303df3a 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2084,9 +2084,18 @@ class Query(BaseExpression):\n         if defer:\n             # Add to existing deferred names.\n             self.deferred_loading = existing.union(field_names), True\n+        else:\n+\n         else:\n             # Remove names from the set of any existing \"immediate load\" names.\n-            self.deferred_loading = existing.difference(field_names), False\n+            remaining_fields = existing.difference(field_names)\n+            if remaining_fields:\n+                # Still have fields for immediate loading\n+                self.deferred_loading = remaining_fields, False\n+            else:\n+                # No immediate loading fields remain, switch to defer mode\n+                # Empty set with defer=True means load only primary key\n+                self.deferred_loading = frozenset(), True\n \n     def add_immediate_loading(self, field_names):\n         \"\"\"\n",
    "variant_5": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 8837881579..c79303df3a 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2084,9 +2084,18 @@ class Query(BaseExpression):\n         if defer:\n             # Add to existing deferred names.\n             self.deferred_loading = existing.union(field_names), True\n+        else:\n+\n         else:\n             # Remove names from the set of any existing \"immediate load\" names.\n-            self.deferred_loading = existing.difference(field_names), False\n+            remaining_fields = existing.difference(field_names)\n+            if remaining_fields:\n+                # Still have fields for immediate loading\n+                self.deferred_loading = remaining_fields, False\n+            else:\n+                # No immediate loading fields remain, switch to defer mode\n+                # Empty set with defer=True means load only primary key\n+                self.deferred_loading = frozenset(), True\n \n     def add_immediate_loading(self, field_names):\n         \"\"\"\n",
    "variant_6": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 8837881579..c79303df3a 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2084,9 +2084,18 @@ class Query(BaseExpression):\n         if defer:\n             # Add to existing deferred names.\n             self.deferred_loading = existing.union(field_names), True\n+        else:\n+\n         else:\n             # Remove names from the set of any existing \"immediate load\" names.\n-            self.deferred_loading = existing.difference(field_names), False\n+            remaining_fields = existing.difference(field_names)\n+            if remaining_fields:\n+                # Still have fields for immediate loading\n+                self.deferred_loading = remaining_fields, False\n+            else:\n+                # No immediate loading fields remain, switch to defer mode\n+                # Empty set with defer=True means load only primary key\n+                self.deferred_loading = frozenset(), True\n \n     def add_immediate_loading(self, field_names):\n         \"\"\"\n",
    "variant_7": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 8837881579..c79303df3a 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2084,9 +2084,18 @@ class Query(BaseExpression):\n         if defer:\n             # Add to existing deferred names.\n             self.deferred_loading = existing.union(field_names), True\n+        else:\n+\n         else:\n             # Remove names from the set of any existing \"immediate load\" names.\n-            self.deferred_loading = existing.difference(field_names), False\n+            remaining_fields = existing.difference(field_names)\n+            if remaining_fields:\n+                # Still have fields for immediate loading\n+                self.deferred_loading = remaining_fields, False\n+            else:\n+                # No immediate loading fields remain, switch to defer mode\n+                # Empty set with defer=True means load only primary key\n+                self.deferred_loading = frozenset(), True\n \n     def add_immediate_loading(self, field_names):\n         \"\"\"\n",
    "variant_8": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 8837881579..c79303df3a 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2084,9 +2084,18 @@ class Query(BaseExpression):\n         if defer:\n             # Add to existing deferred names.\n             self.deferred_loading = existing.union(field_names), True\n+        else:\n+\n         else:\n             # Remove names from the set of any existing \"immediate load\" names.\n-            self.deferred_loading = existing.difference(field_names), False\n+            remaining_fields = existing.difference(field_names)\n+            if remaining_fields:\n+                # Still have fields for immediate loading\n+                self.deferred_loading = remaining_fields, False\n+            else:\n+                # No immediate loading fields remain, switch to defer mode\n+                # Empty set with defer=True means load only primary key\n+                self.deferred_loading = frozenset(), True\n \n     def add_immediate_loading(self, field_names):\n         \"\"\"\n"
  }
}