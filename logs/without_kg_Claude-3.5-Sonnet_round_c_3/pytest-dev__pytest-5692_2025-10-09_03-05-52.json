{
  "zero_patches": {
    "Location 1 (/root/hy/projects_3/pytest/src/_pytest/junitxml.py lines 660-669)": "\n        suite_node = Junit.testsuite(\n            self._get_global_properties_node(),\n            [x.to_xml() for x in self.node_reporters_ordered],\n            name=self.suite_name,\n            errors=self.stats[\"error\"],\n            failures=self.stats[\"failure\"],\n            skipped=self.stats[\"skipped\"],\n            tests=numtests,\n            time=\"%.3f\" % suite_time_delta,\n            hostname=os.uname().nodename,\n            timestamp=time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time)),\n        )\n",
    "Location 2 (/root/hy/projects_3/pytest/src/_pytest/junitxml.py lines 643-649)": "\n    def pytest_sessionfinish(self):\n        dirname = os.path.dirname(os.path.abspath(self.logfile))\n        if not os.path.isdir(dirname):\n            os.makedirs(dirname)\n        logfile = open(self.logfile, \"w\", encoding=\"utf-8\")\n        suite_stop_time = time.time()\n        suite_time_delta = suite_stop_time - self.suite_start_time\n        hostname = os.uname().nodename\n        timestamp = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time))\n",
    "Location 3 (/root/hy/projects_3/pytest/src/_pytest/junitxml.py lines 640-641)": "\n    def pytest_sessionstart(self):\n        self.suite_start_time = time.time()\n        self.suite_start_timestamp = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time))\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects_3/pytest/src/_pytest/junitxml.py lines 660-669)": [
      "\n        suite_node = Junit.testsuite(\n            self._get_global_properties_node(),\n            [x.to_xml() for x in self.node_reporters_ordered],\n            name=self.suite_name,\n            errors=self.stats[\"error\"],\n            failures=self.stats[\"failure\"],\n            skipped=self.stats[\"skipped\"],\n            tests=numtests,\n            time=\"%.3f\" % suite_time_delta,\n            hostname=os.uname().nodename,\n            timestamp=time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time)),\n        )\n",
      "\n        suite_node = Junit.testsuite(\n            self._get_global_properties_node(),\n            [x.to_xml() for x in self.node_reporters_ordered],\n            name=self.suite_name,\n            errors=self.stats[\"error\"],\n            failures=self.stats[\"failure\"],\n            skipped=self.stats[\"skipped\"],\n            tests=numtests,\n            time=\"%.3f\" % suite_time_delta,\n            hostname=os.uname().nodename,\n            timestamp=time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time)),\n        )\n",
      "\n        suite_node = Junit.testsuite(\n            self._get_global_properties_node(),\n            [x.to_xml() for x in self.node_reporters_ordered],\n            name=self.suite_name,\n            errors=self.stats[\"error\"],\n            failures=self.stats[\"failure\"],\n            skipped=self.stats[\"skipped\"],\n            tests=numtests,\n            time=\"%.3f\" % suite_time_delta,\n            timestamp=time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time)),\n            hostname=os.uname().nodename,\n        )\n",
      "\n        suite_node = Junit.testsuite(\n            self._get_global_properties_node(),\n            [x.to_xml() for x in self.node_reporters_ordered],\n            name=self.suite_name,\n            errors=self.stats[\"error\"],\n            failures=self.stats[\"failure\"],\n            skipped=self.stats[\"skipped\"],\n            tests=numtests,\n            time=\"%.3f\" % suite_time_delta,\n            hostname=os.uname().nodename,\n            timestamp=time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time)),\n        )\n",
      "\n        suite_node = Junit.testsuite(\n            self._get_global_properties_node(),\n            [x.to_xml() for x in self.node_reporters_ordered],\n            name=self.suite_name,\n            errors=self.stats[\"error\"],\n            failures=self.stats[\"failure\"],\n            skipped=self.stats[\"skipped\"],\n            tests=numtests,\n            time=\"%.3f\" % suite_time_delta,\n            hostname=os.uname().nodename,\n            timestamp=time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time)),\n        )\n",
      "\n        suite_node = Junit.testsuite(\n            self._get_global_properties_node(),\n            [x.to_xml() for x in self.node_reporters_ordered],\n            name=self.suite_name,\n            errors=self.stats[\"error\"],\n            failures=self.stats[\"failure\"],\n            skipped=self.stats[\"skipped\"],\n            tests=numtests,\n            time=\"%.3f\" % suite_time_delta,\n            hostname=os.uname().nodename,\n            timestamp=time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time)),\n        )\n",
      "\n        suite_node = Junit.testsuite(\n            self._get_global_properties_node(),\n            [x.to_xml() for x in self.node_reporters_ordered],\n            name=self.suite_name,\n            errors=self.stats[\"error\"],\n            failures=self.stats[\"failure\"],\n            skipped=self.stats[\"skipped\"],\n            tests=numtests,\n            time=\"%.3f\" % suite_time_delta,\n            hostname=os.uname().nodename,\n            timestamp=time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time)),\n        )\n",
      "\n        suite_node = Junit.testsuite(\n            self._get_global_properties_node(),\n            [x.to_xml() for x in self.node_reporters_ordered],\n            name=self.suite_name,\n            errors=self.stats[\"error\"],\n            failures=self.stats[\"failure\"],\n            skipped=self.stats[\"skipped\"],\n            tests=numtests,\n            time=\"%.3f\" % suite_time_delta,\n            hostname=os.uname().nodename,\n            timestamp=time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time)),\n        )\n"
    ],
    "Location 2 (/root/hy/projects_3/pytest/src/_pytest/junitxml.py lines 643-649)": [
      "\n    def pytest_sessionfinish(self):\n        dirname = os.path.dirname(os.path.abspath(self.logfile))\n        if not os.path.isdir(dirname):\n            os.makedirs(dirname)\n        logfile = open(self.logfile, \"w\", encoding=\"utf-8\")\n        suite_stop_time = time.time()\n        suite_time_delta = suite_stop_time - self.suite_start_time\n        hostname = os.uname().nodename\n        timestamp = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time))\n",
      "\n    def pytest_sessionfinish(self):\n        dirname = os.path.dirname(os.path.abspath(self.logfile))\n        if not os.path.isdir(dirname):\n            os.makedirs(dirname)\n        logfile = open(self.logfile, \"w\", encoding=\"utf-8\")\n        suite_stop_time = time.time()\n        suite_time_delta = suite_stop_time - self.suite_start_time\n        hostname = os.uname().nodename\n        timestamp = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time))\n",
      "\n    def pytest_sessionfinish(self):\n        dirname = os.path.dirname(os.path.abspath(self.logfile))\n        if not os.path.isdir(dirname):\n            os.makedirs(dirname)\n        logfile = open(self.logfile, \"w\", encoding=\"utf-8\")\n        suite_stop_time = time.time()\n        suite_time_delta = suite_stop_time - self.suite_start_time\n        hostname = os.uname().nodename\n        timestamp = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time))\n",
      "\n    def pytest_sessionfinish(self):\n        dirname = os.path.dirname(os.path.abspath(self.logfile))\n        if not os.path.isdir(dirname):\n            os.makedirs(dirname)\n        logfile = open(self.logfile, \"w\", encoding=\"utf-8\")\n        suite_stop_time = time.time()\n        suite_time_delta = suite_stop_time - self.suite_start_time\n",
      "\n    def pytest_sessionfinish(self):\n        dirname = os.path.dirname(os.path.abspath(self.logfile))\n        if not os.path.isdir(dirname):\n            os.makedirs(dirname)\n        logfile = open(self.logfile, \"w\", encoding=\"utf-8\")\n        suite_stop_time = time.time()\n        suite_time_delta = suite_stop_time - self.suite_start_time\n        hostname = os.uname().nodename\n        timestamp = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time))\n",
      "\n    def pytest_sessionfinish(self):\n        dirname = os.path.dirname(os.path.abspath(self.logfile))\n        if not os.path.isdir(dirname):\n            os.makedirs(dirname)\n        logfile = open(self.logfile, \"w\", encoding=\"utf-8\")\n        suite_stop_time = time.time()\n        suite_time_delta = suite_stop_time - self.suite_start_time\n        \n        # Get hostname and format timestamp for testsuite attributes\n        hostname = os.uname().nodename\n        timestamp = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time))\n",
      "\n    def pytest_sessionfinish(self):\n        dirname = os.path.dirname(os.path.abspath(self.logfile))\n        if not os.path.isdir(dirname):\n            os.makedirs(dirname)\n        logfile = open(self.logfile, \"w\", encoding=\"utf-8\")\n        suite_stop_time = time.time()\n        suite_time_delta = suite_stop_time - self.suite_start_time\n        hostname = os.uname().nodename\n        timestamp = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time))\n",
      "\n    def pytest_sessionfinish(self):\n        dirname = os.path.dirname(os.path.abspath(self.logfile))\n        if not os.path.isdir(dirname):\n            os.makedirs(dirname)\n        logfile = open(self.logfile, \"w\", encoding=\"utf-8\")\n        suite_stop_time = time.time()\n        suite_time_delta = suite_stop_time - self.suite_start_time\n"
    ],
    "Location 3 (/root/hy/projects_3/pytest/src/_pytest/junitxml.py lines 640-641)": [
      "\n    def pytest_sessionstart(self):\n        self.suite_start_time = time.time()\n",
      "\n    def pytest_sessionstart(self):\n        self.suite_start_time = time.time()\n",
      "\n    def pytest_sessionstart(self):\n        self.suite_start_time = time.time()\n",
      "\n    def pytest_sessionstart(self):\n        self.suite_start_time = time.time()\n",
      "\n    def pytest_sessionstart(self):\n        self.suite_start_time = time.time()\n",
      "\n    def pytest_sessionstart(self):\n        self.suite_start_time = time.time()\n",
      "\n    def pytest_sessionstart(self):\n        self.suite_start_time = time.time()\n",
      "\n    def pytest_sessionstart(self):\n        self.suite_start_time = time.time()\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/src/_pytest/junitxml.py b/src/_pytest/junitxml.py\nindex 15c630b1d..5a8371d00 100644\n--- a/src/_pytest/junitxml.py\n+++ b/src/_pytest/junitxml.py\n@@ -637,9 +637,11 @@ class LogXML:\n         reporter.attrs.update(classname=\"pytest\", name=\"internal\")\n         reporter._add_simple(Junit.error, \"internal error\", excrepr)\n \n+\n     def pytest_sessionstart(self):\n         self.suite_start_time = time.time()\n \n+\n     def pytest_sessionfinish(self):\n         dirname = os.path.dirname(os.path.abspath(self.logfile))\n         if not os.path.isdir(dirname):\n@@ -657,6 +659,7 @@ class LogXML:\n         )\n         logfile.write('<?xml version=\"1.0\" encoding=\"utf-8\"?>')\n \n+\n         suite_node = Junit.testsuite(\n             self._get_global_properties_node(),\n             [x.to_xml() for x in self.node_reporters_ordered],\n@@ -666,6 +669,8 @@ class LogXML:\n             skipped=self.stats[\"skipped\"],\n             tests=numtests,\n             time=\"%.3f\" % suite_time_delta,\n+            hostname=os.uname().nodename,\n+            timestamp=time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time)),\n         )\n         logfile.write(Junit.testsuites([suite_node]).unicode(indent=0))\n         logfile.close()\n",
    "variant_0": "diff --git a/src/_pytest/junitxml.py b/src/_pytest/junitxml.py\nindex 15c630b1d..ce280e6db 100644\n--- a/src/_pytest/junitxml.py\n+++ b/src/_pytest/junitxml.py\n@@ -637,8 +637,11 @@ class LogXML:\n         reporter.attrs.update(classname=\"pytest\", name=\"internal\")\n         reporter._add_simple(Junit.error, \"internal error\", excrepr)\n \n+\n     def pytest_sessionstart(self):\n         self.suite_start_time = time.time()\n+        self.suite_start_timestamp = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time))\n+\n \n     def pytest_sessionfinish(self):\n         dirname = os.path.dirname(os.path.abspath(self.logfile))\n@@ -647,6 +650,8 @@ class LogXML:\n         logfile = open(self.logfile, \"w\", encoding=\"utf-8\")\n         suite_stop_time = time.time()\n         suite_time_delta = suite_stop_time - self.suite_start_time\n+        hostname = os.uname().nodename\n+        timestamp = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time))\n \n         numtests = (\n             self.stats[\"passed\"]\n@@ -657,6 +662,7 @@ class LogXML:\n         )\n         logfile.write('<?xml version=\"1.0\" encoding=\"utf-8\"?>')\n \n+\n         suite_node = Junit.testsuite(\n             self._get_global_properties_node(),\n             [x.to_xml() for x in self.node_reporters_ordered],\n@@ -666,6 +672,8 @@ class LogXML:\n             skipped=self.stats[\"skipped\"],\n             tests=numtests,\n             time=\"%.3f\" % suite_time_delta,\n+            hostname=os.uname().nodename,\n+            timestamp=time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time)),\n         )\n         logfile.write(Junit.testsuites([suite_node]).unicode(indent=0))\n         logfile.close()\n",
    "variant_1": "diff --git a/src/_pytest/junitxml.py b/src/_pytest/junitxml.py\nindex 15c630b1d..cb69b3b24 100644\n--- a/src/_pytest/junitxml.py\n+++ b/src/_pytest/junitxml.py\n@@ -637,9 +637,11 @@ class LogXML:\n         reporter.attrs.update(classname=\"pytest\", name=\"internal\")\n         reporter._add_simple(Junit.error, \"internal error\", excrepr)\n \n+\n     def pytest_sessionstart(self):\n         self.suite_start_time = time.time()\n \n+\n     def pytest_sessionfinish(self):\n         dirname = os.path.dirname(os.path.abspath(self.logfile))\n         if not os.path.isdir(dirname):\n@@ -647,6 +649,8 @@ class LogXML:\n         logfile = open(self.logfile, \"w\", encoding=\"utf-8\")\n         suite_stop_time = time.time()\n         suite_time_delta = suite_stop_time - self.suite_start_time\n+        hostname = os.uname().nodename\n+        timestamp = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time))\n \n         numtests = (\n             self.stats[\"passed\"]\n@@ -657,6 +661,7 @@ class LogXML:\n         )\n         logfile.write('<?xml version=\"1.0\" encoding=\"utf-8\"?>')\n \n+\n         suite_node = Junit.testsuite(\n             self._get_global_properties_node(),\n             [x.to_xml() for x in self.node_reporters_ordered],\n@@ -666,6 +671,8 @@ class LogXML:\n             skipped=self.stats[\"skipped\"],\n             tests=numtests,\n             time=\"%.3f\" % suite_time_delta,\n+            hostname=os.uname().nodename,\n+            timestamp=time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time)),\n         )\n         logfile.write(Junit.testsuites([suite_node]).unicode(indent=0))\n         logfile.close()\n",
    "variant_2": "diff --git a/src/_pytest/junitxml.py b/src/_pytest/junitxml.py\nindex 15c630b1d..cb69b3b24 100644\n--- a/src/_pytest/junitxml.py\n+++ b/src/_pytest/junitxml.py\n@@ -637,9 +637,11 @@ class LogXML:\n         reporter.attrs.update(classname=\"pytest\", name=\"internal\")\n         reporter._add_simple(Junit.error, \"internal error\", excrepr)\n \n+\n     def pytest_sessionstart(self):\n         self.suite_start_time = time.time()\n \n+\n     def pytest_sessionfinish(self):\n         dirname = os.path.dirname(os.path.abspath(self.logfile))\n         if not os.path.isdir(dirname):\n@@ -647,6 +649,8 @@ class LogXML:\n         logfile = open(self.logfile, \"w\", encoding=\"utf-8\")\n         suite_stop_time = time.time()\n         suite_time_delta = suite_stop_time - self.suite_start_time\n+        hostname = os.uname().nodename\n+        timestamp = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time))\n \n         numtests = (\n             self.stats[\"passed\"]\n@@ -657,6 +661,7 @@ class LogXML:\n         )\n         logfile.write('<?xml version=\"1.0\" encoding=\"utf-8\"?>')\n \n+\n         suite_node = Junit.testsuite(\n             self._get_global_properties_node(),\n             [x.to_xml() for x in self.node_reporters_ordered],\n@@ -666,6 +671,8 @@ class LogXML:\n             skipped=self.stats[\"skipped\"],\n             tests=numtests,\n             time=\"%.3f\" % suite_time_delta,\n+            hostname=os.uname().nodename,\n+            timestamp=time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time)),\n         )\n         logfile.write(Junit.testsuites([suite_node]).unicode(indent=0))\n         logfile.close()\n",
    "variant_3": "diff --git a/src/_pytest/junitxml.py b/src/_pytest/junitxml.py\nindex 15c630b1d..4343e3fb3 100644\n--- a/src/_pytest/junitxml.py\n+++ b/src/_pytest/junitxml.py\n@@ -637,9 +637,11 @@ class LogXML:\n         reporter.attrs.update(classname=\"pytest\", name=\"internal\")\n         reporter._add_simple(Junit.error, \"internal error\", excrepr)\n \n+\n     def pytest_sessionstart(self):\n         self.suite_start_time = time.time()\n \n+\n     def pytest_sessionfinish(self):\n         dirname = os.path.dirname(os.path.abspath(self.logfile))\n         if not os.path.isdir(dirname):\n@@ -647,6 +649,8 @@ class LogXML:\n         logfile = open(self.logfile, \"w\", encoding=\"utf-8\")\n         suite_stop_time = time.time()\n         suite_time_delta = suite_stop_time - self.suite_start_time\n+        hostname = os.uname().nodename\n+        timestamp = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time))\n \n         numtests = (\n             self.stats[\"passed\"]\n@@ -657,6 +661,7 @@ class LogXML:\n         )\n         logfile.write('<?xml version=\"1.0\" encoding=\"utf-8\"?>')\n \n+\n         suite_node = Junit.testsuite(\n             self._get_global_properties_node(),\n             [x.to_xml() for x in self.node_reporters_ordered],\n@@ -666,6 +671,8 @@ class LogXML:\n             skipped=self.stats[\"skipped\"],\n             tests=numtests,\n             time=\"%.3f\" % suite_time_delta,\n+            timestamp=time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time)),\n+            hostname=os.uname().nodename,\n         )\n         logfile.write(Junit.testsuites([suite_node]).unicode(indent=0))\n         logfile.close()\n",
    "variant_4": "diff --git a/src/_pytest/junitxml.py b/src/_pytest/junitxml.py\nindex 15c630b1d..5a8371d00 100644\n--- a/src/_pytest/junitxml.py\n+++ b/src/_pytest/junitxml.py\n@@ -637,9 +637,11 @@ class LogXML:\n         reporter.attrs.update(classname=\"pytest\", name=\"internal\")\n         reporter._add_simple(Junit.error, \"internal error\", excrepr)\n \n+\n     def pytest_sessionstart(self):\n         self.suite_start_time = time.time()\n \n+\n     def pytest_sessionfinish(self):\n         dirname = os.path.dirname(os.path.abspath(self.logfile))\n         if not os.path.isdir(dirname):\n@@ -657,6 +659,7 @@ class LogXML:\n         )\n         logfile.write('<?xml version=\"1.0\" encoding=\"utf-8\"?>')\n \n+\n         suite_node = Junit.testsuite(\n             self._get_global_properties_node(),\n             [x.to_xml() for x in self.node_reporters_ordered],\n@@ -666,6 +669,8 @@ class LogXML:\n             skipped=self.stats[\"skipped\"],\n             tests=numtests,\n             time=\"%.3f\" % suite_time_delta,\n+            hostname=os.uname().nodename,\n+            timestamp=time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time)),\n         )\n         logfile.write(Junit.testsuites([suite_node]).unicode(indent=0))\n         logfile.close()\n",
    "variant_5": "diff --git a/src/_pytest/junitxml.py b/src/_pytest/junitxml.py\nindex 15c630b1d..cb69b3b24 100644\n--- a/src/_pytest/junitxml.py\n+++ b/src/_pytest/junitxml.py\n@@ -637,9 +637,11 @@ class LogXML:\n         reporter.attrs.update(classname=\"pytest\", name=\"internal\")\n         reporter._add_simple(Junit.error, \"internal error\", excrepr)\n \n+\n     def pytest_sessionstart(self):\n         self.suite_start_time = time.time()\n \n+\n     def pytest_sessionfinish(self):\n         dirname = os.path.dirname(os.path.abspath(self.logfile))\n         if not os.path.isdir(dirname):\n@@ -647,6 +649,8 @@ class LogXML:\n         logfile = open(self.logfile, \"w\", encoding=\"utf-8\")\n         suite_stop_time = time.time()\n         suite_time_delta = suite_stop_time - self.suite_start_time\n+        hostname = os.uname().nodename\n+        timestamp = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time))\n \n         numtests = (\n             self.stats[\"passed\"]\n@@ -657,6 +661,7 @@ class LogXML:\n         )\n         logfile.write('<?xml version=\"1.0\" encoding=\"utf-8\"?>')\n \n+\n         suite_node = Junit.testsuite(\n             self._get_global_properties_node(),\n             [x.to_xml() for x in self.node_reporters_ordered],\n@@ -666,6 +671,8 @@ class LogXML:\n             skipped=self.stats[\"skipped\"],\n             tests=numtests,\n             time=\"%.3f\" % suite_time_delta,\n+            hostname=os.uname().nodename,\n+            timestamp=time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time)),\n         )\n         logfile.write(Junit.testsuites([suite_node]).unicode(indent=0))\n         logfile.close()\n",
    "variant_6": "diff --git a/src/_pytest/junitxml.py b/src/_pytest/junitxml.py\nindex 15c630b1d..ad44a959d 100644\n--- a/src/_pytest/junitxml.py\n+++ b/src/_pytest/junitxml.py\n@@ -637,9 +637,11 @@ class LogXML:\n         reporter.attrs.update(classname=\"pytest\", name=\"internal\")\n         reporter._add_simple(Junit.error, \"internal error\", excrepr)\n \n+\n     def pytest_sessionstart(self):\n         self.suite_start_time = time.time()\n \n+\n     def pytest_sessionfinish(self):\n         dirname = os.path.dirname(os.path.abspath(self.logfile))\n         if not os.path.isdir(dirname):\n@@ -647,6 +649,10 @@ class LogXML:\n         logfile = open(self.logfile, \"w\", encoding=\"utf-8\")\n         suite_stop_time = time.time()\n         suite_time_delta = suite_stop_time - self.suite_start_time\n+        \n+        # Get hostname and format timestamp for testsuite attributes\n+        hostname = os.uname().nodename\n+        timestamp = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time))\n \n         numtests = (\n             self.stats[\"passed\"]\n@@ -657,6 +663,7 @@ class LogXML:\n         )\n         logfile.write('<?xml version=\"1.0\" encoding=\"utf-8\"?>')\n \n+\n         suite_node = Junit.testsuite(\n             self._get_global_properties_node(),\n             [x.to_xml() for x in self.node_reporters_ordered],\n@@ -666,6 +673,8 @@ class LogXML:\n             skipped=self.stats[\"skipped\"],\n             tests=numtests,\n             time=\"%.3f\" % suite_time_delta,\n+            hostname=os.uname().nodename,\n+            timestamp=time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time)),\n         )\n         logfile.write(Junit.testsuites([suite_node]).unicode(indent=0))\n         logfile.close()\n",
    "variant_7": "diff --git a/src/_pytest/junitxml.py b/src/_pytest/junitxml.py\nindex 15c630b1d..cb69b3b24 100644\n--- a/src/_pytest/junitxml.py\n+++ b/src/_pytest/junitxml.py\n@@ -637,9 +637,11 @@ class LogXML:\n         reporter.attrs.update(classname=\"pytest\", name=\"internal\")\n         reporter._add_simple(Junit.error, \"internal error\", excrepr)\n \n+\n     def pytest_sessionstart(self):\n         self.suite_start_time = time.time()\n \n+\n     def pytest_sessionfinish(self):\n         dirname = os.path.dirname(os.path.abspath(self.logfile))\n         if not os.path.isdir(dirname):\n@@ -647,6 +649,8 @@ class LogXML:\n         logfile = open(self.logfile, \"w\", encoding=\"utf-8\")\n         suite_stop_time = time.time()\n         suite_time_delta = suite_stop_time - self.suite_start_time\n+        hostname = os.uname().nodename\n+        timestamp = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time))\n \n         numtests = (\n             self.stats[\"passed\"]\n@@ -657,6 +661,7 @@ class LogXML:\n         )\n         logfile.write('<?xml version=\"1.0\" encoding=\"utf-8\"?>')\n \n+\n         suite_node = Junit.testsuite(\n             self._get_global_properties_node(),\n             [x.to_xml() for x in self.node_reporters_ordered],\n@@ -666,6 +671,8 @@ class LogXML:\n             skipped=self.stats[\"skipped\"],\n             tests=numtests,\n             time=\"%.3f\" % suite_time_delta,\n+            hostname=os.uname().nodename,\n+            timestamp=time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time)),\n         )\n         logfile.write(Junit.testsuites([suite_node]).unicode(indent=0))\n         logfile.close()\n",
    "variant_8": "diff --git a/src/_pytest/junitxml.py b/src/_pytest/junitxml.py\nindex 15c630b1d..5a8371d00 100644\n--- a/src/_pytest/junitxml.py\n+++ b/src/_pytest/junitxml.py\n@@ -637,9 +637,11 @@ class LogXML:\n         reporter.attrs.update(classname=\"pytest\", name=\"internal\")\n         reporter._add_simple(Junit.error, \"internal error\", excrepr)\n \n+\n     def pytest_sessionstart(self):\n         self.suite_start_time = time.time()\n \n+\n     def pytest_sessionfinish(self):\n         dirname = os.path.dirname(os.path.abspath(self.logfile))\n         if not os.path.isdir(dirname):\n@@ -657,6 +659,7 @@ class LogXML:\n         )\n         logfile.write('<?xml version=\"1.0\" encoding=\"utf-8\"?>')\n \n+\n         suite_node = Junit.testsuite(\n             self._get_global_properties_node(),\n             [x.to_xml() for x in self.node_reporters_ordered],\n@@ -666,6 +669,8 @@ class LogXML:\n             skipped=self.stats[\"skipped\"],\n             tests=numtests,\n             time=\"%.3f\" % suite_time_delta,\n+            hostname=os.uname().nodename,\n+            timestamp=time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(self.suite_start_time)),\n         )\n         logfile.write(Junit.testsuites([suite_node]).unicode(indent=0))\n         logfile.close()\n"
  }
}