{
  "zero_patches": {
    "Location 1 (/root/hy/projects_3/pylint/pylint/config/config_initialization.py lines 85-85)": "\n    # Check if there are any options that we do not recognize\n    unrecognized_options: list[str] = []\n    for opt in parsed_args_list:\n        if opt.startswith(\"--\"):\n            unrecognized_options.append(opt[2:])\n        elif opt.startswith(\"-\"):\n            unrecognized_options.append(opt[1:])\n    if unrecognized_options:\n        msg = \", \".join(unrecognized_options)\n        linter.add_message(\"unrecognized-option\", line=0, args=msg)\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects_3/pylint/pylint/config/config_initialization.py lines 85-85)": [
      "\n    # Check if there are any options that we do not recognize\n    unrecognized_options: list[str] = []\n    for opt in parsed_args_list:\n        if opt.startswith(\"--\"):\n            unrecognized_options.append(opt[2:])\n        elif opt.startswith(\"-\"):\n            unrecognized_options.append(opt[1:])\n    if unrecognized_options:\n        msg = \", \".join(unrecognized_options)\n        linter.add_message(\"unrecognized-option\", line=0, args=msg)\n\n    # Set the current module to configuration as we don't know where\n    # the --load-plugins key is coming from\n    linter.set_current_module(\"Command line or configuration file\")\n\n    # We have loaded configuration from config file and command line. Now, we can\n    # load plugin specific configuration.\n    linter.load_plugin_configuration()\n\n    # parsed_args_list should now only be a list of files/directories to lint.\n",
      "\n    # Check if there are any options that we do not recognize\n    unrecognized_options: list[str] = []\n    for opt in parsed_args_list:\n        if opt.startswith(\"--\"):\n            unrecognized_options.append(opt[2:])\n        elif opt.startswith(\"-\"):\n            unrecognized_options.append(opt[1:])\n    if unrecognized_options:\n        msg = \", \".join(unrecognized_options)\n        linter.add_message(\"unrecognized-option\", line=0, args=msg)\n\n    # Set the current module to configuration as we don't know where\n    # the --load-plugins key is coming from\n    linter.set_current_module(\"Command line or configuration file\")\n",
      "\n    # Check if there are any options that we do not recognize\n    unrecognized_options: list[str] = []\n    for opt in parsed_args_list:\n        if opt.startswith(\"--\"):\n            unrecognized_options.append(opt[2:])\n        elif opt.startswith(\"-\"):\n            unrecognized_options.append(opt[1:])\n    if unrecognized_options:\n        msg = \", \".join(unrecognized_options)\n        linter.add_message(\"unrecognized-option\", line=0, args=msg)\n\n    # Set the current module to configuration as we don't know where\n    # the --load-plugins key is coming from\n    linter.set_current_module(\"Command line or configuration file\")\n\n    # We have loaded configuration from config file and command line. Now, we can\n    # load plugin specific configuration.\n    linter.load_plugin_configuration()\n\n    # parsed_args_list should now only be a list of files/directories to lint.\n",
      "\n    # Check if there are any options that we do not recognize\n    unrecognized_options: list[str] = []\n    for opt in parsed_args_list:\n        if opt.startswith(\"--\"):\n            unrecognized_options.append(opt[2:])\n        elif opt.startswith(\"-\"):\n            unrecognized_options.append(opt[1:])\n    if unrecognized_options:\n        msg = \", \".join(unrecognized_options)\n        linter.add_message(\"unrecognized-option\", line=0, args=msg)\n",
      "\n    # Check if there are any options that we do not recognize\n    unrecognized_options: list[str] = []\n    for opt in parsed_args_list:\n        if opt.startswith(\"--\"):\n            unrecognized_options.append(opt[2:])\n        elif opt.startswith(\"-\"):\n            unrecognized_options.append(opt[1:])\n    if unrecognized_options:\n        msg = \", \".join(unrecognized_options)\n        linter.add_message(\"unrecognized-option\", line=0, args=msg)\n\n    # Set the current module to configuration as we don't know where\n    # the --load-plugins key is coming from\n    linter.set_current_module(\"Command line or configuration file\")\n\n    # We have loaded configuration from config file and command line. Now, we can\n    # load plugin specific configuration.\n    linter.load_plugin_configuration()\n\n    # parsed_args_list should now only be a list of files/directories to lint.\n",
      "\n    # Check if there are any options that we do not recognize\n    unrecognized_options: list[str] = []\n    for opt in parsed_args_list:\n        if opt.startswith(\"--\"):\n            unrecognized_options.append(opt[2:])\n        elif opt.startswith(\"-\"):\n            unrecognized_options.append(opt[1:])\n    if unrecognized_options:\n        msg = \", \".join(unrecognized_options)\n        linter.add_message(\"unrecognized-option\", line=0, args=msg)\n\n    # Set the current module to configuration as we don't know where\n    # the --load-plugins key is coming from\n    linter.set_current_module(\"Command line or configuration file\")\n\n    # We have loaded configuration from config file and command line. Now, we can\n    # load plugin specific configuration.\n    linter.load_plugin_configuration()\n\n    # parsed_args_list should now only be a list of files/directories to lint.\n",
      "\n    # Check if there are any options that we do not recognize\n    unrecognized_options: list[str] = []\n    for opt in parsed_args_list:\n        if opt.startswith(\"--\"):\n            unrecognized_options.append(opt[2:])\n        elif opt.startswith(\"-\"):\n            unrecognized_options.append(opt[1:])\n    if unrecognized_options:\n        msg = \", \".join(unrecognized_options)\n        linter.add_message(\"unrecognized-option\", line=0, args=msg)\n\n    # Set the current module to configuration as we don't know where\n    # the --load-plugins key is coming from\n    linter.set_current_module(\"Command line or configuration file\")\n\n    # We have loaded configuration from config file and command line. Now, we can\n    # load plugin specific configuration.\n    linter.load_plugin_configuration()\n\n    # parsed_args_list should now only be a list of files/directories to lint.\n",
      "\n    # Check if there are any options that we do not recognize\n    unrecognized_options: list[str] = []\n    for opt in parsed_args_list:\n        if opt.startswith(\"--\"):\n            unrecognized_options.append(opt[2:])\n        elif opt.startswith(\"-\"):\n            unrecognized_options.append(opt[1:])\n    if unrecognized_options:\n        msg = \", \".join(unrecognized_options)\n        linter.add_message(\"unrecognized-option\", line=0, args=msg)\n\n    # Set the current module to configuration as we don't know where\n    # the --load-plugins key is coming from\n    linter.set_current_module(\"Command line or configuration file\")\n\n    # We have loaded configuration from config file and command line. Now, we can\n    # load plugin specific configuration.\n    linter.load_plugin_configuration()\n\n    # parsed_args_list should now only be a list of files/directories to lint.\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/pylint/config/config_initialization.py b/pylint/config/config_initialization.py\nindex 24e453a73..3d9fa697f 100644\n--- a/pylint/config/config_initialization.py\n+++ b/pylint/config/config_initialization.py\n@@ -82,7 +82,8 @@ def _config_initialization(\n     if unrecognized_options:\n         msg = \", \".join(unrecognized_options)\n         linter.add_message(\"unrecognized-option\", line=0, args=msg)\n-        raise _UnrecognizedOptionError(options=unrecognized_options)\n+\n+\n \n     # Set the current module to configuration as we don't know where\n     # the --load-plugins key is coming from\n",
    "variant_0": "diff --git a/pylint/config/config_initialization.py b/pylint/config/config_initialization.py\nindex 24e453a73..4d787c4e5 100644\n--- a/pylint/config/config_initialization.py\n+++ b/pylint/config/config_initialization.py\n@@ -82,7 +82,17 @@ def _config_initialization(\n     if unrecognized_options:\n         msg = \", \".join(unrecognized_options)\n         linter.add_message(\"unrecognized-option\", line=0, args=msg)\n-        raise _UnrecognizedOptionError(options=unrecognized_options)\n+\n+    # Check if there are any options that we do not recognize\n+    unrecognized_options: list[str] = []\n+    for opt in parsed_args_list:\n+        if opt.startswith(\"--\"):\n+            unrecognized_options.append(opt[2:])\n+        elif opt.startswith(\"-\"):\n+            unrecognized_options.append(opt[1:])\n+    if unrecognized_options:\n+        msg = \", \".join(unrecognized_options)\n+        linter.add_message(\"unrecognized-option\", line=0, args=msg)\n \n     # Set the current module to configuration as we don't know where\n     # the --load-plugins key is coming from\n",
    "variant_1": "diff --git a/pylint/config/config_initialization.py b/pylint/config/config_initialization.py\nindex 24e453a73..82a151cb4 100644\n--- a/pylint/config/config_initialization.py\n+++ b/pylint/config/config_initialization.py\n@@ -82,7 +82,27 @@ def _config_initialization(\n     if unrecognized_options:\n         msg = \", \".join(unrecognized_options)\n         linter.add_message(\"unrecognized-option\", line=0, args=msg)\n-        raise _UnrecognizedOptionError(options=unrecognized_options)\n+\n+    # Check if there are any options that we do not recognize\n+    unrecognized_options: list[str] = []\n+    for opt in parsed_args_list:\n+        if opt.startswith(\"--\"):\n+            unrecognized_options.append(opt[2:])\n+        elif opt.startswith(\"-\"):\n+            unrecognized_options.append(opt[1:])\n+    if unrecognized_options:\n+        msg = \", \".join(unrecognized_options)\n+        linter.add_message(\"unrecognized-option\", line=0, args=msg)\n+\n+    # Set the current module to configuration as we don't know where\n+    # the --load-plugins key is coming from\n+    linter.set_current_module(\"Command line or configuration file\")\n+\n+    # We have loaded configuration from config file and command line. Now, we can\n+    # load plugin specific configuration.\n+    linter.load_plugin_configuration()\n+\n+    # parsed_args_list should now only be a list of files/directories to lint.\n \n     # Set the current module to configuration as we don't know where\n     # the --load-plugins key is coming from\n",
    "variant_2": "diff --git a/pylint/config/config_initialization.py b/pylint/config/config_initialization.py\nindex 24e453a73..a99f676f5 100644\n--- a/pylint/config/config_initialization.py\n+++ b/pylint/config/config_initialization.py\n@@ -82,7 +82,21 @@ def _config_initialization(\n     if unrecognized_options:\n         msg = \", \".join(unrecognized_options)\n         linter.add_message(\"unrecognized-option\", line=0, args=msg)\n-        raise _UnrecognizedOptionError(options=unrecognized_options)\n+\n+    # Check if there are any options that we do not recognize\n+    unrecognized_options: list[str] = []\n+    for opt in parsed_args_list:\n+        if opt.startswith(\"--\"):\n+            unrecognized_options.append(opt[2:])\n+        elif opt.startswith(\"-\"):\n+            unrecognized_options.append(opt[1:])\n+    if unrecognized_options:\n+        msg = \", \".join(unrecognized_options)\n+        linter.add_message(\"unrecognized-option\", line=0, args=msg)\n+\n+    # Set the current module to configuration as we don't know where\n+    # the --load-plugins key is coming from\n+    linter.set_current_module(\"Command line or configuration file\")\n \n     # Set the current module to configuration as we don't know where\n     # the --load-plugins key is coming from\n",
    "variant_3": "diff --git a/pylint/config/config_initialization.py b/pylint/config/config_initialization.py\nindex 24e453a73..82a151cb4 100644\n--- a/pylint/config/config_initialization.py\n+++ b/pylint/config/config_initialization.py\n@@ -82,7 +82,27 @@ def _config_initialization(\n     if unrecognized_options:\n         msg = \", \".join(unrecognized_options)\n         linter.add_message(\"unrecognized-option\", line=0, args=msg)\n-        raise _UnrecognizedOptionError(options=unrecognized_options)\n+\n+    # Check if there are any options that we do not recognize\n+    unrecognized_options: list[str] = []\n+    for opt in parsed_args_list:\n+        if opt.startswith(\"--\"):\n+            unrecognized_options.append(opt[2:])\n+        elif opt.startswith(\"-\"):\n+            unrecognized_options.append(opt[1:])\n+    if unrecognized_options:\n+        msg = \", \".join(unrecognized_options)\n+        linter.add_message(\"unrecognized-option\", line=0, args=msg)\n+\n+    # Set the current module to configuration as we don't know where\n+    # the --load-plugins key is coming from\n+    linter.set_current_module(\"Command line or configuration file\")\n+\n+    # We have loaded configuration from config file and command line. Now, we can\n+    # load plugin specific configuration.\n+    linter.load_plugin_configuration()\n+\n+    # parsed_args_list should now only be a list of files/directories to lint.\n \n     # Set the current module to configuration as we don't know where\n     # the --load-plugins key is coming from\n",
    "variant_4": "diff --git a/pylint/config/config_initialization.py b/pylint/config/config_initialization.py\nindex 24e453a73..4d787c4e5 100644\n--- a/pylint/config/config_initialization.py\n+++ b/pylint/config/config_initialization.py\n@@ -82,7 +82,17 @@ def _config_initialization(\n     if unrecognized_options:\n         msg = \", \".join(unrecognized_options)\n         linter.add_message(\"unrecognized-option\", line=0, args=msg)\n-        raise _UnrecognizedOptionError(options=unrecognized_options)\n+\n+    # Check if there are any options that we do not recognize\n+    unrecognized_options: list[str] = []\n+    for opt in parsed_args_list:\n+        if opt.startswith(\"--\"):\n+            unrecognized_options.append(opt[2:])\n+        elif opt.startswith(\"-\"):\n+            unrecognized_options.append(opt[1:])\n+    if unrecognized_options:\n+        msg = \", \".join(unrecognized_options)\n+        linter.add_message(\"unrecognized-option\", line=0, args=msg)\n \n     # Set the current module to configuration as we don't know where\n     # the --load-plugins key is coming from\n",
    "variant_5": "diff --git a/pylint/config/config_initialization.py b/pylint/config/config_initialization.py\nindex 24e453a73..82a151cb4 100644\n--- a/pylint/config/config_initialization.py\n+++ b/pylint/config/config_initialization.py\n@@ -82,7 +82,27 @@ def _config_initialization(\n     if unrecognized_options:\n         msg = \", \".join(unrecognized_options)\n         linter.add_message(\"unrecognized-option\", line=0, args=msg)\n-        raise _UnrecognizedOptionError(options=unrecognized_options)\n+\n+    # Check if there are any options that we do not recognize\n+    unrecognized_options: list[str] = []\n+    for opt in parsed_args_list:\n+        if opt.startswith(\"--\"):\n+            unrecognized_options.append(opt[2:])\n+        elif opt.startswith(\"-\"):\n+            unrecognized_options.append(opt[1:])\n+    if unrecognized_options:\n+        msg = \", \".join(unrecognized_options)\n+        linter.add_message(\"unrecognized-option\", line=0, args=msg)\n+\n+    # Set the current module to configuration as we don't know where\n+    # the --load-plugins key is coming from\n+    linter.set_current_module(\"Command line or configuration file\")\n+\n+    # We have loaded configuration from config file and command line. Now, we can\n+    # load plugin specific configuration.\n+    linter.load_plugin_configuration()\n+\n+    # parsed_args_list should now only be a list of files/directories to lint.\n \n     # Set the current module to configuration as we don't know where\n     # the --load-plugins key is coming from\n",
    "variant_6": "diff --git a/pylint/config/config_initialization.py b/pylint/config/config_initialization.py\nindex 24e453a73..82a151cb4 100644\n--- a/pylint/config/config_initialization.py\n+++ b/pylint/config/config_initialization.py\n@@ -82,7 +82,27 @@ def _config_initialization(\n     if unrecognized_options:\n         msg = \", \".join(unrecognized_options)\n         linter.add_message(\"unrecognized-option\", line=0, args=msg)\n-        raise _UnrecognizedOptionError(options=unrecognized_options)\n+\n+    # Check if there are any options that we do not recognize\n+    unrecognized_options: list[str] = []\n+    for opt in parsed_args_list:\n+        if opt.startswith(\"--\"):\n+            unrecognized_options.append(opt[2:])\n+        elif opt.startswith(\"-\"):\n+            unrecognized_options.append(opt[1:])\n+    if unrecognized_options:\n+        msg = \", \".join(unrecognized_options)\n+        linter.add_message(\"unrecognized-option\", line=0, args=msg)\n+\n+    # Set the current module to configuration as we don't know where\n+    # the --load-plugins key is coming from\n+    linter.set_current_module(\"Command line or configuration file\")\n+\n+    # We have loaded configuration from config file and command line. Now, we can\n+    # load plugin specific configuration.\n+    linter.load_plugin_configuration()\n+\n+    # parsed_args_list should now only be a list of files/directories to lint.\n \n     # Set the current module to configuration as we don't know where\n     # the --load-plugins key is coming from\n",
    "variant_7": "diff --git a/pylint/config/config_initialization.py b/pylint/config/config_initialization.py\nindex 24e453a73..82a151cb4 100644\n--- a/pylint/config/config_initialization.py\n+++ b/pylint/config/config_initialization.py\n@@ -82,7 +82,27 @@ def _config_initialization(\n     if unrecognized_options:\n         msg = \", \".join(unrecognized_options)\n         linter.add_message(\"unrecognized-option\", line=0, args=msg)\n-        raise _UnrecognizedOptionError(options=unrecognized_options)\n+\n+    # Check if there are any options that we do not recognize\n+    unrecognized_options: list[str] = []\n+    for opt in parsed_args_list:\n+        if opt.startswith(\"--\"):\n+            unrecognized_options.append(opt[2:])\n+        elif opt.startswith(\"-\"):\n+            unrecognized_options.append(opt[1:])\n+    if unrecognized_options:\n+        msg = \", \".join(unrecognized_options)\n+        linter.add_message(\"unrecognized-option\", line=0, args=msg)\n+\n+    # Set the current module to configuration as we don't know where\n+    # the --load-plugins key is coming from\n+    linter.set_current_module(\"Command line or configuration file\")\n+\n+    # We have loaded configuration from config file and command line. Now, we can\n+    # load plugin specific configuration.\n+    linter.load_plugin_configuration()\n+\n+    # parsed_args_list should now only be a list of files/directories to lint.\n \n     # Set the current module to configuration as we don't know where\n     # the --load-plugins key is coming from\n",
    "variant_8": "diff --git a/pylint/config/config_initialization.py b/pylint/config/config_initialization.py\nindex 24e453a73..82a151cb4 100644\n--- a/pylint/config/config_initialization.py\n+++ b/pylint/config/config_initialization.py\n@@ -82,7 +82,27 @@ def _config_initialization(\n     if unrecognized_options:\n         msg = \", \".join(unrecognized_options)\n         linter.add_message(\"unrecognized-option\", line=0, args=msg)\n-        raise _UnrecognizedOptionError(options=unrecognized_options)\n+\n+    # Check if there are any options that we do not recognize\n+    unrecognized_options: list[str] = []\n+    for opt in parsed_args_list:\n+        if opt.startswith(\"--\"):\n+            unrecognized_options.append(opt[2:])\n+        elif opt.startswith(\"-\"):\n+            unrecognized_options.append(opt[1:])\n+    if unrecognized_options:\n+        msg = \", \".join(unrecognized_options)\n+        linter.add_message(\"unrecognized-option\", line=0, args=msg)\n+\n+    # Set the current module to configuration as we don't know where\n+    # the --load-plugins key is coming from\n+    linter.set_current_module(\"Command line or configuration file\")\n+\n+    # We have loaded configuration from config file and command line. Now, we can\n+    # load plugin specific configuration.\n+    linter.load_plugin_configuration()\n+\n+    # parsed_args_list should now only be a list of files/directories to lint.\n \n     # Set the current module to configuration as we don't know where\n     # the --load-plugins key is coming from\n"
  }
}