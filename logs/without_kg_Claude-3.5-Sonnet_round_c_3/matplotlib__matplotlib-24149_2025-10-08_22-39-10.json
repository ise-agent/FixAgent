{
  "zero_patches": {
    "Location 1 (/root/hy/projects_3/matplotlib/lib/matplotlib/cbook/__init__.py lines 1748-1749)": "\n    else:\n        return next((val for val in obj if safe_isfinite(val)), None)\n",
    "Location 2 (/root/hy/projects_3/matplotlib/lib/matplotlib/axes/_axes.py lines 2181-2184)": "\n            try:\n                x0 = cbook._safe_first_finite(x0)\n            except (TypeError, IndexError, KeyError, StopIteration):\n                pass\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects_3/matplotlib/lib/matplotlib/cbook/__init__.py lines 1748-1749)": [
      "\n    else:\n        return next((val for val in obj if safe_isfinite(val)), None)\n",
      "\n    else:\n        return next((val for val in obj if safe_isfinite(val)), None)\n",
      "\n    else:\n        return next((val for val in obj if safe_isfinite(val)), None)\n",
      "\n    else:\n        return next((val for val in obj if safe_isfinite(val)), None)\n",
      "\n    else:\n        return next((val for val in obj if safe_isfinite(val)), None)\n",
      "\n    else:\n        return next((val for val in obj if safe_isfinite(val)), None)\n",
      "\n    else:\n        return next((val for val in obj if safe_isfinite(val)), None)\n",
      "\n    else:\n        return next((val for val in obj if safe_isfinite(val)), None)\n"
    ],
    "Location 2 (/root/hy/projects_3/matplotlib/lib/matplotlib/axes/_axes.py lines 2181-2184)": [
      "\n        try:\n            x0 = cbook._safe_first_finite(x0)\n        except (TypeError, IndexError, KeyError, StopIteration):\n            pass\n",
      "\n            try:\n                x0 = cbook._safe_first_finite(x0)\n            except (TypeError, IndexError, KeyError, StopIteration):\n                pass\n",
      "\n            try:\n                x0 = cbook._safe_first_finite(x0)\n            except (TypeError, IndexError, KeyError, StopIteration):\n                pass\n",
      "\n            try:\n                x0 = cbook._safe_first_finite(x0)\n            except (TypeError, IndexError, KeyError, StopIteration):\n                pass\n",
      "\n            try:\n                x0 = cbook._safe_first_finite(x0)\n            except (TypeError, IndexError, KeyError, StopIteration):\n                pass\n",
      "\n            try:\n                x0 = cbook._safe_first_finite(x0)\n            except (TypeError, IndexError, KeyError, StopIteration):\n                pass\n",
      "\n            try:\n                x0 = cbook._safe_first_finite(x0)\n            except (TypeError, IndexError, KeyError, StopIteration):\n                pass\n",
      "\n            try:\n                x0 = cbook._safe_first_finite(x0)\n            except (TypeError, IndexError, KeyError, StopIteration):\n                pass\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex fdac0f3560..eb7a59ceb0 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2178,9 +2178,10 @@ class Axes(_AxesBase):\n             # We can't just cast x0 and dx to numpy arrays because that\n             # removes the units from unit packages like `pint` that\n             # wrap numpy arrays.\n+\n             try:\n                 x0 = cbook._safe_first_finite(x0)\n-            except (TypeError, IndexError, KeyError):\n+            except (TypeError, IndexError, KeyError, StopIteration):\n                 pass\n \n             try:\ndiff --git a/lib/matplotlib/cbook/__init__.py b/lib/matplotlib/cbook/__init__.py\nindex 34c6ddb861..3049fb20f4 100644\n--- a/lib/matplotlib/cbook/__init__.py\n+++ b/lib/matplotlib/cbook/__init__.py\n@@ -1745,8 +1745,9 @@ def _safe_first_finite(obj, *, skip_nonfinite=True):\n     elif isinstance(obj, collections.abc.Iterator):\n         raise RuntimeError(\"matplotlib does not \"\n                            \"support generators as input\")\n+\n     else:\n-        return next(val for val in obj if safe_isfinite(val))\n+        return next((val for val in obj if safe_isfinite(val)), None)\n \n \n def sanitize_sequence(data):\n",
    "variant_0": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex fdac0f3560..eb7a59ceb0 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2178,9 +2178,10 @@ class Axes(_AxesBase):\n             # We can't just cast x0 and dx to numpy arrays because that\n             # removes the units from unit packages like `pint` that\n             # wrap numpy arrays.\n+\n             try:\n                 x0 = cbook._safe_first_finite(x0)\n-            except (TypeError, IndexError, KeyError):\n+            except (TypeError, IndexError, KeyError, StopIteration):\n                 pass\n \n             try:\ndiff --git a/lib/matplotlib/cbook/__init__.py b/lib/matplotlib/cbook/__init__.py\nindex 34c6ddb861..3049fb20f4 100644\n--- a/lib/matplotlib/cbook/__init__.py\n+++ b/lib/matplotlib/cbook/__init__.py\n@@ -1745,8 +1745,9 @@ def _safe_first_finite(obj, *, skip_nonfinite=True):\n     elif isinstance(obj, collections.abc.Iterator):\n         raise RuntimeError(\"matplotlib does not \"\n                            \"support generators as input\")\n+\n     else:\n-        return next(val for val in obj if safe_isfinite(val))\n+        return next((val for val in obj if safe_isfinite(val)), None)\n \n \n def sanitize_sequence(data):\n",
    "variant_1": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex fdac0f3560..55e8f91c61 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2178,10 +2178,11 @@ class Axes(_AxesBase):\n             # We can't just cast x0 and dx to numpy arrays because that\n             # removes the units from unit packages like `pint` that\n             # wrap numpy arrays.\n-            try:\n-                x0 = cbook._safe_first_finite(x0)\n-            except (TypeError, IndexError, KeyError):\n-                pass\n+\n+        try:\n+            x0 = cbook._safe_first_finite(x0)\n+        except (TypeError, IndexError, KeyError, StopIteration):\n+            pass\n \n             try:\n                 x = cbook._safe_first_finite(xconv)\ndiff --git a/lib/matplotlib/cbook/__init__.py b/lib/matplotlib/cbook/__init__.py\nindex 34c6ddb861..3049fb20f4 100644\n--- a/lib/matplotlib/cbook/__init__.py\n+++ b/lib/matplotlib/cbook/__init__.py\n@@ -1745,8 +1745,9 @@ def _safe_first_finite(obj, *, skip_nonfinite=True):\n     elif isinstance(obj, collections.abc.Iterator):\n         raise RuntimeError(\"matplotlib does not \"\n                            \"support generators as input\")\n+\n     else:\n-        return next(val for val in obj if safe_isfinite(val))\n+        return next((val for val in obj if safe_isfinite(val)), None)\n \n \n def sanitize_sequence(data):\n",
    "variant_2": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex fdac0f3560..eb7a59ceb0 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2178,9 +2178,10 @@ class Axes(_AxesBase):\n             # We can't just cast x0 and dx to numpy arrays because that\n             # removes the units from unit packages like `pint` that\n             # wrap numpy arrays.\n+\n             try:\n                 x0 = cbook._safe_first_finite(x0)\n-            except (TypeError, IndexError, KeyError):\n+            except (TypeError, IndexError, KeyError, StopIteration):\n                 pass\n \n             try:\ndiff --git a/lib/matplotlib/cbook/__init__.py b/lib/matplotlib/cbook/__init__.py\nindex 34c6ddb861..3049fb20f4 100644\n--- a/lib/matplotlib/cbook/__init__.py\n+++ b/lib/matplotlib/cbook/__init__.py\n@@ -1745,8 +1745,9 @@ def _safe_first_finite(obj, *, skip_nonfinite=True):\n     elif isinstance(obj, collections.abc.Iterator):\n         raise RuntimeError(\"matplotlib does not \"\n                            \"support generators as input\")\n+\n     else:\n-        return next(val for val in obj if safe_isfinite(val))\n+        return next((val for val in obj if safe_isfinite(val)), None)\n \n \n def sanitize_sequence(data):\n",
    "variant_3": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex fdac0f3560..eb7a59ceb0 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2178,9 +2178,10 @@ class Axes(_AxesBase):\n             # We can't just cast x0 and dx to numpy arrays because that\n             # removes the units from unit packages like `pint` that\n             # wrap numpy arrays.\n+\n             try:\n                 x0 = cbook._safe_first_finite(x0)\n-            except (TypeError, IndexError, KeyError):\n+            except (TypeError, IndexError, KeyError, StopIteration):\n                 pass\n \n             try:\ndiff --git a/lib/matplotlib/cbook/__init__.py b/lib/matplotlib/cbook/__init__.py\nindex 34c6ddb861..3049fb20f4 100644\n--- a/lib/matplotlib/cbook/__init__.py\n+++ b/lib/matplotlib/cbook/__init__.py\n@@ -1745,8 +1745,9 @@ def _safe_first_finite(obj, *, skip_nonfinite=True):\n     elif isinstance(obj, collections.abc.Iterator):\n         raise RuntimeError(\"matplotlib does not \"\n                            \"support generators as input\")\n+\n     else:\n-        return next(val for val in obj if safe_isfinite(val))\n+        return next((val for val in obj if safe_isfinite(val)), None)\n \n \n def sanitize_sequence(data):\n",
    "variant_4": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex fdac0f3560..eb7a59ceb0 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2178,9 +2178,10 @@ class Axes(_AxesBase):\n             # We can't just cast x0 and dx to numpy arrays because that\n             # removes the units from unit packages like `pint` that\n             # wrap numpy arrays.\n+\n             try:\n                 x0 = cbook._safe_first_finite(x0)\n-            except (TypeError, IndexError, KeyError):\n+            except (TypeError, IndexError, KeyError, StopIteration):\n                 pass\n \n             try:\ndiff --git a/lib/matplotlib/cbook/__init__.py b/lib/matplotlib/cbook/__init__.py\nindex 34c6ddb861..3049fb20f4 100644\n--- a/lib/matplotlib/cbook/__init__.py\n+++ b/lib/matplotlib/cbook/__init__.py\n@@ -1745,8 +1745,9 @@ def _safe_first_finite(obj, *, skip_nonfinite=True):\n     elif isinstance(obj, collections.abc.Iterator):\n         raise RuntimeError(\"matplotlib does not \"\n                            \"support generators as input\")\n+\n     else:\n-        return next(val for val in obj if safe_isfinite(val))\n+        return next((val for val in obj if safe_isfinite(val)), None)\n \n \n def sanitize_sequence(data):\n",
    "variant_5": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex fdac0f3560..eb7a59ceb0 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2178,9 +2178,10 @@ class Axes(_AxesBase):\n             # We can't just cast x0 and dx to numpy arrays because that\n             # removes the units from unit packages like `pint` that\n             # wrap numpy arrays.\n+\n             try:\n                 x0 = cbook._safe_first_finite(x0)\n-            except (TypeError, IndexError, KeyError):\n+            except (TypeError, IndexError, KeyError, StopIteration):\n                 pass\n \n             try:\ndiff --git a/lib/matplotlib/cbook/__init__.py b/lib/matplotlib/cbook/__init__.py\nindex 34c6ddb861..3049fb20f4 100644\n--- a/lib/matplotlib/cbook/__init__.py\n+++ b/lib/matplotlib/cbook/__init__.py\n@@ -1745,8 +1745,9 @@ def _safe_first_finite(obj, *, skip_nonfinite=True):\n     elif isinstance(obj, collections.abc.Iterator):\n         raise RuntimeError(\"matplotlib does not \"\n                            \"support generators as input\")\n+\n     else:\n-        return next(val for val in obj if safe_isfinite(val))\n+        return next((val for val in obj if safe_isfinite(val)), None)\n \n \n def sanitize_sequence(data):\n",
    "variant_6": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex fdac0f3560..eb7a59ceb0 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2178,9 +2178,10 @@ class Axes(_AxesBase):\n             # We can't just cast x0 and dx to numpy arrays because that\n             # removes the units from unit packages like `pint` that\n             # wrap numpy arrays.\n+\n             try:\n                 x0 = cbook._safe_first_finite(x0)\n-            except (TypeError, IndexError, KeyError):\n+            except (TypeError, IndexError, KeyError, StopIteration):\n                 pass\n \n             try:\ndiff --git a/lib/matplotlib/cbook/__init__.py b/lib/matplotlib/cbook/__init__.py\nindex 34c6ddb861..3049fb20f4 100644\n--- a/lib/matplotlib/cbook/__init__.py\n+++ b/lib/matplotlib/cbook/__init__.py\n@@ -1745,8 +1745,9 @@ def _safe_first_finite(obj, *, skip_nonfinite=True):\n     elif isinstance(obj, collections.abc.Iterator):\n         raise RuntimeError(\"matplotlib does not \"\n                            \"support generators as input\")\n+\n     else:\n-        return next(val for val in obj if safe_isfinite(val))\n+        return next((val for val in obj if safe_isfinite(val)), None)\n \n \n def sanitize_sequence(data):\n",
    "variant_7": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex fdac0f3560..eb7a59ceb0 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2178,9 +2178,10 @@ class Axes(_AxesBase):\n             # We can't just cast x0 and dx to numpy arrays because that\n             # removes the units from unit packages like `pint` that\n             # wrap numpy arrays.\n+\n             try:\n                 x0 = cbook._safe_first_finite(x0)\n-            except (TypeError, IndexError, KeyError):\n+            except (TypeError, IndexError, KeyError, StopIteration):\n                 pass\n \n             try:\ndiff --git a/lib/matplotlib/cbook/__init__.py b/lib/matplotlib/cbook/__init__.py\nindex 34c6ddb861..3049fb20f4 100644\n--- a/lib/matplotlib/cbook/__init__.py\n+++ b/lib/matplotlib/cbook/__init__.py\n@@ -1745,8 +1745,9 @@ def _safe_first_finite(obj, *, skip_nonfinite=True):\n     elif isinstance(obj, collections.abc.Iterator):\n         raise RuntimeError(\"matplotlib does not \"\n                            \"support generators as input\")\n+\n     else:\n-        return next(val for val in obj if safe_isfinite(val))\n+        return next((val for val in obj if safe_isfinite(val)), None)\n \n \n def sanitize_sequence(data):\n",
    "variant_8": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex fdac0f3560..eb7a59ceb0 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2178,9 +2178,10 @@ class Axes(_AxesBase):\n             # We can't just cast x0 and dx to numpy arrays because that\n             # removes the units from unit packages like `pint` that\n             # wrap numpy arrays.\n+\n             try:\n                 x0 = cbook._safe_first_finite(x0)\n-            except (TypeError, IndexError, KeyError):\n+            except (TypeError, IndexError, KeyError, StopIteration):\n                 pass\n \n             try:\ndiff --git a/lib/matplotlib/cbook/__init__.py b/lib/matplotlib/cbook/__init__.py\nindex 34c6ddb861..3049fb20f4 100644\n--- a/lib/matplotlib/cbook/__init__.py\n+++ b/lib/matplotlib/cbook/__init__.py\n@@ -1745,8 +1745,9 @@ def _safe_first_finite(obj, *, skip_nonfinite=True):\n     elif isinstance(obj, collections.abc.Iterator):\n         raise RuntimeError(\"matplotlib does not \"\n                            \"support generators as input\")\n+\n     else:\n-        return next(val for val in obj if safe_isfinite(val))\n+        return next((val for val in obj if safe_isfinite(val)), None)\n \n \n def sanitize_sequence(data):\n"
  }
}