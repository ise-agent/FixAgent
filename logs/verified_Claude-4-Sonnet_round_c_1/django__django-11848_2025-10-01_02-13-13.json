{
  "zero_patches": {
    "Location 1 (/root/hy/projects/django/django/utils/http.py lines 178-182)": "\nif year < 100:\n    current_year = datetime.datetime.now().year\n    # First assume 21st century\n    full_year = year + 2000\n    # If more than 50 years in the future, use 20th century instead\n    if full_year - current_year > 50:\n        year = year + 1900\n    else:\n        year = full_year\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects/django/django/utils/http.py lines 178-182)": [
      "\n        if year < 100:\n            current_year = datetime.datetime.now().year\n            # First assume 21st century\n            full_year = year + 2000\n            # If more than 50 years in the future, use 20th century instead\n            if full_year - current_year > 50:\n                year = year + 1900\n            else:\n                year = full_year\n",
      "\n        if year < 100:\n            current_year = datetime.datetime.now().year\n            # First assume 21st century\n            full_year = year + 2000\n            # If more than 50 years in the future, use 20th century instead\n            if full_year - current_year > 50:\n                year = year + 1900\n            else:\n                year = full_year\n",
      "\nif year < 100:\n    current_year = datetime.datetime.now().year\n    # First assume 21st century\n    full_year = year + 2000\n    # If more than 50 years in the future, use 20th century instead\n    if full_year - current_year > 50:\n        year = year + 1900\n    else:\n        year = full_year\n",
      "\nif year < 100:\n    current_year = datetime.datetime.now().year\n    # First assume 21st century\n    full_year = year + 2000\n    # If more than 50 years in the future, use 20th century instead\n    if full_year - current_year > 50:\n        year = year + 1900\n    else:\n        year = full_year\n",
      "\n        if year < 100:\n            current_year = datetime.datetime.now().year\n            # First assume 21st century\n            full_year = year + 2000\n            # If more than 50 years in the future, use 20th century instead\n            if full_year - current_year > 50:\n                year = year + 1900\n            else:\n                year = full_year\n",
      "\nif year < 100:\n    current_year = datetime.datetime.now().year\n    # First assume 21st century\n    full_year = year + 2000\n    # If more than 50 years in the future, use 20th century instead\n    if full_year - current_year > 50:\n        year = year + 1900\n    else:\n        year = full_year\n",
      "\nif year < 100:\n    current_year = datetime.datetime.now().year\n    # First assume 21st century\n    full_year = year + 2000\n    # If more than 50 years in the future, use 20th century instead\n    if full_year - current_year > 50:\n        year = year + 1900\n    else:\n        year = full_year\n",
      "\nif year < 100:\n    current_year = datetime.datetime.now().year\n    # First assume 21st century\n    full_year = year + 2000\n    # If more than 50 years in the future, use 20th century instead\n    if full_year - current_year > 50:\n        year = year + 1900\n    else:\n        year = full_year\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/django/utils/http.py b/django/utils/http.py\nindex 572cfb4347..68b408fb07 100644\n--- a/django/utils/http.py\n+++ b/django/utils/http.py\n@@ -175,11 +175,16 @@ def parse_http_date(date):\n         raise ValueError(\"%r is not in a valid HTTP date format\" % date)\n     try:\n         year = int(m.group('year'))\n+\n         if year < 100:\n-            if year < 70:\n-                year += 2000\n+            current_year = datetime.datetime.now().year\n+            # First assume 21st century\n+            full_year = year + 2000\n+            # If more than 50 years in the future, use 20th century instead\n+            if full_year - current_year > 50:\n+                year = year + 1900\n             else:\n-                year += 1900\n+                year = full_year\n         month = MONTHS.index(m.group('mon').lower()) + 1\n         day = int(m.group('day'))\n         hour = int(m.group('hour'))\n",
    "variant_0": "diff --git a/django/utils/http.py b/django/utils/http.py\nindex 572cfb4347..f0af3ac6a6 100644\n--- a/django/utils/http.py\n+++ b/django/utils/http.py\n@@ -175,11 +175,16 @@ def parse_http_date(date):\n         raise ValueError(\"%r is not in a valid HTTP date format\" % date)\n     try:\n         year = int(m.group('year'))\n-        if year < 100:\n-            if year < 70:\n-                year += 2000\n-            else:\n-                year += 1900\n+\n+if year < 100:\n+    current_year = datetime.datetime.now().year\n+    # First assume 21st century\n+    full_year = year + 2000\n+    # If more than 50 years in the future, use 20th century instead\n+    if full_year - current_year > 50:\n+        year = year + 1900\n+    else:\n+        year = full_year\n         month = MONTHS.index(m.group('mon').lower()) + 1\n         day = int(m.group('day'))\n         hour = int(m.group('hour'))\n",
    "variant_1": "diff --git a/django/utils/http.py b/django/utils/http.py\nindex 572cfb4347..68b408fb07 100644\n--- a/django/utils/http.py\n+++ b/django/utils/http.py\n@@ -175,11 +175,16 @@ def parse_http_date(date):\n         raise ValueError(\"%r is not in a valid HTTP date format\" % date)\n     try:\n         year = int(m.group('year'))\n+\n         if year < 100:\n-            if year < 70:\n-                year += 2000\n+            current_year = datetime.datetime.now().year\n+            # First assume 21st century\n+            full_year = year + 2000\n+            # If more than 50 years in the future, use 20th century instead\n+            if full_year - current_year > 50:\n+                year = year + 1900\n             else:\n-                year += 1900\n+                year = full_year\n         month = MONTHS.index(m.group('mon').lower()) + 1\n         day = int(m.group('day'))\n         hour = int(m.group('hour'))\n",
    "variant_2": "diff --git a/django/utils/http.py b/django/utils/http.py\nindex 572cfb4347..68b408fb07 100644\n--- a/django/utils/http.py\n+++ b/django/utils/http.py\n@@ -175,11 +175,16 @@ def parse_http_date(date):\n         raise ValueError(\"%r is not in a valid HTTP date format\" % date)\n     try:\n         year = int(m.group('year'))\n+\n         if year < 100:\n-            if year < 70:\n-                year += 2000\n+            current_year = datetime.datetime.now().year\n+            # First assume 21st century\n+            full_year = year + 2000\n+            # If more than 50 years in the future, use 20th century instead\n+            if full_year - current_year > 50:\n+                year = year + 1900\n             else:\n-                year += 1900\n+                year = full_year\n         month = MONTHS.index(m.group('mon').lower()) + 1\n         day = int(m.group('day'))\n         hour = int(m.group('hour'))\n",
    "variant_3": "diff --git a/django/utils/http.py b/django/utils/http.py\nindex 572cfb4347..f0af3ac6a6 100644\n--- a/django/utils/http.py\n+++ b/django/utils/http.py\n@@ -175,11 +175,16 @@ def parse_http_date(date):\n         raise ValueError(\"%r is not in a valid HTTP date format\" % date)\n     try:\n         year = int(m.group('year'))\n-        if year < 100:\n-            if year < 70:\n-                year += 2000\n-            else:\n-                year += 1900\n+\n+if year < 100:\n+    current_year = datetime.datetime.now().year\n+    # First assume 21st century\n+    full_year = year + 2000\n+    # If more than 50 years in the future, use 20th century instead\n+    if full_year - current_year > 50:\n+        year = year + 1900\n+    else:\n+        year = full_year\n         month = MONTHS.index(m.group('mon').lower()) + 1\n         day = int(m.group('day'))\n         hour = int(m.group('hour'))\n",
    "variant_4": "diff --git a/django/utils/http.py b/django/utils/http.py\nindex 572cfb4347..f0af3ac6a6 100644\n--- a/django/utils/http.py\n+++ b/django/utils/http.py\n@@ -175,11 +175,16 @@ def parse_http_date(date):\n         raise ValueError(\"%r is not in a valid HTTP date format\" % date)\n     try:\n         year = int(m.group('year'))\n-        if year < 100:\n-            if year < 70:\n-                year += 2000\n-            else:\n-                year += 1900\n+\n+if year < 100:\n+    current_year = datetime.datetime.now().year\n+    # First assume 21st century\n+    full_year = year + 2000\n+    # If more than 50 years in the future, use 20th century instead\n+    if full_year - current_year > 50:\n+        year = year + 1900\n+    else:\n+        year = full_year\n         month = MONTHS.index(m.group('mon').lower()) + 1\n         day = int(m.group('day'))\n         hour = int(m.group('hour'))\n",
    "variant_5": "diff --git a/django/utils/http.py b/django/utils/http.py\nindex 572cfb4347..68b408fb07 100644\n--- a/django/utils/http.py\n+++ b/django/utils/http.py\n@@ -175,11 +175,16 @@ def parse_http_date(date):\n         raise ValueError(\"%r is not in a valid HTTP date format\" % date)\n     try:\n         year = int(m.group('year'))\n+\n         if year < 100:\n-            if year < 70:\n-                year += 2000\n+            current_year = datetime.datetime.now().year\n+            # First assume 21st century\n+            full_year = year + 2000\n+            # If more than 50 years in the future, use 20th century instead\n+            if full_year - current_year > 50:\n+                year = year + 1900\n             else:\n-                year += 1900\n+                year = full_year\n         month = MONTHS.index(m.group('mon').lower()) + 1\n         day = int(m.group('day'))\n         hour = int(m.group('hour'))\n",
    "variant_6": "diff --git a/django/utils/http.py b/django/utils/http.py\nindex 572cfb4347..f0af3ac6a6 100644\n--- a/django/utils/http.py\n+++ b/django/utils/http.py\n@@ -175,11 +175,16 @@ def parse_http_date(date):\n         raise ValueError(\"%r is not in a valid HTTP date format\" % date)\n     try:\n         year = int(m.group('year'))\n-        if year < 100:\n-            if year < 70:\n-                year += 2000\n-            else:\n-                year += 1900\n+\n+if year < 100:\n+    current_year = datetime.datetime.now().year\n+    # First assume 21st century\n+    full_year = year + 2000\n+    # If more than 50 years in the future, use 20th century instead\n+    if full_year - current_year > 50:\n+        year = year + 1900\n+    else:\n+        year = full_year\n         month = MONTHS.index(m.group('mon').lower()) + 1\n         day = int(m.group('day'))\n         hour = int(m.group('hour'))\n",
    "variant_7": "diff --git a/django/utils/http.py b/django/utils/http.py\nindex 572cfb4347..f0af3ac6a6 100644\n--- a/django/utils/http.py\n+++ b/django/utils/http.py\n@@ -175,11 +175,16 @@ def parse_http_date(date):\n         raise ValueError(\"%r is not in a valid HTTP date format\" % date)\n     try:\n         year = int(m.group('year'))\n-        if year < 100:\n-            if year < 70:\n-                year += 2000\n-            else:\n-                year += 1900\n+\n+if year < 100:\n+    current_year = datetime.datetime.now().year\n+    # First assume 21st century\n+    full_year = year + 2000\n+    # If more than 50 years in the future, use 20th century instead\n+    if full_year - current_year > 50:\n+        year = year + 1900\n+    else:\n+        year = full_year\n         month = MONTHS.index(m.group('mon').lower()) + 1\n         day = int(m.group('day'))\n         hour = int(m.group('hour'))\n",
    "variant_8": "diff --git a/django/utils/http.py b/django/utils/http.py\nindex 572cfb4347..f0af3ac6a6 100644\n--- a/django/utils/http.py\n+++ b/django/utils/http.py\n@@ -175,11 +175,16 @@ def parse_http_date(date):\n         raise ValueError(\"%r is not in a valid HTTP date format\" % date)\n     try:\n         year = int(m.group('year'))\n-        if year < 100:\n-            if year < 70:\n-                year += 2000\n-            else:\n-                year += 1900\n+\n+if year < 100:\n+    current_year = datetime.datetime.now().year\n+    # First assume 21st century\n+    full_year = year + 2000\n+    # If more than 50 years in the future, use 20th century instead\n+    if full_year - current_year > 50:\n+        year = year + 1900\n+    else:\n+        year = full_year\n         month = MONTHS.index(m.group('mon').lower()) + 1\n         day = int(m.group('day'))\n         hour = int(m.group('hour'))\n"
  }
}