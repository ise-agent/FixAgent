{
  "zero_patches": {
    "Location 1 (/root/hy/projects/astropy/astropy/io/fits/card.py lines 861-865)": "\n                if keyword in self._commentary_keywords:\n                    values.append(vc)\n                    continue\n\n                # Should match a string followed by a comment; if not it\n                # might be an invalid Card, so we just take it verbatim\n                m = self._strg_comment_RE.match(vc)\n                if not m:\n                    return kw, vc\n\n                value = m.group(\"strg\") or \"\"\n                value = value.rstrip()\n                if value and value[-1] == \"&\":\n                    value = value[:-1]\n                values.append(value)\n                comment = m.group(\"comm\")\n                if comment:\n                    comments.append(comment.rstrip())\n\n            if keyword in self._commentary_keywords:\n                valuecomment = \"\".join(values)\n            else:\n                # CONTINUE card\n                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n            return keyword, valuecomment\n",
    "Location 2 (/root/hy/projects/astropy/astropy/io/fits/card.py lines 870-875)": "\n            if keyword in self._commentary_keywords:\n                valuecomment = \"\".join(values)\n            else:\n                # CONTINUE card\n                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n            return keyword, valuecomment\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects/astropy/astropy/io/fits/card.py lines 861-865)": [
      "\n                if keyword in self._commentary_keywords:\n                    values.append(vc)\n                    continue\n\n                # Should match a string followed by a comment; if not it\n                # might be an invalid Card, so we just take it verbatim\n                m = self._strg_comment_RE.match(vc)\n                if not m:\n                    return kw, vc\n\n                value = m.group(\"strg\") or \"\"\n                value = value.rstrip()\n                if value and value[-1] == \"&\":\n                    value = value[:-1]\n                values.append(value)\n                comment = m.group(\"comm\")\n                if comment:\n                    comments.append(comment.rstrip())\n\n            if keyword in self._commentary_keywords:\n                valuecomment = \"\".join(values)\n            else:\n                # CONTINUE card\n                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n            return keyword, valuecomment\n",
      "\n                if keyword in self._commentary_keywords:\n                    values.append(vc)\n                    continue\n\n                # Should match a string followed by a comment; if not it\n                # might be an invalid Card, so we just take it verbatim\n                m = self._strg_comment_RE.match(vc)\n                if not m:\n                    return kw, vc\n\n                value = m.group(\"strg\") or \"\"\n                value = value.rstrip()\n                if value and value[-1] == \"&\":\n                    value = value[:-1]\n                values.append(value)\n                comment = m.group(\"comm\")\n                if comment:\n                    comments.append(comment.rstrip())\n\n            if keyword in self._commentary_keywords:\n                valuecomment = \"\".join(values)\n            else:\n                # CONTINUE card\n                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n            return keyword, valuecomment\n",
      "\n                if keyword in self._commentary_keywords:\n                    values.append(vc)\n                    continue\n\n                # Should match a string followed by a comment; if not it\n                # might be an invalid Card, so we just take it verbatim\n                m = self._strg_comment_RE.match(vc)\n                if not m:\n                    return kw, vc\n\n                value = m.group(\"strg\") or \"\"\n                value = value.rstrip()\n                if value and value[-1] == \"&\":\n                    value = value[:-1]\n                values.append(value)\n                comment = m.group(\"comm\")\n                if comment:\n                    comments.append(comment.rstrip())\n\n            if keyword in self._commentary_keywords:\n                valuecomment = \"\".join(values)\n            else:\n                # CONTINUE card\n                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n            return keyword, valuecomment\n",
      "\n                if keyword in self._commentary_keywords:\n                    values.append(vc)\n                    continue\n\n                # Should match a string followed by a comment; if not it\n                # might be an invalid Card, so we just take it verbatim\n                m = self._strg_comment_RE.match(vc)\n                if not m:\n                    return kw, vc\n\n                value = m.group(\"strg\") or \"\"\n                value = value.rstrip()\n                if value and value[-1] == \"&\":\n                    value = value[:-1]\n                values.append(value)\n                comment = m.group(\"comm\")\n                if comment:\n                    comments.append(comment.rstrip())\n\n            if keyword in self._commentary_keywords:\n                valuecomment = \"\".join(values)\n            else:\n                # CONTINUE card\n                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n            return keyword, valuecomment\n",
      "\n                if keyword in self._commentary_keywords:\n                    values.append(vc)\n                    continue\n\n                # Should match a string followed by a comment; if not it\n                # might be an invalid Card, so we just take it verbatim\n                m = self._strg_comment_RE.match(vc)\n                if not m:\n                    return kw, vc\n\n                value = m.group(\"strg\") or \"\"\n                value = value.rstrip()\n                if value and value[-1] == \"&\":\n                    value = value[:-1]\n                values.append(value)\n                comment = m.group(\"comm\")\n                if comment:\n                    comments.append(comment.rstrip())\n\n            if keyword in self._commentary_keywords:\n                valuecomment = \"\".join(values)\n            else:\n                # CONTINUE card\n                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n            return keyword, valuecomment\n",
      "\n                if keyword in self._commentary_keywords:\n                    values.append(vc)\n                    continue\n\n                # Should match a string followed by a comment; if not it\n                # might be an invalid Card, so we just take it verbatim\n                m = self._strg_comment_RE.match(vc)\n                if not m:\n                    return kw, vc\n\n                value = m.group(\"strg\") or \"\"\n                value = value.rstrip()\n                if value and value[-1] == \"&\":\n                    value = value[:-1]\n                values.append(value)\n                comment = m.group(\"comm\")\n                if comment:\n                    comments.append(comment.rstrip())\n\n            if keyword in self._commentary_keywords:\n                valuecomment = \"\".join(values)\n            else:\n                # CONTINUE card\n                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n            return keyword, valuecomment\n",
      "\n                if keyword in self._commentary_keywords:\n                    values.append(vc)\n                    continue\n\n                # Should match a string followed by a comment; if not it\n                # might be an invalid Card, so we just take it verbatim\n                m = self._strg_comment_RE.match(vc)\n                if not m:\n                    return kw, vc\n\n                value = m.group(\"strg\") or \"\"\n                value = value.rstrip()\n                if value and value[-1] == \"&\":\n                    value = value[:-1]\n                values.append(value)\n                comment = m.group(\"comm\")\n                if comment:\n                    comments.append(comment.rstrip())\n\n            if keyword in self._commentary_keywords:\n                valuecomment = \"\".join(values)\n            else:\n                # CONTINUE card\n                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n            return keyword, valuecomment\n",
      "\n                # Should match a string followed by a comment; if not it\n                # might be an invalid Card, so we just take it verbatim\n                m = self._strg_comment_RE.match(vc)\n                if not m:\n                    return kw, vc\n\n                value = m.group(\"strg\") or \"\"\n                value = value.rstrip()\n                if value and value[-1] == \"&\":\n                    value = value[:-1]\n                values.append(value)\n                comment = m.group(\"comm\")\n                if comment:\n                    comments.append(comment.rstrip())\n\n            if keyword in self._commentary_keywords:\n                valuecomment = \"\".join(values)\n            else:\n                # CONTINUE card\n                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n            return keyword, valuecomment\n"
    ],
    "Location 2 (/root/hy/projects/astropy/astropy/io/fits/card.py lines 870-875)": [
      "\n            if keyword in self._commentary_keywords:\n                valuecomment = \"\".join(values)\n            else:\n                # CONTINUE card\n                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n            return keyword, valuecomment\n",
      "\n            if keyword in self._commentary_keywords:\n                valuecomment = \"\".join(values)\n            else:\n                # CONTINUE card\n                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n            return keyword, valuecomment\n",
      "\n            if keyword in self._commentary_keywords:\n                valuecomment = \"\".join(values)\n            else:\n                # CONTINUE card\n                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n            return keyword, valuecomment\n",
      "\n            if keyword in self._commentary_keywords:\n                valuecomment = \"\".join(values)\n            else:\n                # CONTINUE card\n                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n            return keyword, valuecomment\n",
      "\n            if keyword in self._commentary_keywords:\n                valuecomment = \"\".join(values)\n            else:\n                # CONTINUE card\n                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n            return keyword, valuecomment\n",
      "\n            if keyword in self._commentary_keywords:\n                valuecomment = \"\".join(values)\n            else:\n                # CONTINUE card\n                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n            return keyword, valuecomment\n",
      "\n            if keyword in self._commentary_keywords:\n                valuecomment = \"\".join(values)\n            else:\n                # CONTINUE card\n                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n            return keyword, valuecomment\n",
      "\n            if keyword in self._commentary_keywords:\n                valuecomment = \"\".join(values)\n            else:\n                # CONTINUE card\n                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n            return keyword, valuecomment\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 1b3285ddce..0299a8c386 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -858,8 +858,9 @@ class Card(_Verify):\n                 if not m:\n                     return kw, vc\n \n+\n                 value = m.group(\"strg\") or \"\"\n-                value = value.rstrip().replace(\"''\", \"'\")\n+                value = value.rstrip()\n                 if value and value[-1] == \"&\":\n                     value = value[:-1]\n                 values.append(value)\n@@ -867,11 +868,12 @@ class Card(_Verify):\n                 if comment:\n                     comments.append(comment.rstrip())\n \n+\n             if keyword in self._commentary_keywords:\n                 valuecomment = \"\".join(values)\n             else:\n                 # CONTINUE card\n-                valuecomment = f\"'{''.join(values)}' / {' '.join(comments)}\"\n+                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n             return keyword, valuecomment\n \n         if self.keyword in self._special_keywords:\n",
    "variant_0": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 1b3285ddce..736078d159 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -848,6 +848,17 @@ class Card(_Verify):\n                 if keyword is None:\n                     keyword = kw\n \n+                if keyword in self._commentary_keywords:\n+                    values.append(vc)\n+                    continue\n+\n+                # Should match a string followed by a comment; if not it\n+                # might be an invalid Card, so we just take it verbatim\n+                m = self._strg_comment_RE.match(vc)\n+                if not m:\n+                    return kw, vc\n+\n+\n                 if keyword in self._commentary_keywords:\n                     values.append(vc)\n                     continue\n@@ -859,7 +870,7 @@ class Card(_Verify):\n                     return kw, vc\n \n                 value = m.group(\"strg\") or \"\"\n-                value = value.rstrip().replace(\"''\", \"'\")\n+                value = value.rstrip()\n                 if value and value[-1] == \"&\":\n                     value = value[:-1]\n                 values.append(value)\n@@ -871,7 +882,18 @@ class Card(_Verify):\n                 valuecomment = \"\".join(values)\n             else:\n                 # CONTINUE card\n-                valuecomment = f\"'{''.join(values)}' / {' '.join(comments)}\"\n+                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n+            return keyword, valuecomment\n+                comment = m.group(\"comm\")\n+                if comment:\n+                    comments.append(comment.rstrip())\n+\n+\n+            if keyword in self._commentary_keywords:\n+                valuecomment = \"\".join(values)\n+            else:\n+                # CONTINUE card\n+                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n             return keyword, valuecomment\n \n         if self.keyword in self._special_keywords:\n",
    "variant_1": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 1b3285ddce..736078d159 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -848,6 +848,17 @@ class Card(_Verify):\n                 if keyword is None:\n                     keyword = kw\n \n+                if keyword in self._commentary_keywords:\n+                    values.append(vc)\n+                    continue\n+\n+                # Should match a string followed by a comment; if not it\n+                # might be an invalid Card, so we just take it verbatim\n+                m = self._strg_comment_RE.match(vc)\n+                if not m:\n+                    return kw, vc\n+\n+\n                 if keyword in self._commentary_keywords:\n                     values.append(vc)\n                     continue\n@@ -859,7 +870,7 @@ class Card(_Verify):\n                     return kw, vc\n \n                 value = m.group(\"strg\") or \"\"\n-                value = value.rstrip().replace(\"''\", \"'\")\n+                value = value.rstrip()\n                 if value and value[-1] == \"&\":\n                     value = value[:-1]\n                 values.append(value)\n@@ -871,7 +882,18 @@ class Card(_Verify):\n                 valuecomment = \"\".join(values)\n             else:\n                 # CONTINUE card\n-                valuecomment = f\"'{''.join(values)}' / {' '.join(comments)}\"\n+                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n+            return keyword, valuecomment\n+                comment = m.group(\"comm\")\n+                if comment:\n+                    comments.append(comment.rstrip())\n+\n+\n+            if keyword in self._commentary_keywords:\n+                valuecomment = \"\".join(values)\n+            else:\n+                # CONTINUE card\n+                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n             return keyword, valuecomment\n \n         if self.keyword in self._special_keywords:\n",
    "variant_2": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 1b3285ddce..736078d159 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -848,6 +848,17 @@ class Card(_Verify):\n                 if keyword is None:\n                     keyword = kw\n \n+                if keyword in self._commentary_keywords:\n+                    values.append(vc)\n+                    continue\n+\n+                # Should match a string followed by a comment; if not it\n+                # might be an invalid Card, so we just take it verbatim\n+                m = self._strg_comment_RE.match(vc)\n+                if not m:\n+                    return kw, vc\n+\n+\n                 if keyword in self._commentary_keywords:\n                     values.append(vc)\n                     continue\n@@ -859,7 +870,7 @@ class Card(_Verify):\n                     return kw, vc\n \n                 value = m.group(\"strg\") or \"\"\n-                value = value.rstrip().replace(\"''\", \"'\")\n+                value = value.rstrip()\n                 if value and value[-1] == \"&\":\n                     value = value[:-1]\n                 values.append(value)\n@@ -871,7 +882,18 @@ class Card(_Verify):\n                 valuecomment = \"\".join(values)\n             else:\n                 # CONTINUE card\n-                valuecomment = f\"'{''.join(values)}' / {' '.join(comments)}\"\n+                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n+            return keyword, valuecomment\n+                comment = m.group(\"comm\")\n+                if comment:\n+                    comments.append(comment.rstrip())\n+\n+\n+            if keyword in self._commentary_keywords:\n+                valuecomment = \"\".join(values)\n+            else:\n+                # CONTINUE card\n+                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n             return keyword, valuecomment\n \n         if self.keyword in self._special_keywords:\n",
    "variant_3": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 1b3285ddce..736078d159 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -848,6 +848,17 @@ class Card(_Verify):\n                 if keyword is None:\n                     keyword = kw\n \n+                if keyword in self._commentary_keywords:\n+                    values.append(vc)\n+                    continue\n+\n+                # Should match a string followed by a comment; if not it\n+                # might be an invalid Card, so we just take it verbatim\n+                m = self._strg_comment_RE.match(vc)\n+                if not m:\n+                    return kw, vc\n+\n+\n                 if keyword in self._commentary_keywords:\n                     values.append(vc)\n                     continue\n@@ -859,7 +870,7 @@ class Card(_Verify):\n                     return kw, vc\n \n                 value = m.group(\"strg\") or \"\"\n-                value = value.rstrip().replace(\"''\", \"'\")\n+                value = value.rstrip()\n                 if value and value[-1] == \"&\":\n                     value = value[:-1]\n                 values.append(value)\n@@ -871,7 +882,18 @@ class Card(_Verify):\n                 valuecomment = \"\".join(values)\n             else:\n                 # CONTINUE card\n-                valuecomment = f\"'{''.join(values)}' / {' '.join(comments)}\"\n+                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n+            return keyword, valuecomment\n+                comment = m.group(\"comm\")\n+                if comment:\n+                    comments.append(comment.rstrip())\n+\n+\n+            if keyword in self._commentary_keywords:\n+                valuecomment = \"\".join(values)\n+            else:\n+                # CONTINUE card\n+                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n             return keyword, valuecomment\n \n         if self.keyword in self._special_keywords:\n",
    "variant_4": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 1b3285ddce..736078d159 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -848,6 +848,17 @@ class Card(_Verify):\n                 if keyword is None:\n                     keyword = kw\n \n+                if keyword in self._commentary_keywords:\n+                    values.append(vc)\n+                    continue\n+\n+                # Should match a string followed by a comment; if not it\n+                # might be an invalid Card, so we just take it verbatim\n+                m = self._strg_comment_RE.match(vc)\n+                if not m:\n+                    return kw, vc\n+\n+\n                 if keyword in self._commentary_keywords:\n                     values.append(vc)\n                     continue\n@@ -859,7 +870,7 @@ class Card(_Verify):\n                     return kw, vc\n \n                 value = m.group(\"strg\") or \"\"\n-                value = value.rstrip().replace(\"''\", \"'\")\n+                value = value.rstrip()\n                 if value and value[-1] == \"&\":\n                     value = value[:-1]\n                 values.append(value)\n@@ -871,7 +882,18 @@ class Card(_Verify):\n                 valuecomment = \"\".join(values)\n             else:\n                 # CONTINUE card\n-                valuecomment = f\"'{''.join(values)}' / {' '.join(comments)}\"\n+                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n+            return keyword, valuecomment\n+                comment = m.group(\"comm\")\n+                if comment:\n+                    comments.append(comment.rstrip())\n+\n+\n+            if keyword in self._commentary_keywords:\n+                valuecomment = \"\".join(values)\n+            else:\n+                # CONTINUE card\n+                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n             return keyword, valuecomment\n \n         if self.keyword in self._special_keywords:\n",
    "variant_5": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 1b3285ddce..736078d159 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -848,6 +848,17 @@ class Card(_Verify):\n                 if keyword is None:\n                     keyword = kw\n \n+                if keyword in self._commentary_keywords:\n+                    values.append(vc)\n+                    continue\n+\n+                # Should match a string followed by a comment; if not it\n+                # might be an invalid Card, so we just take it verbatim\n+                m = self._strg_comment_RE.match(vc)\n+                if not m:\n+                    return kw, vc\n+\n+\n                 if keyword in self._commentary_keywords:\n                     values.append(vc)\n                     continue\n@@ -859,7 +870,7 @@ class Card(_Verify):\n                     return kw, vc\n \n                 value = m.group(\"strg\") or \"\"\n-                value = value.rstrip().replace(\"''\", \"'\")\n+                value = value.rstrip()\n                 if value and value[-1] == \"&\":\n                     value = value[:-1]\n                 values.append(value)\n@@ -871,7 +882,18 @@ class Card(_Verify):\n                 valuecomment = \"\".join(values)\n             else:\n                 # CONTINUE card\n-                valuecomment = f\"'{''.join(values)}' / {' '.join(comments)}\"\n+                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n+            return keyword, valuecomment\n+                comment = m.group(\"comm\")\n+                if comment:\n+                    comments.append(comment.rstrip())\n+\n+\n+            if keyword in self._commentary_keywords:\n+                valuecomment = \"\".join(values)\n+            else:\n+                # CONTINUE card\n+                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n             return keyword, valuecomment\n \n         if self.keyword in self._special_keywords:\n",
    "variant_6": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 1b3285ddce..736078d159 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -848,6 +848,17 @@ class Card(_Verify):\n                 if keyword is None:\n                     keyword = kw\n \n+                if keyword in self._commentary_keywords:\n+                    values.append(vc)\n+                    continue\n+\n+                # Should match a string followed by a comment; if not it\n+                # might be an invalid Card, so we just take it verbatim\n+                m = self._strg_comment_RE.match(vc)\n+                if not m:\n+                    return kw, vc\n+\n+\n                 if keyword in self._commentary_keywords:\n                     values.append(vc)\n                     continue\n@@ -859,7 +870,7 @@ class Card(_Verify):\n                     return kw, vc\n \n                 value = m.group(\"strg\") or \"\"\n-                value = value.rstrip().replace(\"''\", \"'\")\n+                value = value.rstrip()\n                 if value and value[-1] == \"&\":\n                     value = value[:-1]\n                 values.append(value)\n@@ -871,7 +882,18 @@ class Card(_Verify):\n                 valuecomment = \"\".join(values)\n             else:\n                 # CONTINUE card\n-                valuecomment = f\"'{''.join(values)}' / {' '.join(comments)}\"\n+                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n+            return keyword, valuecomment\n+                comment = m.group(\"comm\")\n+                if comment:\n+                    comments.append(comment.rstrip())\n+\n+\n+            if keyword in self._commentary_keywords:\n+                valuecomment = \"\".join(values)\n+            else:\n+                # CONTINUE card\n+                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n             return keyword, valuecomment\n \n         if self.keyword in self._special_keywords:\n",
    "variant_7": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 1b3285ddce..736078d159 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -848,6 +848,17 @@ class Card(_Verify):\n                 if keyword is None:\n                     keyword = kw\n \n+                if keyword in self._commentary_keywords:\n+                    values.append(vc)\n+                    continue\n+\n+                # Should match a string followed by a comment; if not it\n+                # might be an invalid Card, so we just take it verbatim\n+                m = self._strg_comment_RE.match(vc)\n+                if not m:\n+                    return kw, vc\n+\n+\n                 if keyword in self._commentary_keywords:\n                     values.append(vc)\n                     continue\n@@ -859,7 +870,7 @@ class Card(_Verify):\n                     return kw, vc\n \n                 value = m.group(\"strg\") or \"\"\n-                value = value.rstrip().replace(\"''\", \"'\")\n+                value = value.rstrip()\n                 if value and value[-1] == \"&\":\n                     value = value[:-1]\n                 values.append(value)\n@@ -871,7 +882,18 @@ class Card(_Verify):\n                 valuecomment = \"\".join(values)\n             else:\n                 # CONTINUE card\n-                valuecomment = f\"'{''.join(values)}' / {' '.join(comments)}\"\n+                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n+            return keyword, valuecomment\n+                comment = m.group(\"comm\")\n+                if comment:\n+                    comments.append(comment.rstrip())\n+\n+\n+            if keyword in self._commentary_keywords:\n+                valuecomment = \"\".join(values)\n+            else:\n+                # CONTINUE card\n+                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n             return keyword, valuecomment\n \n         if self.keyword in self._special_keywords:\n",
    "variant_8": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 1b3285ddce..58aaba4369 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -852,6 +852,13 @@ class Card(_Verify):\n                     values.append(vc)\n                     continue\n \n+                # Should match a string followed by a comment; if not it\n+                # might be an invalid Card, so we just take it verbatim\n+                m = self._strg_comment_RE.match(vc)\n+                if not m:\n+                    return kw, vc\n+\n+\n                 # Should match a string followed by a comment; if not it\n                 # might be an invalid Card, so we just take it verbatim\n                 m = self._strg_comment_RE.match(vc)\n@@ -859,7 +866,7 @@ class Card(_Verify):\n                     return kw, vc\n \n                 value = m.group(\"strg\") or \"\"\n-                value = value.rstrip().replace(\"''\", \"'\")\n+                value = value.rstrip()\n                 if value and value[-1] == \"&\":\n                     value = value[:-1]\n                 values.append(value)\n@@ -871,7 +878,18 @@ class Card(_Verify):\n                 valuecomment = \"\".join(values)\n             else:\n                 # CONTINUE card\n-                valuecomment = f\"'{''.join(values)}' / {' '.join(comments)}\"\n+                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n+            return keyword, valuecomment\n+                comment = m.group(\"comm\")\n+                if comment:\n+                    comments.append(comment.rstrip())\n+\n+\n+            if keyword in self._commentary_keywords:\n+                valuecomment = \"\".join(values)\n+            else:\n+                # CONTINUE card\n+                valuecomment = f\"'{''.join(values).replace(\\\"''\\\", \\\"'\\\")}' / {' '.join(comments)}\"\n             return keyword, valuecomment\n \n         if self.keyword in self._special_keywords:\n"
  }
}