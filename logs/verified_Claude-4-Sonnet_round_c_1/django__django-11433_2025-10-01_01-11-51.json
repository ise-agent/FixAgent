{
  "zero_patches": {
    "Location 1 (/root/hy/projects/django/django/forms/forms.py lines 409-409)": "\n    def _clean_form(self):\n        try:\n            cleaned_data = self.clean()\n        except ValidationError as e:\n            self.add_error(None, e)\n        else:\n            if cleaned_data is not None:\n                self.cleaned_data.update(cleaned_data)\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects/django/django/forms/forms.py lines 409-409)": [
      "\n    def _clean_form(self):\n        try:\n            cleaned_data = self.clean()\n        except ValidationError as e:\n            self.add_error(None, e)\n        else:\n            if cleaned_data is not None:\n                self.cleaned_data.update(cleaned_data)\n",
      "\n    def _clean_form(self):\n        try:\n            cleaned_data = self.clean()\n        except ValidationError as e:\n            self.add_error(None, e)\n        else:\n            if cleaned_data is not None:\n                self.cleaned_data.update(cleaned_data)\n",
      "\ndef _clean_form(self):\n    try:\n        cleaned_data = self.clean()\n    except ValidationError as e:\n        self.add_error(None, e)\n    else:\n        if cleaned_data is not None:\n            self.cleaned_data.update(cleaned_data)\n",
      "\n    def _clean_form(self):\n        try:\n            cleaned_data = self.clean()\n        except ValidationError as e:\n            self.add_error(None, e)\n        else:\n            if cleaned_data is not None:\n                self.cleaned_data.update(cleaned_data)\n",
      "\n    def _clean_form(self):\n        try:\n            cleaned_data = self.clean()\n        except ValidationError as e:\n            self.add_error(None, e)\n        else:\n            if cleaned_data is not None:\n                self.cleaned_data.update(cleaned_data)\n",
      "\ndef _clean_form(self):\n    try:\n        cleaned_data = self.clean()\n    except ValidationError as e:\n        self.add_error(None, e)\n    else:\n        if cleaned_data is not None:\n            self.cleaned_data.update(cleaned_data)\n",
      "\n    def _clean_form(self):\n        try:\n            cleaned_data = self.clean()\n        except ValidationError as e:\n            self.add_error(None, e)\n        else:\n            if cleaned_data is not None:\n                self.cleaned_data.update(cleaned_data)\n",
      "\n    def _clean_form(self):\n        try:\n            cleaned_data = self.clean()\n        except ValidationError as e:\n            self.add_error(None, e)\n        else:\n            if cleaned_data is not None:\n                self.cleaned_data.update(cleaned_data)\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/django/forms/forms.py b/django/forms/forms.py\nindex 0ab25643da..d0d8103b8a 100644\n--- a/django/forms/forms.py\n+++ b/django/forms/forms.py\n@@ -406,7 +406,8 @@ class BaseForm:\n             self.add_error(None, e)\n         else:\n             if cleaned_data is not None:\n-                self.cleaned_data = cleaned_data\n+\n+                self.cleaned_data.update(cleaned_data)\n \n     def _post_clean(self):\n         \"\"\"\n",
    "variant_0": "diff --git a/django/forms/forms.py b/django/forms/forms.py\nindex 0ab25643da..b0178a1462 100644\n--- a/django/forms/forms.py\n+++ b/django/forms/forms.py\n@@ -406,7 +406,15 @@ class BaseForm:\n             self.add_error(None, e)\n         else:\n             if cleaned_data is not None:\n-                self.cleaned_data = cleaned_data\n+\n+    def _clean_form(self):\n+        try:\n+            cleaned_data = self.clean()\n+        except ValidationError as e:\n+            self.add_error(None, e)\n+        else:\n+            if cleaned_data is not None:\n+                self.cleaned_data.update(cleaned_data)\n \n     def _post_clean(self):\n         \"\"\"\n",
    "variant_1": "diff --git a/django/forms/forms.py b/django/forms/forms.py\nindex 0ab25643da..b0178a1462 100644\n--- a/django/forms/forms.py\n+++ b/django/forms/forms.py\n@@ -406,7 +406,15 @@ class BaseForm:\n             self.add_error(None, e)\n         else:\n             if cleaned_data is not None:\n-                self.cleaned_data = cleaned_data\n+\n+    def _clean_form(self):\n+        try:\n+            cleaned_data = self.clean()\n+        except ValidationError as e:\n+            self.add_error(None, e)\n+        else:\n+            if cleaned_data is not None:\n+                self.cleaned_data.update(cleaned_data)\n \n     def _post_clean(self):\n         \"\"\"\n",
    "variant_2": "diff --git a/django/forms/forms.py b/django/forms/forms.py\nindex 0ab25643da..b0178a1462 100644\n--- a/django/forms/forms.py\n+++ b/django/forms/forms.py\n@@ -406,7 +406,15 @@ class BaseForm:\n             self.add_error(None, e)\n         else:\n             if cleaned_data is not None:\n-                self.cleaned_data = cleaned_data\n+\n+    def _clean_form(self):\n+        try:\n+            cleaned_data = self.clean()\n+        except ValidationError as e:\n+            self.add_error(None, e)\n+        else:\n+            if cleaned_data is not None:\n+                self.cleaned_data.update(cleaned_data)\n \n     def _post_clean(self):\n         \"\"\"\n",
    "variant_3": "diff --git a/django/forms/forms.py b/django/forms/forms.py\nindex 0ab25643da..8a9d5de187 100644\n--- a/django/forms/forms.py\n+++ b/django/forms/forms.py\n@@ -406,7 +406,15 @@ class BaseForm:\n             self.add_error(None, e)\n         else:\n             if cleaned_data is not None:\n-                self.cleaned_data = cleaned_data\n+\n+def _clean_form(self):\n+    try:\n+        cleaned_data = self.clean()\n+    except ValidationError as e:\n+        self.add_error(None, e)\n+    else:\n+        if cleaned_data is not None:\n+            self.cleaned_data.update(cleaned_data)\n \n     def _post_clean(self):\n         \"\"\"\n",
    "variant_4": "diff --git a/django/forms/forms.py b/django/forms/forms.py\nindex 0ab25643da..b0178a1462 100644\n--- a/django/forms/forms.py\n+++ b/django/forms/forms.py\n@@ -406,7 +406,15 @@ class BaseForm:\n             self.add_error(None, e)\n         else:\n             if cleaned_data is not None:\n-                self.cleaned_data = cleaned_data\n+\n+    def _clean_form(self):\n+        try:\n+            cleaned_data = self.clean()\n+        except ValidationError as e:\n+            self.add_error(None, e)\n+        else:\n+            if cleaned_data is not None:\n+                self.cleaned_data.update(cleaned_data)\n \n     def _post_clean(self):\n         \"\"\"\n",
    "variant_5": "diff --git a/django/forms/forms.py b/django/forms/forms.py\nindex 0ab25643da..b0178a1462 100644\n--- a/django/forms/forms.py\n+++ b/django/forms/forms.py\n@@ -406,7 +406,15 @@ class BaseForm:\n             self.add_error(None, e)\n         else:\n             if cleaned_data is not None:\n-                self.cleaned_data = cleaned_data\n+\n+    def _clean_form(self):\n+        try:\n+            cleaned_data = self.clean()\n+        except ValidationError as e:\n+            self.add_error(None, e)\n+        else:\n+            if cleaned_data is not None:\n+                self.cleaned_data.update(cleaned_data)\n \n     def _post_clean(self):\n         \"\"\"\n",
    "variant_6": "diff --git a/django/forms/forms.py b/django/forms/forms.py\nindex 0ab25643da..8a9d5de187 100644\n--- a/django/forms/forms.py\n+++ b/django/forms/forms.py\n@@ -406,7 +406,15 @@ class BaseForm:\n             self.add_error(None, e)\n         else:\n             if cleaned_data is not None:\n-                self.cleaned_data = cleaned_data\n+\n+def _clean_form(self):\n+    try:\n+        cleaned_data = self.clean()\n+    except ValidationError as e:\n+        self.add_error(None, e)\n+    else:\n+        if cleaned_data is not None:\n+            self.cleaned_data.update(cleaned_data)\n \n     def _post_clean(self):\n         \"\"\"\n",
    "variant_7": "diff --git a/django/forms/forms.py b/django/forms/forms.py\nindex 0ab25643da..b0178a1462 100644\n--- a/django/forms/forms.py\n+++ b/django/forms/forms.py\n@@ -406,7 +406,15 @@ class BaseForm:\n             self.add_error(None, e)\n         else:\n             if cleaned_data is not None:\n-                self.cleaned_data = cleaned_data\n+\n+    def _clean_form(self):\n+        try:\n+            cleaned_data = self.clean()\n+        except ValidationError as e:\n+            self.add_error(None, e)\n+        else:\n+            if cleaned_data is not None:\n+                self.cleaned_data.update(cleaned_data)\n \n     def _post_clean(self):\n         \"\"\"\n",
    "variant_8": "diff --git a/django/forms/forms.py b/django/forms/forms.py\nindex 0ab25643da..b0178a1462 100644\n--- a/django/forms/forms.py\n+++ b/django/forms/forms.py\n@@ -406,7 +406,15 @@ class BaseForm:\n             self.add_error(None, e)\n         else:\n             if cleaned_data is not None:\n-                self.cleaned_data = cleaned_data\n+\n+    def _clean_form(self):\n+        try:\n+            cleaned_data = self.clean()\n+        except ValidationError as e:\n+            self.add_error(None, e)\n+        else:\n+            if cleaned_data is not None:\n+                self.cleaned_data.update(cleaned_data)\n \n     def _post_clean(self):\n         \"\"\"\n"
  }
}