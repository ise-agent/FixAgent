{
  "zero_patches": {
    "Location 1 (/root/hy/projects/astropy/astropy/units/quantity.py lines 299-301)": "\n                if not (np.can_cast(value.dtype, np.float32) or\n                        value.dtype.fields):\n                    dtype = float\n",
    "Location 2 (/root/hy/projects/astropy/astropy/units/quantity.py lines 380-383)": "\n        # by default, cast any integer, boolean, etc., to float\n        if dtype is None and (not (np.can_cast(value.dtype, np.float32)\n                                   or value.dtype.fields)\n                              or value.dtype.kind == 'O'):\n            value = value.astype(float)\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects/astropy/astropy/units/quantity.py lines 299-301)": [
      "\n                if not (np.can_cast(value.dtype, np.float32) or\n                        value.dtype.fields):\n                    dtype = float\n",
      "\n                if not (np.can_cast(value.dtype, np.float32) or\n                        value.dtype.fields):\n                    dtype = float\n",
      "\n                if not (np.can_cast(value.dtype, np.float32) or\n                        value.dtype.fields):\n                    dtype = float\n",
      "\n                if not (np.can_cast(value.dtype, np.float32) or\n                        value.dtype.fields):\n                    dtype = float\n",
      "\n                if not (np.can_cast(value.dtype, np.float32) or\n                        value.dtype.fields):\n                    dtype = float\n",
      "\n                if not (np.can_cast(value.dtype, np.float32) or\n                        value.dtype.fields):\n                    dtype = float\n",
      "\n                if not (np.can_cast(value.dtype, np.float32) or\n                        value.dtype.fields):\n                    dtype = float\n",
      "\n                if not (np.can_cast(value.dtype, np.float32) or\n                        value.dtype.fields):\n                    dtype = float\n"
    ],
    "Location 2 (/root/hy/projects/astropy/astropy/units/quantity.py lines 380-383)": [
      "\n        # by default, cast any integer, boolean, etc., to float\n        if dtype is None and (not (np.can_cast(value.dtype, np.float32)\n                                   or value.dtype.fields)\n                              or value.dtype.kind == 'O'):\n            value = value.astype(float)\n",
      "\n        # by default, cast any integer, boolean, etc., to float\n        if dtype is None and (not (np.can_cast(value.dtype, np.float32)\n                                   or value.dtype.fields)\n                              or value.dtype.kind == 'O'):\n            value = value.astype(float)\n",
      "\n        # by default, cast any integer, boolean, etc., to float\n        if dtype is None and (not (np.can_cast(value.dtype, np.float32)\n                                   or value.dtype.fields)\n                              or value.dtype.kind == 'O'):\n            value = value.astype(float)\n",
      "\n        # by default, cast any integer, boolean, etc., to float\n        if dtype is None and (not (np.can_cast(value.dtype, np.float32)\n                                   or value.dtype.fields)\n                              or value.dtype.kind == 'O'):\n            value = value.astype(float)\n",
      "\n        # by default, cast any integer, boolean, etc., to float\n        if dtype is None and (not (np.can_cast(value.dtype, np.float32)\n                                   or value.dtype.fields)\n                              or value.dtype.kind == 'O'):\n            value = value.astype(float)\n",
      "\n        # by default, cast any integer, boolean, etc., to float\n        if dtype is None and (not (np.can_cast(value.dtype, np.float32)\n                                   or value.dtype.fields)\n                              or value.dtype.kind == 'O'):\n            value = value.astype(float)\n",
      "\n        # by default, cast any integer, boolean, etc., to float\n        if dtype is None and (not (np.can_cast(value.dtype, np.float32)\n                                   or value.dtype.fields)\n                              or value.dtype.kind == 'O'):\n            value = value.astype(float)\n",
      "\n        # by default, cast any integer, boolean, etc., to float\n        if dtype is None and (not (np.can_cast(value.dtype, np.float32)\n                                   or value.dtype.fields)\n                              or value.dtype.kind == 'O'):\n            value = value.astype(float)\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/astropy/units/quantity.py b/astropy/units/quantity.py\nindex ded609cbe9..f963009f93 100644\n--- a/astropy/units/quantity.py\n+++ b/astropy/units/quantity.py\n@@ -296,7 +296,8 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n                 if not copy:\n                     return value\n \n-                if not (np.can_cast(np.float32, value.dtype) or\n+\n+                if not (np.can_cast(value.dtype, np.float32) or\n                         value.dtype.fields):\n                     dtype = float\n \n@@ -377,7 +378,8 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n                             \"Numpy numeric type.\")\n \n         # by default, cast any integer, boolean, etc., to float\n-        if dtype is None and (not (np.can_cast(np.float32, value.dtype)\n+\n+        if dtype is None and (not (np.can_cast(value.dtype, np.float32)\n                                    or value.dtype.fields)\n                               or value.dtype.kind == 'O'):\n             value = value.astype(float)\n",
    "variant_0": "diff --git a/astropy/units/quantity.py b/astropy/units/quantity.py\nindex ded609cbe9..1c111e6e33 100644\n--- a/astropy/units/quantity.py\n+++ b/astropy/units/quantity.py\n@@ -296,7 +296,8 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n                 if not copy:\n                     return value\n \n-                if not (np.can_cast(np.float32, value.dtype) or\n+\n+                if not (np.can_cast(value.dtype, np.float32) or\n                         value.dtype.fields):\n                     dtype = float\n \n@@ -377,7 +378,9 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n                             \"Numpy numeric type.\")\n \n         # by default, cast any integer, boolean, etc., to float\n-        if dtype is None and (not (np.can_cast(np.float32, value.dtype)\n+\n+        # by default, cast any integer, boolean, etc., to float\n+        if dtype is None and (not (np.can_cast(value.dtype, np.float32)\n                                    or value.dtype.fields)\n                               or value.dtype.kind == 'O'):\n             value = value.astype(float)\n",
    "variant_1": "diff --git a/astropy/units/quantity.py b/astropy/units/quantity.py\nindex ded609cbe9..1c111e6e33 100644\n--- a/astropy/units/quantity.py\n+++ b/astropy/units/quantity.py\n@@ -296,7 +296,8 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n                 if not copy:\n                     return value\n \n-                if not (np.can_cast(np.float32, value.dtype) or\n+\n+                if not (np.can_cast(value.dtype, np.float32) or\n                         value.dtype.fields):\n                     dtype = float\n \n@@ -377,7 +378,9 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n                             \"Numpy numeric type.\")\n \n         # by default, cast any integer, boolean, etc., to float\n-        if dtype is None and (not (np.can_cast(np.float32, value.dtype)\n+\n+        # by default, cast any integer, boolean, etc., to float\n+        if dtype is None and (not (np.can_cast(value.dtype, np.float32)\n                                    or value.dtype.fields)\n                               or value.dtype.kind == 'O'):\n             value = value.astype(float)\n",
    "variant_2": "diff --git a/astropy/units/quantity.py b/astropy/units/quantity.py\nindex ded609cbe9..1c111e6e33 100644\n--- a/astropy/units/quantity.py\n+++ b/astropy/units/quantity.py\n@@ -296,7 +296,8 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n                 if not copy:\n                     return value\n \n-                if not (np.can_cast(np.float32, value.dtype) or\n+\n+                if not (np.can_cast(value.dtype, np.float32) or\n                         value.dtype.fields):\n                     dtype = float\n \n@@ -377,7 +378,9 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n                             \"Numpy numeric type.\")\n \n         # by default, cast any integer, boolean, etc., to float\n-        if dtype is None and (not (np.can_cast(np.float32, value.dtype)\n+\n+        # by default, cast any integer, boolean, etc., to float\n+        if dtype is None and (not (np.can_cast(value.dtype, np.float32)\n                                    or value.dtype.fields)\n                               or value.dtype.kind == 'O'):\n             value = value.astype(float)\n",
    "variant_3": "diff --git a/astropy/units/quantity.py b/astropy/units/quantity.py\nindex ded609cbe9..1c111e6e33 100644\n--- a/astropy/units/quantity.py\n+++ b/astropy/units/quantity.py\n@@ -296,7 +296,8 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n                 if not copy:\n                     return value\n \n-                if not (np.can_cast(np.float32, value.dtype) or\n+\n+                if not (np.can_cast(value.dtype, np.float32) or\n                         value.dtype.fields):\n                     dtype = float\n \n@@ -377,7 +378,9 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n                             \"Numpy numeric type.\")\n \n         # by default, cast any integer, boolean, etc., to float\n-        if dtype is None and (not (np.can_cast(np.float32, value.dtype)\n+\n+        # by default, cast any integer, boolean, etc., to float\n+        if dtype is None and (not (np.can_cast(value.dtype, np.float32)\n                                    or value.dtype.fields)\n                               or value.dtype.kind == 'O'):\n             value = value.astype(float)\n",
    "variant_4": "diff --git a/astropy/units/quantity.py b/astropy/units/quantity.py\nindex ded609cbe9..1c111e6e33 100644\n--- a/astropy/units/quantity.py\n+++ b/astropy/units/quantity.py\n@@ -296,7 +296,8 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n                 if not copy:\n                     return value\n \n-                if not (np.can_cast(np.float32, value.dtype) or\n+\n+                if not (np.can_cast(value.dtype, np.float32) or\n                         value.dtype.fields):\n                     dtype = float\n \n@@ -377,7 +378,9 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n                             \"Numpy numeric type.\")\n \n         # by default, cast any integer, boolean, etc., to float\n-        if dtype is None and (not (np.can_cast(np.float32, value.dtype)\n+\n+        # by default, cast any integer, boolean, etc., to float\n+        if dtype is None and (not (np.can_cast(value.dtype, np.float32)\n                                    or value.dtype.fields)\n                               or value.dtype.kind == 'O'):\n             value = value.astype(float)\n",
    "variant_5": "diff --git a/astropy/units/quantity.py b/astropy/units/quantity.py\nindex ded609cbe9..1c111e6e33 100644\n--- a/astropy/units/quantity.py\n+++ b/astropy/units/quantity.py\n@@ -296,7 +296,8 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n                 if not copy:\n                     return value\n \n-                if not (np.can_cast(np.float32, value.dtype) or\n+\n+                if not (np.can_cast(value.dtype, np.float32) or\n                         value.dtype.fields):\n                     dtype = float\n \n@@ -377,7 +378,9 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n                             \"Numpy numeric type.\")\n \n         # by default, cast any integer, boolean, etc., to float\n-        if dtype is None and (not (np.can_cast(np.float32, value.dtype)\n+\n+        # by default, cast any integer, boolean, etc., to float\n+        if dtype is None and (not (np.can_cast(value.dtype, np.float32)\n                                    or value.dtype.fields)\n                               or value.dtype.kind == 'O'):\n             value = value.astype(float)\n",
    "variant_6": "diff --git a/astropy/units/quantity.py b/astropy/units/quantity.py\nindex ded609cbe9..1c111e6e33 100644\n--- a/astropy/units/quantity.py\n+++ b/astropy/units/quantity.py\n@@ -296,7 +296,8 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n                 if not copy:\n                     return value\n \n-                if not (np.can_cast(np.float32, value.dtype) or\n+\n+                if not (np.can_cast(value.dtype, np.float32) or\n                         value.dtype.fields):\n                     dtype = float\n \n@@ -377,7 +378,9 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n                             \"Numpy numeric type.\")\n \n         # by default, cast any integer, boolean, etc., to float\n-        if dtype is None and (not (np.can_cast(np.float32, value.dtype)\n+\n+        # by default, cast any integer, boolean, etc., to float\n+        if dtype is None and (not (np.can_cast(value.dtype, np.float32)\n                                    or value.dtype.fields)\n                               or value.dtype.kind == 'O'):\n             value = value.astype(float)\n",
    "variant_7": "diff --git a/astropy/units/quantity.py b/astropy/units/quantity.py\nindex ded609cbe9..1c111e6e33 100644\n--- a/astropy/units/quantity.py\n+++ b/astropy/units/quantity.py\n@@ -296,7 +296,8 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n                 if not copy:\n                     return value\n \n-                if not (np.can_cast(np.float32, value.dtype) or\n+\n+                if not (np.can_cast(value.dtype, np.float32) or\n                         value.dtype.fields):\n                     dtype = float\n \n@@ -377,7 +378,9 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n                             \"Numpy numeric type.\")\n \n         # by default, cast any integer, boolean, etc., to float\n-        if dtype is None and (not (np.can_cast(np.float32, value.dtype)\n+\n+        # by default, cast any integer, boolean, etc., to float\n+        if dtype is None and (not (np.can_cast(value.dtype, np.float32)\n                                    or value.dtype.fields)\n                               or value.dtype.kind == 'O'):\n             value = value.astype(float)\n",
    "variant_8": "diff --git a/astropy/units/quantity.py b/astropy/units/quantity.py\nindex ded609cbe9..1c111e6e33 100644\n--- a/astropy/units/quantity.py\n+++ b/astropy/units/quantity.py\n@@ -296,7 +296,8 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n                 if not copy:\n                     return value\n \n-                if not (np.can_cast(np.float32, value.dtype) or\n+\n+                if not (np.can_cast(value.dtype, np.float32) or\n                         value.dtype.fields):\n                     dtype = float\n \n@@ -377,7 +378,9 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):\n                             \"Numpy numeric type.\")\n \n         # by default, cast any integer, boolean, etc., to float\n-        if dtype is None and (not (np.can_cast(np.float32, value.dtype)\n+\n+        # by default, cast any integer, boolean, etc., to float\n+        if dtype is None and (not (np.can_cast(value.dtype, np.float32)\n                                    or value.dtype.fields)\n                               or value.dtype.kind == 'O'):\n             value = value.astype(float)\n"
  }
}