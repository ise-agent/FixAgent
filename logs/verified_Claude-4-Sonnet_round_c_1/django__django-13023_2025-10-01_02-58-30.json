{
  "zero_patches": {
    "Location 1 (/root/hy/projects/django/django/forms/fields.py lines 347-350)": "\n        try:\n            value = Decimal(value)\n        except (DecimalException, TypeError):\n            raise ValidationError(self.error_messages['invalid'], code='invalid')\n"
  },
  "variant_patches": {
    "Location 1 (/root/hy/projects/django/django/forms/fields.py lines 347-350)": [
      "\n        try:\n            value = Decimal(value)\n        except (DecimalException, TypeError):\n            raise ValidationError(self.error_messages['invalid'], code='invalid')\n",
      "\n        try:\n            value = Decimal(value)\n        except (DecimalException, TypeError):\n            raise ValidationError(self.error_messages['invalid'], code='invalid')\n",
      "\n        try:\n            value = Decimal(value)\n        except (DecimalException, TypeError):\n            raise ValidationError(self.error_messages['invalid'], code='invalid')\n",
      "\n        try:\n            value = Decimal(value)\n        except (DecimalException, TypeError):\n            raise ValidationError(self.error_messages['invalid'], code='invalid')\n",
      "\n        try:\n            value = Decimal(value)\n        except (DecimalException, TypeError):\n            raise ValidationError(self.error_messages['invalid'], code='invalid')\n",
      "\n        try:\n            value = Decimal(value)\n        except (DecimalException, TypeError):\n            raise ValidationError(self.error_messages['invalid'], code='invalid')\n",
      "\n        try:\n            value = Decimal(value)\n        except (DecimalException, TypeError):\n            raise ValidationError(self.error_messages['invalid'], code='invalid')\n",
      "\n        try:\n            value = Decimal(value)\n        except (DecimalException, TypeError):\n            raise ValidationError(self.error_messages['invalid'], code='invalid')\n"
    ]
  },
  "combined_diffs": {
    "raw_patch": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex 36dad72704..fae5797e23 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -344,9 +344,10 @@ class DecimalField(IntegerField):\n         if self.localize:\n             value = formats.sanitize_separators(value)\n         value = str(value).strip()\n+\n         try:\n             value = Decimal(value)\n-        except DecimalException:\n+        except (DecimalException, TypeError):\n             raise ValidationError(self.error_messages['invalid'], code='invalid')\n         return value\n \n",
    "variant_0": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex 36dad72704..fae5797e23 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -344,9 +344,10 @@ class DecimalField(IntegerField):\n         if self.localize:\n             value = formats.sanitize_separators(value)\n         value = str(value).strip()\n+\n         try:\n             value = Decimal(value)\n-        except DecimalException:\n+        except (DecimalException, TypeError):\n             raise ValidationError(self.error_messages['invalid'], code='invalid')\n         return value\n \n",
    "variant_1": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex 36dad72704..fae5797e23 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -344,9 +344,10 @@ class DecimalField(IntegerField):\n         if self.localize:\n             value = formats.sanitize_separators(value)\n         value = str(value).strip()\n+\n         try:\n             value = Decimal(value)\n-        except DecimalException:\n+        except (DecimalException, TypeError):\n             raise ValidationError(self.error_messages['invalid'], code='invalid')\n         return value\n \n",
    "variant_2": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex 36dad72704..fae5797e23 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -344,9 +344,10 @@ class DecimalField(IntegerField):\n         if self.localize:\n             value = formats.sanitize_separators(value)\n         value = str(value).strip()\n+\n         try:\n             value = Decimal(value)\n-        except DecimalException:\n+        except (DecimalException, TypeError):\n             raise ValidationError(self.error_messages['invalid'], code='invalid')\n         return value\n \n",
    "variant_3": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex 36dad72704..fae5797e23 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -344,9 +344,10 @@ class DecimalField(IntegerField):\n         if self.localize:\n             value = formats.sanitize_separators(value)\n         value = str(value).strip()\n+\n         try:\n             value = Decimal(value)\n-        except DecimalException:\n+        except (DecimalException, TypeError):\n             raise ValidationError(self.error_messages['invalid'], code='invalid')\n         return value\n \n",
    "variant_4": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex 36dad72704..fae5797e23 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -344,9 +344,10 @@ class DecimalField(IntegerField):\n         if self.localize:\n             value = formats.sanitize_separators(value)\n         value = str(value).strip()\n+\n         try:\n             value = Decimal(value)\n-        except DecimalException:\n+        except (DecimalException, TypeError):\n             raise ValidationError(self.error_messages['invalid'], code='invalid')\n         return value\n \n",
    "variant_5": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex 36dad72704..fae5797e23 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -344,9 +344,10 @@ class DecimalField(IntegerField):\n         if self.localize:\n             value = formats.sanitize_separators(value)\n         value = str(value).strip()\n+\n         try:\n             value = Decimal(value)\n-        except DecimalException:\n+        except (DecimalException, TypeError):\n             raise ValidationError(self.error_messages['invalid'], code='invalid')\n         return value\n \n",
    "variant_6": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex 36dad72704..fae5797e23 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -344,9 +344,10 @@ class DecimalField(IntegerField):\n         if self.localize:\n             value = formats.sanitize_separators(value)\n         value = str(value).strip()\n+\n         try:\n             value = Decimal(value)\n-        except DecimalException:\n+        except (DecimalException, TypeError):\n             raise ValidationError(self.error_messages['invalid'], code='invalid')\n         return value\n \n",
    "variant_7": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex 36dad72704..fae5797e23 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -344,9 +344,10 @@ class DecimalField(IntegerField):\n         if self.localize:\n             value = formats.sanitize_separators(value)\n         value = str(value).strip()\n+\n         try:\n             value = Decimal(value)\n-        except DecimalException:\n+        except (DecimalException, TypeError):\n             raise ValidationError(self.error_messages['invalid'], code='invalid')\n         return value\n \n",
    "variant_8": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex 36dad72704..fae5797e23 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -344,9 +344,10 @@ class DecimalField(IntegerField):\n         if self.localize:\n             value = formats.sanitize_separators(value)\n         value = str(value).strip()\n+\n         try:\n             value = Decimal(value)\n-        except DecimalException:\n+        except (DecimalException, TypeError):\n             raise ValidationError(self.error_messages['invalid'], code='invalid')\n         return value\n \n"
  }
}